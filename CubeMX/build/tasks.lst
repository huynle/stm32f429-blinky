ARM GAS  /tmp/cc6UspJj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvTaskIsTaskSuspended:
  26              	.LVL0:
  27              	.LFB15:
  28              		.file 1 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  /tmp/cc6UspJj.s 			page 2


  31:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  /tmp/cc6UspJj.s 			page 3


  88:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  /tmp/cc6UspJj.s 			page 4


 145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  /tmp/cc6UspJj.s 			page 5


 202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/cc6UspJj.s 			page 6


 259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
ARM GAS  /tmp/cc6UspJj.s 			page 7


 316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/cc6UspJj.s 			page 8


 373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/cc6UspJj.s 			page 9


 430:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  /tmp/cc6UspJj.s 			page 10


 487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/cc6UspJj.s 			page 11


 544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  /tmp/cc6UspJj.s 			page 12


 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc6UspJj.s 			page 13


 658:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/cc6UspJj.s 			page 14


 715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 15


 772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  /tmp/cc6UspJj.s 			page 16


 829:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
ARM GAS  /tmp/cc6UspJj.s 			page 17


 886:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
ARM GAS  /tmp/cc6UspJj.s 			page 18


 943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
ARM GAS  /tmp/cc6UspJj.s 			page 19


1000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
ARM GAS  /tmp/cc6UspJj.s 			page 20


1057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc6UspJj.s 			page 21


1114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  /tmp/cc6UspJj.s 			page 22


1171:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
ARM GAS  /tmp/cc6UspJj.s 			page 23


1228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  /tmp/cc6UspJj.s 			page 24


1285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  /tmp/cc6UspJj.s 			page 25


1342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc6UspJj.s 			page 26


1399:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
ARM GAS  /tmp/cc6UspJj.s 			page 27


1456:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  /tmp/cc6UspJj.s 			page 28


1513:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc6UspJj.s 			page 29


1570:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
ARM GAS  /tmp/cc6UspJj.s 			page 30


1627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc6UspJj.s 			page 31


1684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc6UspJj.s 			page 32


1741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc6UspJj.s 			page 33


1798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1806 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1807 2 view .LVU1
1808:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1808 2 view .LVU2
1809:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1814 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
  38              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1817 3 discriminator 2 view .LVU5
  40              		.loc 1 1817 7 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1817 5 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1807 13 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1807 13 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1814 3 is_stmt 1 view .LVU10
  54              	.LBB115:
  55              	.LBI115:
  56              		.file 2 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
ARM GAS  /tmp/cc6UspJj.s 			page 34


   7:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
ARM GAS  /tmp/cc6UspJj.s 			page 35


  64:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc6UspJj.s 			page 36


 121:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
ARM GAS  /tmp/cc6UspJj.s 			page 37


 178:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 191 30 view .LVU11
  58              	.LBB116:
 192:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  59              		.loc 2 193 1 view .LVU12
 194:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2 view .LVU13
  61              		.syntax unified
  62              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 195 2 is_stmt 0 view .LVU14
  74              	.LBE116:
  75              	.LBE115:
1814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU15
1814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  77              		.loc 1 1814 3 discriminator 1 view .LVU16
  78 001e FEE7     		b	.L3
  79              	.L9:
1818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  80              		.loc 1 1820 4 view .LVU17
  81              		.loc 1 1820 8 is_stmt 0 view .LVU18
  82 0020 836A     		ldr	r3, [r0, #40]
  83              		.loc 1 1820 6 view .LVU19
  84 0022 064A     		ldr	r2, .L10+4
  85 0024 9342     		cmp	r3, r2
  86 0026 02D0     		beq	.L6
1821:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
ARM GAS  /tmp/cc6UspJj.s 			page 38


  87              		.loc 1 1824 5 is_stmt 1 view .LVU20
  88              		.loc 1 1824 7 is_stmt 0 view .LVU21
  89 0028 1BB1     		cbz	r3, .L7
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  90              		.loc 1 1807 13 view .LVU22
  91 002a 0020     		movs	r0, #0
  92              	.LVL4:
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  93              		.loc 1 1807 13 view .LVU23
  94 002c 7047     		bx	lr
  95              	.LVL5:
  96              	.L6:
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  97              		.loc 1 1807 13 view .LVU24
  98 002e 0020     		movs	r0, #0
  99              	.LVL6:
1807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 100              		.loc 1 1807 13 view .LVU25
 101 0030 7047     		bx	lr
 102              	.LVL7:
 103              	.L7:
1825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 104              		.loc 1 1826 14 view .LVU26
 105 0032 0120     		movs	r0, #1
 106              	.LVL8:
1827:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 107              		.loc 1 1840 28 is_stmt 1 view .LVU27
1841:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 108              		.loc 1 1843 3 view .LVU28
1844:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 109              		.loc 1 1844 2 is_stmt 0 view .LVU29
 110 0034 7047     		bx	lr
 111              	.L11:
 112 0036 00BF     		.align	2
 113              	.L10:
 114 0038 00000000 		.word	.LANCHOR0
 115 003c 00000000 		.word	.LANCHOR1
 116              		.cfi_endproc
 117              	.LFE15:
 119              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 120              		.align	1
ARM GAS  /tmp/cc6UspJj.s 			page 39


 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	prvResetNextTaskUnblockTime:
 127              	.LFB45:
1845:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc6UspJj.s 			page 40


1896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cc6UspJj.s 			page 41


1953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
ARM GAS  /tmp/cc6UspJj.s 			page 42


2010:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
ARM GAS  /tmp/cc6UspJj.s 			page 43


2067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
ARM GAS  /tmp/cc6UspJj.s 			page 44


2124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  /tmp/cc6UspJj.s 			page 45


2181:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  /tmp/cc6UspJj.s 			page 46


2238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc6UspJj.s 			page 47


2295:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/cc6UspJj.s 			page 48


2352:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/cc6UspJj.s 			page 49


2409:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
ARM GAS  /tmp/cc6UspJj.s 			page 50


2466:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2521:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 51


2523:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
ARM GAS  /tmp/cc6UspJj.s 			page 52


2580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
ARM GAS  /tmp/cc6UspJj.s 			page 53


2637:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc6UspJj.s 			page 54


2694:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
ARM GAS  /tmp/cc6UspJj.s 			page 55


2751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/cc6UspJj.s 			page 56


2808:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
ARM GAS  /tmp/cc6UspJj.s 			page 57


2865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc6UspJj.s 			page 58


2922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cc6UspJj.s 			page 59


2979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
ARM GAS  /tmp/cc6UspJj.s 			page 60


3036:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
ARM GAS  /tmp/cc6UspJj.s 			page 61


3093:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 62


3150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
ARM GAS  /tmp/cc6UspJj.s 			page 63


3207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/cc6UspJj.s 			page 64


3264:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3319:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
ARM GAS  /tmp/cc6UspJj.s 			page 65


3321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3376:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc6UspJj.s 			page 66


3378:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3433:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
ARM GAS  /tmp/cc6UspJj.s 			page 67


3435:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3490:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc6UspJj.s 			page 68


3492:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
ARM GAS  /tmp/cc6UspJj.s 			page 69


3549:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc6UspJj.s 			page 70


3606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc6UspJj.s 			page 71


3663:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
ARM GAS  /tmp/cc6UspJj.s 			page 72


3720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
ARM GAS  /tmp/cc6UspJj.s 			page 73


3777:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
ARM GAS  /tmp/cc6UspJj.s 			page 74


3834:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
ARM GAS  /tmp/cc6UspJj.s 			page 75


3891:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 128              		.loc 1 3944 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6UspJj.s 			page 76


 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
3945:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 133              		.loc 1 3945 1 view .LVU31
3946:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 134              		.loc 1 3947 2 view .LVU32
 135              		.loc 1 3947 6 is_stmt 0 view .LVU33
 136 0000 084B     		ldr	r3, .L15
 137 0002 1B68     		ldr	r3, [r3]
 138 0004 1B68     		ldr	r3, [r3]
 139              		.loc 1 3947 4 view .LVU34
 140 0006 23B9     		cbnz	r3, .L13
3948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 141              		.loc 1 3953 3 is_stmt 1 view .LVU35
 142              		.loc 1 3953 24 is_stmt 0 view .LVU36
 143 0008 074B     		ldr	r3, .L15+4
 144 000a 4FF0FF32 		mov	r2, #-1
 145 000e 1A60     		str	r2, [r3]
 146 0010 7047     		bx	lr
 147              	.L13:
3954:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 148              		.loc 1 3961 3 is_stmt 1 view .LVU37
 149              		.loc 1 3961 15 is_stmt 0 view .LVU38
 150 0012 044B     		ldr	r3, .L15
 151 0014 1B68     		ldr	r3, [r3]
 152 0016 DB68     		ldr	r3, [r3, #12]
 153              		.loc 1 3961 13 view .LVU39
 154 0018 DB68     		ldr	r3, [r3, #12]
 155              	.LVL9:
3962:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 156              		.loc 1 3962 3 is_stmt 1 view .LVU40
 157              		.loc 1 3962 26 is_stmt 0 view .LVU41
 158 001a 5A68     		ldr	r2, [r3, #4]
 159              		.loc 1 3962 24 view .LVU42
 160 001c 024B     		ldr	r3, .L15+4
 161              	.LVL10:
 162              		.loc 1 3962 24 view .LVU43
 163 001e 1A60     		str	r2, [r3]
3963:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 164              		.loc 1 3964 1 view .LVU44
 165 0020 7047     		bx	lr
 166              	.L16:
 167 0022 00BF     		.align	2
ARM GAS  /tmp/cc6UspJj.s 			page 77


 168              	.L15:
 169 0024 00000000 		.word	.LANCHOR2
 170 0028 00000000 		.word	.LANCHOR3
 171              		.cfi_endproc
 172              	.LFE45:
 174              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	prvInitialiseNewTask:
 182              	.LVL11:
 183              	.LFB7:
 832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 832 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 16, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 188              		.loc 1 832 1 is_stmt 0 view .LVU46
 189 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 190              	.LCFI0:
 191              		.cfi_def_cfa_offset 32
 192              		.cfi_offset 4, -32
 193              		.cfi_offset 5, -28
 194              		.cfi_offset 6, -24
 195              		.cfi_offset 7, -20
 196              		.cfi_offset 8, -16
 197              		.cfi_offset 9, -12
 198              		.cfi_offset 10, -8
 199              		.cfi_offset 14, -4
 200 0004 8046     		mov	r8, r0
 201 0006 0D46     		mov	r5, r1
 202 0008 1746     		mov	r7, r2
 203 000a 9946     		mov	r9, r3
 204 000c 089E     		ldr	r6, [sp, #32]
 205 000e DDF824A0 		ldr	r10, [sp, #36]
 206 0012 0A9C     		ldr	r4, [sp, #40]
 833:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 207              		.loc 1 833 1 is_stmt 1 view .LVU47
 834:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 208              		.loc 1 834 1 view .LVU48
 854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 209              		.loc 1 854 3 view .LVU49
 854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 210              		.loc 1 854 12 is_stmt 0 view .LVU50
 211 0014 9200     		lsls	r2, r2, #2
 212              	.LVL12:
 854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 213              		.loc 1 854 12 view .LVU51
 214 0016 A521     		movs	r1, #165
 215              	.LVL13:
 854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 216              		.loc 1 854 12 view .LVU52
 217 0018 206B     		ldr	r0, [r4, #48]
 218              	.LVL14:
ARM GAS  /tmp/cc6UspJj.s 			page 78


 854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 219              		.loc 1 854 12 view .LVU53
 220 001a FFF7FEFF 		bl	memset
 221              	.LVL15:
 864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 222              		.loc 1 864 3 is_stmt 1 view .LVU54
 864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 223              		.loc 1 864 29 is_stmt 0 view .LVU55
 224 001e 236B     		ldr	r3, [r4, #48]
 864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 864 38 view .LVU56
 226 0020 07F18042 		add	r2, r7, #1073741824
 227 0024 013A     		subs	r2, r2, #1
 864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 228              		.loc 1 864 16 view .LVU57
 229 0026 03EB8207 		add	r7, r3, r2, lsl #2
 230              	.LVL16:
 865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231              		.loc 1 865 3 is_stmt 1 view .LVU58
 865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 232              		.loc 1 865 81 is_stmt 0 view .LVU59
 233 002a 27F00707 		bic	r7, r7, #7
 234              	.LVL17:
 868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 235              		.loc 1 868 3 is_stmt 1 view .LVU60
 868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 236              		.loc 1 868 124 view .LVU61
 892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 237              		.loc 1 892 2 view .LVU62
 892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 238              		.loc 1 892 4 is_stmt 0 view .LVU63
 239 002e ADB3     		cbz	r5, .L29
 894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 240              		.loc 1 894 10 view .LVU64
 241 0030 4FF0000C 		mov	ip, #0
 242              	.LVL18:
 243              	.L18:
 894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 244              		.loc 1 894 33 is_stmt 1 discriminator 1 view .LVU65
 245 0034 BCF10F0F 		cmp	ip, #15
 246 0038 09D8     		bhi	.L20
 896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247              		.loc 1 896 4 view .LVU66
 896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 248              		.loc 1 896 38 is_stmt 0 view .LVU67
 249 003a 15F80C30 		ldrb	r3, [r5, ip]	@ zero_extendqisi2
 896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250              		.loc 1 896 30 view .LVU68
 251 003e 04EB0C02 		add	r2, r4, ip
 252 0042 82F83430 		strb	r3, [r2, #52]
 901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 253              		.loc 1 901 4 is_stmt 1 view .LVU69
 901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 254              		.loc 1 901 6 is_stmt 0 view .LVU70
 255 0046 13B1     		cbz	r3, .L20
 907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 256              		.loc 1 907 29 is_stmt 1 discriminator 2 view .LVU71
ARM GAS  /tmp/cc6UspJj.s 			page 79


 894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 257              		.loc 1 894 77 discriminator 2 view .LVU72
 258 0048 0CF1010C 		add	ip, ip, #1
 259              	.LVL19:
 894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 260              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU73
 261 004c F2E7     		b	.L18
 262              	.L20:
 913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 263              		.loc 1 913 3 is_stmt 1 view .LVU74
 913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 264              		.loc 1 913 55 is_stmt 0 view .LVU75
 265 004e 0023     		movs	r3, #0
 266 0050 84F84330 		strb	r3, [r4, #67]
 267              	.LVL20:
 268              	.L22:
 924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 269              		.loc 1 924 2 is_stmt 1 view .LVU76
 924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 270              		.loc 1 924 4 is_stmt 0 view .LVU77
 271 0054 062E     		cmp	r6, #6
 272 0056 00D9     		bls	.L23
 926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 273              		.loc 1 926 14 view .LVU78
 274 0058 0626     		movs	r6, #6
 275              	.L23:
 276              	.LVL21:
 930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 277              		.loc 1 930 27 is_stmt 1 view .LVU79
 933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 278              		.loc 1 933 2 view .LVU80
 933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 279              		.loc 1 933 23 is_stmt 0 view .LVU81
 280 005a E662     		str	r6, [r4, #44]
 936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 281              		.loc 1 936 3 is_stmt 1 view .LVU82
 936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 282              		.loc 1 936 28 is_stmt 0 view .LVU83
 283 005c 6664     		str	r6, [r4, #68]
 937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 284              		.loc 1 937 3 is_stmt 1 view .LVU84
 937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 285              		.loc 1 937 27 is_stmt 0 view .LVU85
 286 005e 0025     		movs	r5, #0
 287              	.LVL22:
 937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 288              		.loc 1 937 27 view .LVU86
 289 0060 A564     		str	r5, [r4, #72]
 941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 290              		.loc 1 941 2 is_stmt 1 view .LVU87
 291 0062 201D     		adds	r0, r4, #4
 292 0064 FFF7FEFF 		bl	vListInitialiseItem
 293              	.LVL23:
 942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 294              		.loc 1 942 2 view .LVU88
 295 0068 04F11800 		add	r0, r4, #24
 296 006c FFF7FEFF 		bl	vListInitialiseItem
ARM GAS  /tmp/cc6UspJj.s 			page 80


 297              	.LVL24:
 946:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 298              		.loc 1 946 2 view .LVU89
 299 0070 2461     		str	r4, [r4, #16]
 949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 300              		.loc 1 949 2 view .LVU90
 301 0072 C6F10706 		rsb	r6, r6, #7
 302              	.LVL25:
 949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 303              		.loc 1 949 2 is_stmt 0 view .LVU91
 304 0076 A661     		str	r6, [r4, #24]
 950:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305              		.loc 1 950 2 is_stmt 1 view .LVU92
 306 0078 6462     		str	r4, [r4, #36]
 960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 307              		.loc 1 960 3 view .LVU93
 960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 308              		.loc 1 960 23 is_stmt 0 view .LVU94
 309 007a E564     		str	r5, [r4, #76]
 977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 310              		.loc 1 977 3 is_stmt 1 view .LVU95
 992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 311              		.loc 1 992 3 view .LVU96
 992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 312              		.loc 1 992 29 is_stmt 0 view .LVU97
 313 007c 2565     		str	r5, [r4, #80]
 993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 314              		.loc 1 993 3 is_stmt 1 view .LVU98
 993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 315              		.loc 1 993 27 is_stmt 0 view .LVU99
 316 007e 84F85450 		strb	r5, [r4, #84]
1058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 317              		.loc 1 1058 4 is_stmt 1 view .LVU100
1058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 318              		.loc 1 1058 29 is_stmt 0 view .LVU101
 319 0082 4A46     		mov	r2, r9
 320 0084 4146     		mov	r1, r8
 321 0086 3846     		mov	r0, r7
 322 0088 FFF7FEFF 		bl	pxPortInitialiseStack
 323              	.LVL26:
1058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 324              		.loc 1 1058 27 view .LVU102
 325 008c 2060     		str	r0, [r4]
1064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 326              		.loc 1 1064 2 is_stmt 1 view .LVU103
1064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 327              		.loc 1 1064 4 is_stmt 0 view .LVU104
 328 008e BAF1000F 		cmp	r10, #0
 329 0092 01D0     		beq	.L17
1068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 330              		.loc 1 1068 3 is_stmt 1 view .LVU105
1068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 1068 18 is_stmt 0 view .LVU106
 332 0094 CAF80040 		str	r4, [r10]
1072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 333              		.loc 1 1072 27 is_stmt 1 view .LVU107
 334              	.L17:
ARM GAS  /tmp/cc6UspJj.s 			page 81


1074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 335              		.loc 1 1074 1 is_stmt 0 view .LVU108
 336 0098 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 337              	.LVL27:
 338              	.L29:
 919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 339              		.loc 1 919 3 is_stmt 1 view .LVU109
 919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 340              		.loc 1 919 29 is_stmt 0 view .LVU110
 341 009c 0023     		movs	r3, #0
 342 009e 84F83430 		strb	r3, [r4, #52]
 343 00a2 D7E7     		b	.L22
 344              		.cfi_endproc
 345              	.LFE7:
 347              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 348              		.align	1
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu fpv4-sp-d16
 354              	prvInitialiseTaskLists:
 355              	.LFB42:
3608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 356              		.loc 1 3608 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 38B5     		push	{r3, r4, r5, lr}
 361              	.LCFI1:
 362              		.cfi_def_cfa_offset 16
 363              		.cfi_offset 3, -16
 364              		.cfi_offset 4, -12
 365              		.cfi_offset 5, -8
 366              		.cfi_offset 14, -4
3609:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367              		.loc 1 3609 1 view .LVU112
3611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 368              		.loc 1 3611 2 view .LVU113
 369              	.LVL28:
3611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 370              		.loc 1 3611 18 is_stmt 0 view .LVU114
 371 0002 0024     		movs	r4, #0
3611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 372              		.loc 1 3611 2 view .LVU115
 373 0004 07E0     		b	.L31
 374              	.LVL29:
 375              	.L32:
3613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 376              		.loc 1 3613 3 is_stmt 1 discriminator 3 view .LVU116
 377 0006 04EB8402 		add	r2, r4, r4, lsl #2
 378 000a 9300     		lsls	r3, r2, #2
 379 000c 0E48     		ldr	r0, .L34
 380 000e 1844     		add	r0, r0, r3
 381 0010 FFF7FEFF 		bl	vListInitialise
 382              	.LVL30:
3611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 383              		.loc 1 3611 101 discriminator 3 view .LVU117
ARM GAS  /tmp/cc6UspJj.s 			page 82


 384 0014 0134     		adds	r4, r4, #1
 385              	.LVL31:
 386              	.L31:
3611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 387              		.loc 1 3611 51 discriminator 1 view .LVU118
 388 0016 062C     		cmp	r4, #6
 389 0018 F5D9     		bls	.L32
3616:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 390              		.loc 1 3616 2 view .LVU119
 391 001a 0C4D     		ldr	r5, .L34+4
 392 001c 2846     		mov	r0, r5
 393 001e FFF7FEFF 		bl	vListInitialise
 394              	.LVL32:
3617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 395              		.loc 1 3617 2 view .LVU120
 396 0022 0B4C     		ldr	r4, .L34+8
 397              	.LVL33:
3617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 398              		.loc 1 3617 2 is_stmt 0 view .LVU121
 399 0024 2046     		mov	r0, r4
 400 0026 FFF7FEFF 		bl	vListInitialise
 401              	.LVL34:
3618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402              		.loc 1 3618 2 is_stmt 1 view .LVU122
 403 002a 0A48     		ldr	r0, .L34+12
 404 002c FFF7FEFF 		bl	vListInitialise
 405              	.LVL35:
3622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 406              		.loc 1 3622 3 view .LVU123
 407 0030 0948     		ldr	r0, .L34+16
 408 0032 FFF7FEFF 		bl	vListInitialise
 409              	.LVL36:
3628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 410              		.loc 1 3628 3 view .LVU124
 411 0036 0948     		ldr	r0, .L34+20
 412 0038 FFF7FEFF 		bl	vListInitialise
 413              	.LVL37:
3634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 414              		.loc 1 3634 2 view .LVU125
3634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 415              		.loc 1 3634 20 is_stmt 0 view .LVU126
 416 003c 084B     		ldr	r3, .L34+24
 417 003e 1D60     		str	r5, [r3]
3635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 418              		.loc 1 3635 2 is_stmt 1 view .LVU127
3635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 419              		.loc 1 3635 28 is_stmt 0 view .LVU128
 420 0040 084B     		ldr	r3, .L34+28
 421 0042 1C60     		str	r4, [r3]
3636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 422              		.loc 1 3636 1 view .LVU129
 423 0044 38BD     		pop	{r3, r4, r5, pc}
 424              	.L35:
 425 0046 00BF     		.align	2
 426              	.L34:
 427 0048 00000000 		.word	.LANCHOR4
 428 004c 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/cc6UspJj.s 			page 83


 429 0050 00000000 		.word	.LANCHOR6
 430 0054 00000000 		.word	.LANCHOR1
 431 0058 00000000 		.word	.LANCHOR7
 432 005c 00000000 		.word	.LANCHOR0
 433 0060 00000000 		.word	.LANCHOR2
 434 0064 00000000 		.word	.LANCHOR8
 435              		.cfi_endproc
 436              	.LFE42:
 438              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 439              		.align	1
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	prvAddNewTaskToReadyList:
 446              	.LVL38:
 447              	.LFB8:
1078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 448              		.loc 1 1078 1 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
1078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 452              		.loc 1 1078 1 is_stmt 0 view .LVU131
 453 0000 10B5     		push	{r4, lr}
 454              	.LCFI2:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 458 0002 0446     		mov	r4, r0
1081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 459              		.loc 1 1081 2 is_stmt 1 view .LVU132
 460 0004 FFF7FEFF 		bl	vPortEnterCritical
 461              	.LVL39:
1083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 462              		.loc 1 1083 3 view .LVU133
1083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 463              		.loc 1 1083 25 is_stmt 0 view .LVU134
 464 0008 214A     		ldr	r2, .L43
 465 000a 1368     		ldr	r3, [r2]
 466 000c 0133     		adds	r3, r3, #1
 467 000e 1360     		str	r3, [r2]
1084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 468              		.loc 1 1084 3 is_stmt 1 view .LVU135
1084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 469              		.loc 1 1084 20 is_stmt 0 view .LVU136
 470 0010 204B     		ldr	r3, .L43+4
 471 0012 1B68     		ldr	r3, [r3]
1084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 472              		.loc 1 1084 5 view .LVU137
 473 0014 5BB1     		cbz	r3, .L41
1107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 474              		.loc 1 1107 4 is_stmt 1 view .LVU138
1107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 475              		.loc 1 1107 26 is_stmt 0 view .LVU139
 476 0016 204B     		ldr	r3, .L43+8
 477 0018 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6UspJj.s 			page 84


1107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 478              		.loc 1 1107 6 view .LVU140
 479 001a 6BB9     		cbnz	r3, .L38
1109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 480              		.loc 1 1109 5 is_stmt 1 view .LVU141
1109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 481              		.loc 1 1109 21 is_stmt 0 view .LVU142
 482 001c 1D4B     		ldr	r3, .L43+4
 483 001e 1B68     		ldr	r3, [r3]
 484 0020 DA6A     		ldr	r2, [r3, #44]
1109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 485              		.loc 1 1109 45 view .LVU143
 486 0022 E36A     		ldr	r3, [r4, #44]
1109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 487              		.loc 1 1109 7 view .LVU144
 488 0024 9A42     		cmp	r2, r3
 489 0026 07D8     		bhi	.L38
1111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 490              		.loc 1 1111 6 is_stmt 1 view .LVU145
1111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 491              		.loc 1 1111 19 is_stmt 0 view .LVU146
 492 0028 1A4B     		ldr	r3, .L43+4
 493 002a 1C60     		str	r4, [r3]
 494 002c 04E0     		b	.L38
 495              	.L41:
1088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 496              		.loc 1 1088 4 is_stmt 1 view .LVU147
1088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497              		.loc 1 1088 17 is_stmt 0 view .LVU148
 498 002e 194B     		ldr	r3, .L43+4
 499 0030 1C60     		str	r4, [r3]
1090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 500              		.loc 1 1090 4 is_stmt 1 view .LVU149
1090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 501              		.loc 1 1090 31 is_stmt 0 view .LVU150
 502 0032 1368     		ldr	r3, [r2]
1090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 503              		.loc 1 1090 6 view .LVU151
 504 0034 012B     		cmp	r3, #1
 505 0036 28D0     		beq	.L42
 506              	.L38:
1120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 507              		.loc 1 1120 29 is_stmt 1 view .LVU152
1124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508              		.loc 1 1124 3 view .LVU153
1124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509              		.loc 1 1124 15 is_stmt 0 view .LVU154
 510 0038 184A     		ldr	r2, .L43+12
 511 003a 1368     		ldr	r3, [r2]
 512 003c 0133     		adds	r3, r3, #1
 513 003e 1360     		str	r3, [r2]
1132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514              		.loc 1 1132 31 is_stmt 1 view .LVU155
1134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 515              		.loc 1 1134 3 view .LVU156
1134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516              		.loc 1 1134 3 view .LVU157
ARM GAS  /tmp/cc6UspJj.s 			page 85


 517 0040 E06A     		ldr	r0, [r4, #44]
 518 0042 0123     		movs	r3, #1
 519 0044 8340     		lsls	r3, r3, r0
 520 0046 164A     		ldr	r2, .L43+16
 521 0048 1168     		ldr	r1, [r2]
 522 004a 0B43     		orrs	r3, r3, r1
 523 004c 1360     		str	r3, [r2]
1134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 524              		.loc 1 1134 3 view .LVU158
 525 004e 00EB8000 		add	r0, r0, r0, lsl #2
 526 0052 211D     		adds	r1, r4, #4
 527 0054 134B     		ldr	r3, .L43+20
 528 0056 03EB8000 		add	r0, r3, r0, lsl #2
 529 005a FFF7FEFF 		bl	vListInsertEnd
 530              	.LVL40:
1134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531              		.loc 1 1134 36 view .LVU159
1136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 532              		.loc 1 1136 3 view .LVU160
1138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533              		.loc 1 1138 2 view .LVU161
 534 005e FFF7FEFF 		bl	vPortExitCritical
 535              	.LVL41:
1140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 536              		.loc 1 1140 2 view .LVU162
1140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 537              		.loc 1 1140 24 is_stmt 0 view .LVU163
 538 0062 0D4B     		ldr	r3, .L43+8
 539 0064 1B68     		ldr	r3, [r3]
1140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 540              		.loc 1 1140 4 view .LVU164
 541 0066 7BB1     		cbz	r3, .L36
1144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 542              		.loc 1 1144 3 is_stmt 1 view .LVU165
1144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 543              		.loc 1 1144 19 is_stmt 0 view .LVU166
 544 0068 0A4B     		ldr	r3, .L43+4
 545 006a 1B68     		ldr	r3, [r3]
 546 006c DA6A     		ldr	r2, [r3, #44]
1144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 547              		.loc 1 1144 42 view .LVU167
 548 006e E36A     		ldr	r3, [r4, #44]
1144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 549              		.loc 1 1144 5 view .LVU168
 550 0070 9A42     		cmp	r2, r3
 551 0072 09D2     		bcs	.L36
1146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 552              		.loc 1 1146 4 is_stmt 1 view .LVU169
 553 0074 4FF0E023 		mov	r3, #-536813568
 554 0078 4FF08052 		mov	r2, #268435456
 555 007c C3F8042D 		str	r2, [r3, #3332]
1146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 556              		.loc 1 1146 4 view .LVU170
 557              		.syntax unified
 558              	@ 1146 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 559 0080 BFF34F8F 		dsb
 560              	@ 0 "" 2
ARM GAS  /tmp/cc6UspJj.s 			page 86


1146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 561              		.loc 1 1146 4 view .LVU171
 562              	@ 1146 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 563 0084 BFF36F8F 		isb
 564              	@ 0 "" 2
1146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 565              		.loc 1 1146 35 view .LVU172
1155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 566              		.loc 1 1155 27 view .LVU173
 567              		.thumb
 568              		.syntax unified
 569              	.L36:
1157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 570              		.loc 1 1157 1 is_stmt 0 view .LVU174
 571 0088 10BD     		pop	{r4, pc}
 572              	.LVL42:
 573              	.L42:
1095:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 574              		.loc 1 1095 5 is_stmt 1 view .LVU175
 575 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 576              	.LVL43:
 577 008e D3E7     		b	.L38
 578              	.L44:
 579              		.align	2
 580              	.L43:
 581 0090 00000000 		.word	.LANCHOR9
 582 0094 00000000 		.word	.LANCHOR10
 583 0098 00000000 		.word	.LANCHOR11
 584 009c 00000000 		.word	.LANCHOR12
 585 00a0 00000000 		.word	.LANCHOR13
 586 00a4 00000000 		.word	.LANCHOR4
 587              		.cfi_endproc
 588              	.LFE8:
 590              		.section	.text.prvDeleteTCB,"ax",%progbits
 591              		.align	1
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	prvDeleteTCB:
 598              	.LVL44:
 599              	.LFB44:
3888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 600              		.loc 1 3888 2 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
3888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 604              		.loc 1 3888 2 is_stmt 0 view .LVU177
 605 0000 10B5     		push	{r4, lr}
 606              	.LCFI3:
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 4, -8
 609              		.cfi_offset 14, -4
 610 0002 0446     		mov	r4, r0
3892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 611              		.loc 1 3892 3 is_stmt 1 view .LVU178
ARM GAS  /tmp/cc6UspJj.s 			page 87


3916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 612              		.loc 1 3916 4 view .LVU179
3916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 613              		.loc 1 3916 13 is_stmt 0 view .LVU180
 614 0004 90F85530 		ldrb	r3, [r0, #85]	@ zero_extendqisi2
3916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 615              		.loc 1 3916 6 view .LVU181
 616 0008 63B1     		cbz	r3, .L51
3923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 617              		.loc 1 3923 9 is_stmt 1 view .LVU182
3923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 618              		.loc 1 3923 11 is_stmt 0 view .LVU183
 619 000a 012B     		cmp	r3, #1
 620 000c 11D0     		beq	.L52
3933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 621              		.loc 1 3933 5 is_stmt 1 view .LVU184
 622 000e 022B     		cmp	r3, #2
 623 0010 0ED0     		beq	.L45
3933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 624              		.loc 1 3933 5 view .LVU185
 625              	.LBB117:
 626              	.LBI117:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 627              		.loc 2 191 30 view .LVU186
 628              	.LBB118:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 629              		.loc 2 193 1 view .LVU187
 630              		.loc 2 195 2 view .LVU188
 631              		.syntax unified
 632              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 633 0012 4FF05003 			mov r3, #80												
 634 0016 83F31188 		msr basepri, r3											
 635 001a BFF36F8F 		isb														
 636 001e BFF34F8F 		dsb														
 637              	
 638              	@ 0 "" 2
 639              	.LVL45:
 640              		.thumb
 641              		.syntax unified
 642              	.L49:
 643              		.loc 2 195 2 is_stmt 0 view .LVU189
 644              	.LBE118:
 645              	.LBE117:
3933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 646              		.loc 1 3933 5 is_stmt 1 discriminator 1 view .LVU190
3933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 647              		.loc 1 3933 5 discriminator 1 view .LVU191
 648 0022 FEE7     		b	.L49
 649              	.L51:
3920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 650              		.loc 1 3920 5 view .LVU192
 651 0024 006B     		ldr	r0, [r0, #48]
 652              	.LVL46:
3920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 653              		.loc 1 3920 5 is_stmt 0 view .LVU193
 654 0026 FFF7FEFF 		bl	vPortFree
 655              	.LVL47:
ARM GAS  /tmp/cc6UspJj.s 			page 88


3921:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 656              		.loc 1 3921 5 is_stmt 1 view .LVU194
 657 002a 2046     		mov	r0, r4
 658 002c FFF7FEFF 		bl	vPortFree
 659              	.LVL48:
 660              	.L45:
3938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 661              		.loc 1 3938 2 is_stmt 0 view .LVU195
 662 0030 10BD     		pop	{r4, pc}
 663              	.LVL49:
 664              	.L52:
3927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 665              		.loc 1 3927 5 is_stmt 1 view .LVU196
 666 0032 FFF7FEFF 		bl	vPortFree
 667              	.LVL50:
3927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 668              		.loc 1 3927 5 is_stmt 0 view .LVU197
 669 0036 FBE7     		b	.L45
 670              		.cfi_endproc
 671              	.LFE44:
 673              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 674              		.align	1
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu fpv4-sp-d16
 680              	prvCheckTasksWaitingTermination:
 681              	.LFB43:
3640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682              		.loc 1 3640 1 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              	.LBB119:
3646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 687              		.loc 1 3646 3 view .LVU199
3650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 688              		.loc 1 3650 3 view .LVU200
3650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 689              		.loc 1 3650 39 view .LVU201
 690 0000 0F4B     		ldr	r3, .L60
 691 0002 1B68     		ldr	r3, [r3]
 692 0004 D3B1     		cbz	r3, .L59
 693              	.LBE119:
3640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 694              		.loc 1 3640 1 is_stmt 0 view .LVU202
 695 0006 10B5     		push	{r4, lr}
 696              	.LCFI4:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 4, -8
 699              		.cfi_offset 14, -4
 700              	.L55:
 701              	.LBB120:
3652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 702              		.loc 1 3652 4 is_stmt 1 view .LVU203
 703 0008 FFF7FEFF 		bl	vPortEnterCritical
 704              	.LVL51:
ARM GAS  /tmp/cc6UspJj.s 			page 89


3654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 705              		.loc 1 3654 5 view .LVU204
3654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 706              		.loc 1 3654 13 is_stmt 0 view .LVU205
 707 000c 0D4B     		ldr	r3, .L60+4
 708 000e DB68     		ldr	r3, [r3, #12]
3654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 709              		.loc 1 3654 11 view .LVU206
 710 0010 DC68     		ldr	r4, [r3, #12]
 711              	.LVL52:
3655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 712              		.loc 1 3655 5 is_stmt 1 view .LVU207
3655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 713              		.loc 1 3655 14 is_stmt 0 view .LVU208
 714 0012 201D     		adds	r0, r4, #4
 715 0014 FFF7FEFF 		bl	uxListRemove
 716              	.LVL53:
3656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 717              		.loc 1 3656 5 is_stmt 1 view .LVU209
 718 0018 0B4A     		ldr	r2, .L60+8
 719 001a 1368     		ldr	r3, [r2]
 720 001c 013B     		subs	r3, r3, #1
 721 001e 1360     		str	r3, [r2]
3657:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 722              		.loc 1 3657 5 view .LVU210
 723 0020 074A     		ldr	r2, .L60
 724 0022 1368     		ldr	r3, [r2]
 725 0024 013B     		subs	r3, r3, #1
 726 0026 1360     		str	r3, [r2]
3659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 727              		.loc 1 3659 4 view .LVU211
 728 0028 FFF7FEFF 		bl	vPortExitCritical
 729              	.LVL54:
3661:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 730              		.loc 1 3661 4 view .LVU212
 731 002c 2046     		mov	r0, r4
 732 002e FFF7FEFF 		bl	prvDeleteTCB
 733              	.LVL55:
3650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 734              		.loc 1 3650 39 view .LVU213
 735 0032 034B     		ldr	r3, .L60
 736 0034 1B68     		ldr	r3, [r3]
 737 0036 002B     		cmp	r3, #0
 738 0038 E6D1     		bne	.L55
 739              	.LBE120:
3665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 740              		.loc 1 3665 1 is_stmt 0 view .LVU214
 741 003a 10BD     		pop	{r4, pc}
 742              	.LVL56:
 743              	.L59:
 744              	.LCFI5:
 745              		.cfi_def_cfa_offset 0
 746              		.cfi_restore 4
 747              		.cfi_restore 14
3665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 748              		.loc 1 3665 1 view .LVU215
 749 003c 7047     		bx	lr
ARM GAS  /tmp/cc6UspJj.s 			page 90


 750              	.L61:
 751 003e 00BF     		.align	2
 752              	.L60:
 753 0040 00000000 		.word	.LANCHOR14
 754 0044 00000000 		.word	.LANCHOR7
 755 0048 00000000 		.word	.LANCHOR9
 756              		.cfi_endproc
 757              	.LFE43:
 759              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 760              		.align	1
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	prvAddCurrentTaskToDelayedList:
 767              	.LVL57:
 768              	.LFB60:
3965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc6UspJj.s 			page 91


4005:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc6UspJj.s 			page 92


4062:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 93


4119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 94


4176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
ARM GAS  /tmp/cc6UspJj.s 			page 95


4233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
ARM GAS  /tmp/cc6UspJj.s 			page 96


4290:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 97


4347:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
ARM GAS  /tmp/cc6UspJj.s 			page 98


4404:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc6UspJj.s 			page 99


4461:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
ARM GAS  /tmp/cc6UspJj.s 			page 100


4518:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
ARM GAS  /tmp/cc6UspJj.s 			page 101


4575:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc6UspJj.s 			page 102


4632:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc6UspJj.s 			page 103


4689:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
ARM GAS  /tmp/cc6UspJj.s 			page 104


4746:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 105


4803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
ARM GAS  /tmp/cc6UspJj.s 			page 106


4860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
ARM GAS  /tmp/cc6UspJj.s 			page 107


4917:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc6UspJj.s 			page 108


4974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
ARM GAS  /tmp/cc6UspJj.s 			page 109


5031:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
ARM GAS  /tmp/cc6UspJj.s 			page 110


5088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc6UspJj.s 			page 111


5145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 769              		.loc 1 5178 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		.loc 1 5178 1 is_stmt 0 view .LVU217
 774 0000 70B5     		push	{r4, r5, r6, lr}
 775              	.LCFI6:
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 6, -8
 780              		.cfi_offset 14, -4
 781 0002 0446     		mov	r4, r0
 782 0004 0D46     		mov	r5, r1
5179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 783              		.loc 1 5179 1 is_stmt 1 view .LVU218
5180:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 784              		.loc 1 5180 1 view .LVU219
 785              		.loc 1 5180 18 is_stmt 0 view .LVU220
 786 0006 1D4B     		ldr	r3, .L69
 787 0008 1E68     		ldr	r6, [r3]
 788              	.LVL58:
5181:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 112


5182:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 789              		.loc 1 5193 2 is_stmt 1 view .LVU221
 790              		.loc 1 5193 35 is_stmt 0 view .LVU222
 791 000a 1D4B     		ldr	r3, .L69+4
 792 000c 1868     		ldr	r0, [r3]
 793              	.LVL59:
 794              		.loc 1 5193 6 view .LVU223
 795 000e 0430     		adds	r0, r0, #4
 796 0010 FFF7FEFF 		bl	uxListRemove
 797              	.LVL60:
 798              		.loc 1 5193 4 view .LVU224
 799 0014 48B9     		cbnz	r0, .L63
5194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 800              		.loc 1 5197 3 is_stmt 1 view .LVU225
 801 0016 1A4B     		ldr	r3, .L69+4
 802 0018 1B68     		ldr	r3, [r3]
 803 001a DB6A     		ldr	r3, [r3, #44]
 804 001c 0122     		movs	r2, #1
 805 001e 9A40     		lsls	r2, r2, r3
 806 0020 1849     		ldr	r1, .L69+8
 807 0022 0B68     		ldr	r3, [r1]
 808 0024 23EA0203 		bic	r3, r3, r2
 809 0028 0B60     		str	r3, [r1]
 810              	.L63:
5198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 811              		.loc 1 5201 27 view .LVU226
5202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 812              		.loc 1 5206 3 view .LVU227
 813              		.loc 1 5206 5 is_stmt 0 view .LVU228
 814 002a B4F1FF3F 		cmp	r4, #-1
 815 002e 0DD0     		beq	.L68
 816              	.L64:
5207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
ARM GAS  /tmp/cc6UspJj.s 			page 113


5211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 817              		.loc 1 5218 4 is_stmt 1 view .LVU229
 818              		.loc 1 5218 16 is_stmt 0 view .LVU230
 819 0030 3444     		add	r4, r4, r6
 820              	.LVL61:
5219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 821              		.loc 1 5221 4 is_stmt 1 view .LVU231
 822 0032 134B     		ldr	r3, .L69+4
 823 0034 1B68     		ldr	r3, [r3]
 824 0036 5C60     		str	r4, [r3, #4]
5222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 825              		.loc 1 5223 4 view .LVU232
 826              		.loc 1 5223 6 is_stmt 0 view .LVU233
 827 0038 A642     		cmp	r6, r4
 828 003a 10D9     		bls	.L66
5224:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 829              		.loc 1 5227 5 is_stmt 1 view .LVU234
 830 003c 124B     		ldr	r3, .L69+12
 831 003e 1868     		ldr	r0, [r3]
 832              		.loc 1 5227 60 is_stmt 0 view .LVU235
 833 0040 0F4B     		ldr	r3, .L69+4
 834 0042 1968     		ldr	r1, [r3]
 835              		.loc 1 5227 5 view .LVU236
 836 0044 0431     		adds	r1, r1, #4
 837 0046 FFF7FEFF 		bl	vListInsert
 838              	.LVL62:
 839              	.L62:
5228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc6UspJj.s 			page 114


5245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 840              		.loc 1 5286 1 view .LVU237
 841 004a 70BD     		pop	{r4, r5, r6, pc}
 842              	.LVL63:
 843              	.L68:
5206:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 844              		.loc 1 5206 41 discriminator 1 view .LVU238
 845 004c 002D     		cmp	r5, #0
 846 004e EFD0     		beq	.L64
5211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847              		.loc 1 5211 4 is_stmt 1 view .LVU239
5211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 848              		.loc 1 5211 56 is_stmt 0 view .LVU240
 849 0050 0B4B     		ldr	r3, .L69+4
 850 0052 1968     		ldr	r1, [r3]
5211:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc6UspJj.s 			page 115


 851              		.loc 1 5211 4 view .LVU241
 852 0054 0431     		adds	r1, r1, #4
 853 0056 0D48     		ldr	r0, .L69+16
 854 0058 FFF7FEFF 		bl	vListInsertEnd
 855              	.LVL64:
 856 005c F5E7     		b	.L62
 857              	.LVL65:
 858              	.L66:
5233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 859              		.loc 1 5233 5 is_stmt 1 view .LVU242
 860 005e 0C4B     		ldr	r3, .L69+20
 861 0060 1868     		ldr	r0, [r3]
5233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 862              		.loc 1 5233 52 is_stmt 0 view .LVU243
 863 0062 074B     		ldr	r3, .L69+4
 864 0064 1968     		ldr	r1, [r3]
5233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 865              		.loc 1 5233 5 view .LVU244
 866 0066 0431     		adds	r1, r1, #4
 867 0068 FFF7FEFF 		bl	vListInsert
 868              	.LVL66:
5238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 869              		.loc 1 5238 5 is_stmt 1 view .LVU245
5238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 870              		.loc 1 5238 21 is_stmt 0 view .LVU246
 871 006c 094B     		ldr	r3, .L69+24
 872 006e 1B68     		ldr	r3, [r3]
5238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 873              		.loc 1 5238 7 view .LVU247
 874 0070 A342     		cmp	r3, r4
 875 0072 EAD9     		bls	.L62
5240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 876              		.loc 1 5240 6 is_stmt 1 view .LVU248
5240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 877              		.loc 1 5240 27 is_stmt 0 view .LVU249
 878 0074 074B     		ldr	r3, .L69+24
 879 0076 1C60     		str	r4, [r3]
5244:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 880              		.loc 1 5244 30 is_stmt 1 view .LVU250
 881              		.loc 1 5286 1 is_stmt 0 view .LVU251
 882 0078 E7E7     		b	.L62
 883              	.L70:
 884 007a 00BF     		.align	2
 885              	.L69:
 886 007c 00000000 		.word	.LANCHOR15
 887 0080 00000000 		.word	.LANCHOR10
 888 0084 00000000 		.word	.LANCHOR13
 889 0088 00000000 		.word	.LANCHOR8
 890 008c 00000000 		.word	.LANCHOR0
 891 0090 00000000 		.word	.LANCHOR2
 892 0094 00000000 		.word	.LANCHOR3
 893              		.cfi_endproc
 894              	.LFE60:
 896              		.section	.text.prvIdleTask,"ax",%progbits
 897              		.align	1
 898              		.syntax unified
 899              		.thumb
ARM GAS  /tmp/cc6UspJj.s 			page 116


 900              		.thumb_func
 901              		.fpu fpv4-sp-d16
 903              	prvIdleTask:
 904              	.LFB41:
3393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 905              		.loc 1 3393 1 is_stmt 1 view -0
 906              		.cfi_startproc
 907              		@ Volatile: function does not return.
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL67:
3393:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 911              		.loc 1 3393 1 is_stmt 0 view .LVU253
 912 0000 08B5     		push	{r3, lr}
 913              	.LCFI7:
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 3, -8
 916              		.cfi_offset 14, -4
 917 0002 0BE0     		b	.L73
 918              	.LVL68:
 919              	.L75:
3434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 920              		.loc 1 3434 5 is_stmt 1 view .LVU254
 921 0004 4FF0E023 		mov	r3, #-536813568
 922 0008 4FF08052 		mov	r2, #268435456
 923 000c C3F8042D 		str	r2, [r3, #3332]
3434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 924              		.loc 1 3434 5 view .LVU255
 925              		.syntax unified
 926              	@ 3434 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 927 0010 BFF34F8F 		dsb
 928              	@ 0 "" 2
3434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 929              		.loc 1 3434 5 view .LVU256
 930              	@ 3434 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 931 0014 BFF36F8F 		isb
 932              	@ 0 "" 2
3434:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 933              		.loc 1 3434 16 view .LVU257
 934              		.thumb
 935              		.syntax unified
 936              	.L72:
3438:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 937              		.loc 1 3438 29 view .LVU258
 938              	.LBB121:
3445:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 939              		.loc 1 3445 4 view .LVU259
3452:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 940              		.loc 1 3452 4 view .LVU260
 941 0018 FFF7FEFF 		bl	vApplicationIdleHook
 942              	.LVL69:
 943              	.LBE121:
3405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944              		.loc 1 3405 2 view .LVU261
 945              	.L73:
3395:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 946              		.loc 1 3395 2 view .LVU262
ARM GAS  /tmp/cc6UspJj.s 			page 117


3403:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 947              		.loc 1 3403 64 view .LVU263
3405:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 948              		.loc 1 3405 2 view .LVU264
3409:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 949              		.loc 1 3409 3 view .LVU265
 950 001c FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 951              	.LVL70:
3432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 952              		.loc 1 3432 4 view .LVU266
3432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 953              		.loc 1 3432 8 is_stmt 0 view .LVU267
 954 0020 024B     		ldr	r3, .L76
 955 0022 1B68     		ldr	r3, [r3]
3432:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 956              		.loc 1 3432 6 view .LVU268
 957 0024 012B     		cmp	r3, #1
 958 0026 EDD8     		bhi	.L75
 959 0028 F6E7     		b	.L72
 960              	.L77:
 961 002a 00BF     		.align	2
 962              	.L76:
 963 002c 00000000 		.word	.LANCHOR4
 964              		.cfi_endproc
 965              	.LFE41:
 967              		.section	.text.xTaskCreateStatic,"ax",%progbits
 968              		.align	1
 969              		.global	xTaskCreateStatic
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 973              		.fpu fpv4-sp-d16
 975              	xTaskCreateStatic:
 976              	.LVL71:
 977              	.LFB5:
 588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 978              		.loc 1 588 2 is_stmt 1 view -0
 979              		.cfi_startproc
 980              		@ args = 12, pretend = 0, frame = 8
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 588:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 982              		.loc 1 588 2 is_stmt 0 view .LVU270
 983 0000 30B5     		push	{r4, r5, lr}
 984              	.LCFI8:
 985              		.cfi_def_cfa_offset 12
 986              		.cfi_offset 4, -12
 987              		.cfi_offset 5, -8
 988              		.cfi_offset 14, -4
 989 0002 87B0     		sub	sp, sp, #28
 990              	.LCFI9:
 991              		.cfi_def_cfa_offset 40
 992 0004 0B9C     		ldr	r4, [sp, #44]
 589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 993              		.loc 1 589 2 is_stmt 1 view .LVU271
 590:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994              		.loc 1 590 2 view .LVU272
 592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
ARM GAS  /tmp/cc6UspJj.s 			page 118


 995              		.loc 1 592 3 view .LVU273
 996 0006 7CB1     		cbz	r4, .L86
 592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 997              		.loc 1 592 41 discriminator 2 view .LVU274
 593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 998              		.loc 1 593 3 discriminator 2 view .LVU275
 999 0008 0C9D     		ldr	r5, [sp, #48]
 1000 000a B5B1     		cbz	r5, .L87
 593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1001              		.loc 1 593 39 discriminator 2 view .LVU276
 1002              	.LBB122:
 600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 1003              		.loc 1 600 4 discriminator 2 view .LVU277
 600:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 1004              		.loc 1 600 20 is_stmt 0 discriminator 2 view .LVU278
 1005 000c 5825     		movs	r5, #88
 1006 000e 0495     		str	r5, [sp, #16]
 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1007              		.loc 1 601 4 is_stmt 1 discriminator 2 view .LVU279
 1008 0010 049D     		ldr	r5, [sp, #16]
 1009 0012 582D     		cmp	r5, #88
 1010 0014 1AD0     		beq	.L83
 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1011              		.loc 1 601 4 view .LVU280
 1012              	.LBB123:
 1013              	.LBI123:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1014              		.loc 2 191 30 view .LVU281
 1015              	.LBB124:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1016              		.loc 2 193 1 view .LVU282
 1017              		.loc 2 195 2 view .LVU283
 1018              		.syntax unified
 1019              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1020 0016 4FF05003 			mov r3, #80												
 1021 001a 83F31188 		msr basepri, r3											
 1022 001e BFF36F8F 		isb														
 1023 0022 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              	.LVL72:
 1027              		.thumb
 1028              		.syntax unified
 1029              	.L84:
 1030              		.loc 2 195 2 is_stmt 0 view .LVU284
 1031              	.LBE124:
 1032              	.LBE123:
 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1033              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU285
 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1034              		.loc 1 601 4 discriminator 3 view .LVU286
 1035 0026 FEE7     		b	.L84
 1036              	.LVL73:
 1037              	.L86:
 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1038              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU287
 1039              	.LBE122:
ARM GAS  /tmp/cc6UspJj.s 			page 119


 592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1040              		.loc 1 592 3 is_stmt 1 view .LVU288
 1041              	.LBB125:
 1042              	.LBI125:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1043              		.loc 2 191 30 view .LVU289
 1044              	.LBB126:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1045              		.loc 2 193 1 view .LVU290
 1046              		.loc 2 195 2 view .LVU291
 1047              		.syntax unified
 1048              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1049 0028 4FF05003 			mov r3, #80												
 1050 002c 83F31188 		msr basepri, r3											
 1051 0030 BFF36F8F 		isb														
 1052 0034 BFF34F8F 		dsb														
 1053              	
 1054              	@ 0 "" 2
 1055              	.LVL74:
 1056              		.thumb
 1057              		.syntax unified
 1058              	.L80:
 1059              		.loc 2 195 2 is_stmt 0 view .LVU292
 1060              	.LBE126:
 1061              	.LBE125:
 592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1062              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU293
 592:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1063              		.loc 1 592 3 discriminator 1 view .LVU294
 1064 0038 FEE7     		b	.L80
 1065              	.LVL75:
 1066              	.L87:
 593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1067              		.loc 1 593 3 view .LVU295
 1068              	.LBB127:
 1069              	.LBI127:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1070              		.loc 2 191 30 view .LVU296
 1071              	.LBB128:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1072              		.loc 2 193 1 view .LVU297
 1073              		.loc 2 195 2 view .LVU298
 1074              		.syntax unified
 1075              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1076 003a 4FF05003 			mov r3, #80												
 1077 003e 83F31188 		msr basepri, r3											
 1078 0042 BFF36F8F 		isb														
 1079 0046 BFF34F8F 		dsb														
 1080              	
 1081              	@ 0 "" 2
 1082              	.LVL76:
 1083              		.thumb
 1084              		.syntax unified
 1085              	.L82:
 1086              		.loc 2 195 2 is_stmt 0 view .LVU299
 1087              	.LBE128:
 1088              	.LBE127:
ARM GAS  /tmp/cc6UspJj.s 			page 120


 593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1089              		.loc 1 593 3 is_stmt 1 discriminator 2 view .LVU300
 593:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1090              		.loc 1 593 3 discriminator 2 view .LVU301
 1091 004a FEE7     		b	.L82
 1092              	.LVL77:
 1093              	.L83:
 1094              	.LBB129:
 601:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1095              		.loc 1 601 44 discriminator 2 view .LVU302
 602:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1096              		.loc 1 602 4 discriminator 2 view .LVU303
 1097 004c 049D     		ldr	r5, [sp, #16]
 1098              	.LBE129:
 607:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1099              		.loc 1 607 3 discriminator 2 view .LVU304
 611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1100              		.loc 1 611 4 discriminator 2 view .LVU305
 1101              	.LVL78:
 612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1102              		.loc 1 612 4 discriminator 2 view .LVU306
 612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1103              		.loc 1 612 22 is_stmt 0 discriminator 2 view .LVU307
 1104 004e 0C9D     		ldr	r5, [sp, #48]
 1105 0050 2C63     		str	r4, [r5, #48]
 618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1106              		.loc 1 618 5 is_stmt 1 discriminator 2 view .LVU308
 618:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1107              		.loc 1 618 37 is_stmt 0 discriminator 2 view .LVU309
 1108 0052 0224     		movs	r4, #2
 1109 0054 85F85540 		strb	r4, [r5, #85]
 622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1110              		.loc 1 622 4 is_stmt 1 discriminator 2 view .LVU310
 1111 0058 0024     		movs	r4, #0
 1112 005a 0394     		str	r4, [sp, #12]
 1113 005c 0295     		str	r5, [sp, #8]
 1114 005e 05AC     		add	r4, sp, #20
 1115 0060 0194     		str	r4, [sp, #4]
 1116 0062 0A9C     		ldr	r4, [sp, #40]
 1117 0064 0094     		str	r4, [sp]
 1118 0066 FFF7FEFF 		bl	prvInitialiseNewTask
 1119              	.LVL79:
 623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1120              		.loc 1 623 4 discriminator 2 view .LVU311
 1121 006a 0C98     		ldr	r0, [sp, #48]
 1122 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1123              	.LVL80:
 630:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1124              		.loc 1 630 3 discriminator 2 view .LVU312
 631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1125              		.loc 1 631 2 is_stmt 0 discriminator 2 view .LVU313
 1126 0070 0598     		ldr	r0, [sp, #20]
 1127 0072 07B0     		add	sp, sp, #28
 1128              	.LCFI10:
 1129              		.cfi_def_cfa_offset 12
 1130              		@ sp needed
 1131 0074 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/cc6UspJj.s 			page 121


 631:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1132              		.loc 1 631 2 discriminator 2 view .LVU314
 1133              		.cfi_endproc
 1134              	.LFE5:
 1136              		.section	.text.xTaskCreate,"ax",%progbits
 1137              		.align	1
 1138              		.global	xTaskCreate
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu fpv4-sp-d16
 1144              	xTaskCreate:
 1145              	.LVL81:
 1146              	.LFB6:
 739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1147              		.loc 1 739 2 is_stmt 1 view -0
 1148              		.cfi_startproc
 1149              		@ args = 8, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 739:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1151              		.loc 1 739 2 is_stmt 0 view .LVU316
 1152 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1153              	.LCFI11:
 1154              		.cfi_def_cfa_offset 28
 1155              		.cfi_offset 4, -28
 1156              		.cfi_offset 5, -24
 1157              		.cfi_offset 6, -20
 1158              		.cfi_offset 7, -16
 1159              		.cfi_offset 8, -12
 1160              		.cfi_offset 9, -8
 1161              		.cfi_offset 14, -4
 1162 0004 85B0     		sub	sp, sp, #20
 1163              	.LCFI12:
 1164              		.cfi_def_cfa_offset 48
 1165 0006 0746     		mov	r7, r0
 1166 0008 8846     		mov	r8, r1
 1167 000a 1446     		mov	r4, r2
 1168 000c 1E46     		mov	r6, r3
 740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1169              		.loc 1 740 2 is_stmt 1 view .LVU317
 741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1170              		.loc 1 741 2 view .LVU318
 1171              	.LBB130:
 770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1172              		.loc 1 770 3 view .LVU319
 773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1173              		.loc 1 773 4 view .LVU320
 773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1174              		.loc 1 773 14 is_stmt 0 view .LVU321
 1175 000e 9000     		lsls	r0, r2, #2
 1176              	.LVL82:
 773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1177              		.loc 1 773 14 view .LVU322
 1178 0010 FFF7FEFF 		bl	pvPortMalloc
 1179              	.LVL83:
 775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1180              		.loc 1 775 4 is_stmt 1 view .LVU323
ARM GAS  /tmp/cc6UspJj.s 			page 122


 775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1181              		.loc 1 775 6 is_stmt 0 view .LVU324
 1182 0014 00B3     		cbz	r0, .L92
 1183 0016 8146     		mov	r9, r0
 778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1184              		.loc 1 778 5 is_stmt 1 view .LVU325
 778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1185              		.loc 1 778 28 is_stmt 0 view .LVU326
 1186 0018 5820     		movs	r0, #88
 1187              	.LVL84:
 778:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1188              		.loc 1 778 28 view .LVU327
 1189 001a FFF7FEFF 		bl	pvPortMalloc
 1190              	.LVL85:
 780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1191              		.loc 1 780 5 is_stmt 1 view .LVU328
 780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1192              		.loc 1 780 7 is_stmt 0 view .LVU329
 1193 001e 0546     		mov	r5, r0
 1194 0020 B0B1     		cbz	r0, .L90
 783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1195              		.loc 1 783 6 is_stmt 1 view .LVU330
 783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1196              		.loc 1 783 24 is_stmt 0 view .LVU331
 1197 0022 C0F83090 		str	r9, [r0, #48]
 1198              	.LVL86:
 1199              	.L91:
 783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1200              		.loc 1 783 24 view .LVU332
 1201              	.LBE130:
 799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1202              		.loc 1 799 3 is_stmt 1 view .LVU333
 799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1203              		.loc 1 799 5 is_stmt 0 view .LVU334
 1204 0026 E5B1     		cbz	r5, .L93
 805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1205              		.loc 1 805 5 is_stmt 1 view .LVU335
 805:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1206              		.loc 1 805 37 is_stmt 0 view .LVU336
 1207 0028 0023     		movs	r3, #0
 1208 002a 85F85530 		strb	r3, [r5, #85]
 809:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1209              		.loc 1 809 4 is_stmt 1 view .LVU337
 1210 002e 0393     		str	r3, [sp, #12]
 1211 0030 0295     		str	r5, [sp, #8]
 1212 0032 0D9B     		ldr	r3, [sp, #52]
 1213 0034 0193     		str	r3, [sp, #4]
 1214 0036 0C9B     		ldr	r3, [sp, #48]
 1215 0038 0093     		str	r3, [sp]
 1216 003a 3346     		mov	r3, r6
 1217 003c 2246     		mov	r2, r4
 1218 003e 4146     		mov	r1, r8
 1219 0040 3846     		mov	r0, r7
 1220 0042 FFF7FEFF 		bl	prvInitialiseNewTask
 1221              	.LVL87:
 810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1222              		.loc 1 810 4 view .LVU338
ARM GAS  /tmp/cc6UspJj.s 			page 123


 1223 0046 2846     		mov	r0, r5
 1224 0048 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1225              	.LVL88:
 811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1226              		.loc 1 811 4 view .LVU339
 811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1227              		.loc 1 811 12 is_stmt 0 view .LVU340
 1228 004c 0120     		movs	r0, #1
 1229 004e 05E0     		b	.L88
 1230              	.LVL89:
 1231              	.L90:
 1232              	.LBB131:
 789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1233              		.loc 1 789 6 is_stmt 1 view .LVU341
 1234 0050 4846     		mov	r0, r9
 1235              	.LVL90:
 789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1236              		.loc 1 789 6 is_stmt 0 view .LVU342
 1237 0052 FFF7FEFF 		bl	vPortFree
 1238              	.LVL91:
 1239 0056 E6E7     		b	.L91
 1240              	.LVL92:
 1241              	.L92:
 789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1242              		.loc 1 789 6 view .LVU343
 1243              	.LBE131:
 815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1244              		.loc 1 815 12 view .LVU344
 1245 0058 4FF0FF30 		mov	r0, #-1
 1246              	.LVL93:
 1247              	.L88:
 819:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1248              		.loc 1 819 2 view .LVU345
 1249 005c 05B0     		add	sp, sp, #20
 1250              	.LCFI13:
 1251              		.cfi_remember_state
 1252              		.cfi_def_cfa_offset 28
 1253              		@ sp needed
 1254 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1255              	.LVL94:
 1256              	.L93:
 1257              	.LCFI14:
 1258              		.cfi_restore_state
 815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1259              		.loc 1 815 12 view .LVU346
 1260 0062 4FF0FF30 		mov	r0, #-1
 1261              	.LVL95:
 818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1262              		.loc 1 818 3 is_stmt 1 view .LVU347
 818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1263              		.loc 1 818 10 is_stmt 0 view .LVU348
 1264 0066 F9E7     		b	.L88
 1265              		.cfi_endproc
 1266              	.LFE6:
 1268              		.section	.text.vTaskDelete,"ax",%progbits
 1269              		.align	1
 1270              		.global	vTaskDelete
ARM GAS  /tmp/cc6UspJj.s 			page 124


 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu fpv4-sp-d16
 1276              	vTaskDelete:
 1277              	.LVL96:
 1278              	.LFB9:
1163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1279              		.loc 1 1163 2 is_stmt 1 view -0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
1163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1283              		.loc 1 1163 2 is_stmt 0 view .LVU350
 1284 0000 38B5     		push	{r3, r4, r5, lr}
 1285              	.LCFI15:
 1286              		.cfi_def_cfa_offset 16
 1287              		.cfi_offset 3, -16
 1288              		.cfi_offset 4, -12
 1289              		.cfi_offset 5, -8
 1290              		.cfi_offset 14, -4
 1291 0002 0446     		mov	r4, r0
1164:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1292              		.loc 1 1164 2 is_stmt 1 view .LVU351
1166:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1293              		.loc 1 1166 3 view .LVU352
 1294 0004 FFF7FEFF 		bl	vPortEnterCritical
 1295              	.LVL97:
1170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1296              		.loc 1 1170 4 view .LVU353
1170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1297              		.loc 1 1170 12 is_stmt 0 view .LVU354
 1298 0008 002C     		cmp	r4, #0
 1299 000a 34D0     		beq	.L105
 1300              	.LVL98:
 1301              	.L96:
1173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1302              		.loc 1 1173 4 is_stmt 1 discriminator 4 view .LVU355
1173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1303              		.loc 1 1173 8 is_stmt 0 discriminator 4 view .LVU356
 1304 000c 251D     		adds	r5, r4, #4
 1305 000e 2846     		mov	r0, r5
 1306 0010 FFF7FEFF 		bl	uxListRemove
 1307              	.LVL99:
1173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1308              		.loc 1 1173 6 discriminator 4 view .LVU357
 1309 0014 70B9     		cbnz	r0, .L97
1175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1310              		.loc 1 1175 5 is_stmt 1 view .LVU358
 1311 0016 E26A     		ldr	r2, [r4, #44]
 1312 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1313 001c 9B00     		lsls	r3, r3, #2
 1314 001e 2749     		ldr	r1, .L108
 1315 0020 CB58     		ldr	r3, [r1, r3]
 1316 0022 3BB9     		cbnz	r3, .L97
1175:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1317              		.loc 1 1175 5 discriminator 1 view .LVU359
ARM GAS  /tmp/cc6UspJj.s 			page 125


 1318 0024 0123     		movs	r3, #1
 1319 0026 03FA02F2 		lsl	r2, r3, r2
 1320 002a 2549     		ldr	r1, .L108+4
 1321 002c 0B68     		ldr	r3, [r1]
 1322 002e 23EA0203 		bic	r3, r3, r2
 1323 0032 0B60     		str	r3, [r1]
 1324              	.L97:
1179:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1325              		.loc 1 1179 29 view .LVU360
1183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1326              		.loc 1 1183 4 view .LVU361
1183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1327              		.loc 1 1183 8 is_stmt 0 view .LVU362
 1328 0034 A36A     		ldr	r3, [r4, #40]
1183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1329              		.loc 1 1183 6 view .LVU363
 1330 0036 1BB1     		cbz	r3, .L98
1185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1331              		.loc 1 1185 5 is_stmt 1 view .LVU364
1185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1332              		.loc 1 1185 14 is_stmt 0 view .LVU365
 1333 0038 04F11800 		add	r0, r4, #24
 1334 003c FFF7FEFF 		bl	uxListRemove
 1335              	.LVL100:
 1336              	.L98:
1189:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1337              		.loc 1 1189 29 is_stmt 1 view .LVU366
1196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1338              		.loc 1 1196 4 view .LVU367
1196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1339              		.loc 1 1196 16 is_stmt 0 view .LVU368
 1340 0040 204A     		ldr	r2, .L108+8
 1341 0042 1368     		ldr	r3, [r2]
 1342 0044 0133     		adds	r3, r3, #1
 1343 0046 1360     		str	r3, [r2]
1198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1344              		.loc 1 1198 4 is_stmt 1 view .LVU369
1198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1345              		.loc 1 1198 14 is_stmt 0 view .LVU370
 1346 0048 1F4B     		ldr	r3, .L108+12
 1347 004a 1B68     		ldr	r3, [r3]
1198:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1348              		.loc 1 1198 6 view .LVU371
 1349 004c A342     		cmp	r3, r4
 1350 004e 15D0     		beq	.L106
1225:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 1351              		.loc 1 1225 5 is_stmt 1 view .LVU372
 1352 0050 1E4A     		ldr	r2, .L108+16
 1353 0052 1368     		ldr	r3, [r2]
 1354 0054 013B     		subs	r3, r3, #1
 1355 0056 1360     		str	r3, [r2]
1226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1356              		.loc 1 1226 30 view .LVU373
1227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1357              		.loc 1 1227 5 view .LVU374
 1358 0058 2046     		mov	r0, r4
 1359 005a FFF7FEFF 		bl	prvDeleteTCB
ARM GAS  /tmp/cc6UspJj.s 			page 126


 1360              	.LVL101:
1231:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1361              		.loc 1 1231 5 view .LVU375
 1362 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1363              	.LVL102:
 1364              	.L100:
1234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1365              		.loc 1 1234 3 view .LVU376
 1366 0062 FFF7FEFF 		bl	vPortExitCritical
 1367              	.LVL103:
1238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1368              		.loc 1 1238 3 view .LVU377
1238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1369              		.loc 1 1238 25 is_stmt 0 view .LVU378
 1370 0066 1A4B     		ldr	r3, .L108+20
 1371 0068 1B68     		ldr	r3, [r3]
1238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1372              		.loc 1 1238 5 view .LVU379
 1373 006a 1BB1     		cbz	r3, .L95
1240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1374              		.loc 1 1240 4 is_stmt 1 view .LVU380
1240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1375              		.loc 1 1240 14 is_stmt 0 view .LVU381
 1376 006c 164B     		ldr	r3, .L108+12
 1377 006e 1B68     		ldr	r3, [r3]
1240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1378              		.loc 1 1240 6 view .LVU382
 1379 0070 A342     		cmp	r3, r4
 1380 0072 0CD0     		beq	.L107
 1381              	.L95:
1250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1382              		.loc 1 1250 2 view .LVU383
 1383 0074 38BD     		pop	{r3, r4, r5, pc}
 1384              	.LVL104:
 1385              	.L105:
1170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1386              		.loc 1 1170 12 discriminator 1 view .LVU384
 1387 0076 144B     		ldr	r3, .L108+12
 1388 0078 1C68     		ldr	r4, [r3]
 1389              	.LVL105:
1170:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1390              		.loc 1 1170 12 discriminator 1 view .LVU385
 1391 007a C7E7     		b	.L96
 1392              	.LVL106:
 1393              	.L106:
1205:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1394              		.loc 1 1205 5 is_stmt 1 view .LVU386
 1395 007c 2946     		mov	r1, r5
 1396 007e 1548     		ldr	r0, .L108+24
 1397 0080 FFF7FEFF 		bl	vListInsertEnd
 1398              	.LVL107:
1210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1399              		.loc 1 1210 5 view .LVU387
 1400 0084 144A     		ldr	r2, .L108+28
 1401 0086 1368     		ldr	r3, [r2]
 1402 0088 0133     		adds	r3, r3, #1
 1403 008a 1360     		str	r3, [r2]
ARM GAS  /tmp/cc6UspJj.s 			page 127


1214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1404              		.loc 1 1214 30 view .LVU388
1221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1405              		.loc 1 1221 54 view .LVU389
 1406 008c E9E7     		b	.L100
 1407              	.L107:
1242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1408              		.loc 1 1242 5 view .LVU390
 1409 008e 134B     		ldr	r3, .L108+32
 1410 0090 1B68     		ldr	r3, [r3]
 1411 0092 43B1     		cbz	r3, .L102
1242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1412              		.loc 1 1242 5 view .LVU391
 1413              	.LBB132:
 1414              	.LBI132:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1415              		.loc 2 191 30 view .LVU392
 1416              	.LBB133:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1417              		.loc 2 193 1 view .LVU393
 1418              		.loc 2 195 2 view .LVU394
 1419              		.syntax unified
 1420              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1421 0094 4FF05003 			mov r3, #80												
 1422 0098 83F31188 		msr basepri, r3											
 1423 009c BFF36F8F 		isb														
 1424 00a0 BFF34F8F 		dsb														
 1425              	
 1426              	@ 0 "" 2
 1427              	.LVL108:
 1428              		.thumb
 1429              		.syntax unified
 1430              	.L103:
 1431              		.loc 2 195 2 is_stmt 0 view .LVU395
 1432              	.LBE133:
 1433              	.LBE132:
1242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1434              		.loc 1 1242 5 is_stmt 1 discriminator 1 view .LVU396
1242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1435              		.loc 1 1242 5 discriminator 1 view .LVU397
 1436 00a4 FEE7     		b	.L103
 1437              	.L102:
1242:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1438              		.loc 1 1242 46 discriminator 2 view .LVU398
1243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1439              		.loc 1 1243 5 discriminator 2 view .LVU399
 1440 00a6 4FF0E023 		mov	r3, #-536813568
 1441 00aa 4FF08052 		mov	r2, #268435456
 1442 00ae C3F8042D 		str	r2, [r3, #3332]
1243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1443              		.loc 1 1243 5 discriminator 2 view .LVU400
 1444              		.syntax unified
 1445              	@ 1243 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1446 00b2 BFF34F8F 		dsb
 1447              	@ 0 "" 2
1243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1448              		.loc 1 1243 5 discriminator 2 view .LVU401
ARM GAS  /tmp/cc6UspJj.s 			page 128


 1449              	@ 1243 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1450 00b6 BFF36F8F 		isb
 1451              	@ 0 "" 2
1243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1452              		.loc 1 1243 27 discriminator 2 view .LVU402
1247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1453              		.loc 1 1247 29 discriminator 2 view .LVU403
1250:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1454              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU404
 1455              		.thumb
 1456              		.syntax unified
 1457 00ba DBE7     		b	.L95
 1458              	.L109:
 1459              		.align	2
 1460              	.L108:
 1461 00bc 00000000 		.word	.LANCHOR4
 1462 00c0 00000000 		.word	.LANCHOR13
 1463 00c4 00000000 		.word	.LANCHOR12
 1464 00c8 00000000 		.word	.LANCHOR10
 1465 00cc 00000000 		.word	.LANCHOR9
 1466 00d0 00000000 		.word	.LANCHOR11
 1467 00d4 00000000 		.word	.LANCHOR7
 1468 00d8 00000000 		.word	.LANCHOR14
 1469 00dc 00000000 		.word	.LANCHOR16
 1470              		.cfi_endproc
 1471              	.LFE9:
 1473              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1474              		.align	1
 1475              		.global	uxTaskPriorityGet
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv4-sp-d16
 1481              	uxTaskPriorityGet:
 1482              	.LVL109:
 1483              	.LFB11:
1479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1484              		.loc 1 1479 2 is_stmt 1 view -0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
1479:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1488              		.loc 1 1479 2 is_stmt 0 view .LVU406
 1489 0000 10B5     		push	{r4, lr}
 1490              	.LCFI16:
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 4, -8
 1493              		.cfi_offset 14, -4
 1494 0002 0446     		mov	r4, r0
1480:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1495              		.loc 1 1480 2 is_stmt 1 view .LVU407
1481:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1496              		.loc 1 1481 2 view .LVU408
1483:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1497              		.loc 1 1483 3 view .LVU409
 1498 0004 FFF7FEFF 		bl	vPortEnterCritical
 1499              	.LVL110:
ARM GAS  /tmp/cc6UspJj.s 			page 129


1487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1500              		.loc 1 1487 4 view .LVU410
1487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1501              		.loc 1 1487 12 is_stmt 0 view .LVU411
 1502 0008 24B1     		cbz	r4, .L113
 1503              	.LVL111:
 1504              	.L111:
1488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1505              		.loc 1 1488 4 is_stmt 1 discriminator 4 view .LVU412
1488:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1506              		.loc 1 1488 13 is_stmt 0 discriminator 4 view .LVU413
 1507 000a E46A     		ldr	r4, [r4, #44]
 1508              	.LVL112:
1490:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1509              		.loc 1 1490 3 is_stmt 1 discriminator 4 view .LVU414
 1510 000c FFF7FEFF 		bl	vPortExitCritical
 1511              	.LVL113:
1492:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1512              		.loc 1 1492 3 discriminator 4 view .LVU415
1493:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1513              		.loc 1 1493 2 is_stmt 0 discriminator 4 view .LVU416
 1514 0010 2046     		mov	r0, r4
 1515 0012 10BD     		pop	{r4, pc}
 1516              	.LVL114:
 1517              	.L113:
1487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1518              		.loc 1 1487 12 discriminator 1 view .LVU417
 1519 0014 014B     		ldr	r3, .L114
 1520 0016 1C68     		ldr	r4, [r3]
 1521              	.LVL115:
1487:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1522              		.loc 1 1487 12 discriminator 1 view .LVU418
 1523 0018 F7E7     		b	.L111
 1524              	.L115:
 1525 001a 00BF     		.align	2
 1526              	.L114:
 1527 001c 00000000 		.word	.LANCHOR10
 1528              		.cfi_endproc
 1529              	.LFE11:
 1531              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1532              		.align	1
 1533              		.global	uxTaskPriorityGetFromISR
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1537              		.fpu fpv4-sp-d16
 1539              	uxTaskPriorityGetFromISR:
 1540              	.LVL116:
 1541              	.LFB12:
1501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1542              		.loc 1 1501 2 is_stmt 1 view -0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
1501:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1546              		.loc 1 1501 2 is_stmt 0 view .LVU420
 1547 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cc6UspJj.s 			page 130


 1548              	.LCFI17:
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 4, -8
 1551              		.cfi_offset 14, -4
 1552 0002 0446     		mov	r4, r0
1502:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1553              		.loc 1 1502 2 is_stmt 1 view .LVU421
1503:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1554              		.loc 1 1503 2 view .LVU422
1521:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1555              		.loc 1 1521 3 view .LVU423
 1556 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1557              	.LVL117:
1523:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1558              		.loc 1 1523 3 view .LVU424
 1559              	.LBB134:
 1560              	.LBI134:
 196:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1561              		.loc 2 207 34 view .LVU425
 1562              	.LBB135:
 208:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1563              		.loc 2 209 1 view .LVU426
 210:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1564              		.loc 2 211 2 view .LVU427
 1565              		.syntax unified
 1566              	@ 211 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1567 0008 EFF31183 			mrs r3, basepri											
 1568 000c 4FF05002 		mov r2, #80												
 1569 0010 82F31188 		msr basepri, r2											
 1570 0014 BFF36F8F 		isb														
 1571 0018 BFF34F8F 		dsb														
 1572              	
 1573              	@ 0 "" 2
 1574              	.LVL118:
 212:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
ARM GAS  /tmp/cc6UspJj.s 			page 131


 222:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1575              		.loc 2 223 2 view .LVU428
 1576              		.loc 2 223 2 is_stmt 0 view .LVU429
 1577              		.thumb
 1578              		.syntax unified
 1579              	.LBE135:
 1580              	.LBE134:
1527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1581              		.loc 1 1527 4 is_stmt 1 view .LVU430
1527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1582              		.loc 1 1527 12 is_stmt 0 view .LVU431
 1583 001c 1CB1     		cbz	r4, .L119
 1584              	.LVL119:
 1585              	.L117:
1528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1586              		.loc 1 1528 4 is_stmt 1 discriminator 4 view .LVU432
1528:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1587              		.loc 1 1528 13 is_stmt 0 discriminator 4 view .LVU433
 1588 001e E06A     		ldr	r0, [r4, #44]
 1589              	.LVL120:
1530:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1590              		.loc 1 1530 3 is_stmt 1 discriminator 4 view .LVU434
 1591              	.LBB136:
 1592              	.LBI136:
 224:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1593              		.loc 2 227 30 discriminator 4 view .LVU435
 1594              	.LBB137:
 228:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1595              		.loc 2 229 2 discriminator 4 view .LVU436
 1596              		.syntax unified
 1597              	@ 229 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1598 0020 83F31188 			msr basepri, r3	
 1599              	@ 0 "" 2
 1600              		.thumb
 1601              		.syntax unified
 1602              	.LBE137:
 1603              	.LBE136:
1532:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1604              		.loc 1 1532 3 discriminator 4 view .LVU437
1533:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1605              		.loc 1 1533 2 is_stmt 0 discriminator 4 view .LVU438
 1606 0024 10BD     		pop	{r4, pc}
 1607              	.LVL121:
 1608              	.L119:
1527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1609              		.loc 1 1527 12 discriminator 1 view .LVU439
 1610 0026 014A     		ldr	r2, .L120
 1611 0028 1468     		ldr	r4, [r2]
 1612              	.LVL122:
1527:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1613              		.loc 1 1527 12 discriminator 1 view .LVU440
 1614 002a F8E7     		b	.L117
ARM GAS  /tmp/cc6UspJj.s 			page 132


 1615              	.L121:
 1616              		.align	2
 1617              	.L120:
 1618 002c 00000000 		.word	.LANCHOR10
 1619              		.cfi_endproc
 1620              	.LFE12:
 1622              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1623              		.align	1
 1624              		.global	vTaskPrioritySet
 1625              		.syntax unified
 1626              		.thumb
 1627              		.thumb_func
 1628              		.fpu fpv4-sp-d16
 1630              	vTaskPrioritySet:
 1631              	.LVL123:
 1632              	.LFB13:
1541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1633              		.loc 1 1541 2 is_stmt 1 view -0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
1541:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1637              		.loc 1 1541 2 is_stmt 0 view .LVU442
 1638 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1639              	.LCFI18:
 1640              		.cfi_def_cfa_offset 24
 1641              		.cfi_offset 3, -24
 1642              		.cfi_offset 4, -20
 1643              		.cfi_offset 5, -16
 1644              		.cfi_offset 6, -12
 1645              		.cfi_offset 7, -8
 1646              		.cfi_offset 14, -4
1542:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1647              		.loc 1 1542 2 is_stmt 1 view .LVU443
1543:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1648              		.loc 1 1543 2 view .LVU444
1544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1649              		.loc 1 1544 2 view .LVU445
 1650              	.LVL124:
1546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1651              		.loc 1 1546 3 view .LVU446
 1652 0002 0629     		cmp	r1, #6
 1653 0004 08D9     		bls	.L123
1546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1654              		.loc 1 1546 3 view .LVU447
 1655              	.LBB138:
 1656              	.LBI138:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1657              		.loc 2 191 30 view .LVU448
 1658              	.LBB139:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1659              		.loc 2 193 1 view .LVU449
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1660              		.loc 2 195 2 view .LVU450
 1661              		.syntax unified
 1662              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1663 0006 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc6UspJj.s 			page 133


 1664 000a 83F31188 		msr basepri, r3											
 1665 000e BFF36F8F 		isb														
 1666 0012 BFF34F8F 		dsb														
 1667              	
 1668              	@ 0 "" 2
 1669              	.LVL125:
 1670              		.thumb
 1671              		.syntax unified
 1672              	.L124:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1673              		.loc 2 195 2 is_stmt 0 view .LVU451
 1674              	.LBE139:
 1675              	.LBE138:
1546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1676              		.loc 1 1546 3 is_stmt 1 discriminator 1 view .LVU452
1546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1677              		.loc 1 1546 3 discriminator 1 view .LVU453
 1678 0016 FEE7     		b	.L124
 1679              	.L123:
 1680 0018 0546     		mov	r5, r0
 1681 001a 0C46     		mov	r4, r1
1546:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1682              		.loc 1 1546 59 view .LVU454
1549:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1683              		.loc 1 1549 3 view .LVU455
 1684              	.LVL126:
1555:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1685              		.loc 1 1555 28 view .LVU456
1558:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1686              		.loc 1 1558 3 view .LVU457
 1687 001c FFF7FEFF 		bl	vPortEnterCritical
 1688              	.LVL127:
1562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1689              		.loc 1 1562 4 view .LVU458
1562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1690              		.loc 1 1562 12 is_stmt 0 view .LVU459
 1691 0020 75B1     		cbz	r5, .L137
 1692              	.LVL128:
 1693              	.L125:
1564:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1694              		.loc 1 1564 50 is_stmt 1 discriminator 4 view .LVU460
1568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1695              		.loc 1 1568 5 discriminator 4 view .LVU461
1568:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1696              		.loc 1 1568 27 is_stmt 0 discriminator 4 view .LVU462
 1697 0022 6B6C     		ldr	r3, [r5, #68]
 1698              	.LVL129:
1576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1699              		.loc 1 1576 4 is_stmt 1 discriminator 4 view .LVU463
1576:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1700              		.loc 1 1576 6 is_stmt 0 discriminator 4 view .LVU464
 1701 0024 9C42     		cmp	r4, r3
 1702 0026 30D0     		beq	.L126
1580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1703              		.loc 1 1580 5 is_stmt 1 view .LVU465
1580:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1704              		.loc 1 1580 7 is_stmt 0 view .LVU466
ARM GAS  /tmp/cc6UspJj.s 			page 134


 1705 0028 0DD9     		bls	.L127
1582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1706              		.loc 1 1582 6 is_stmt 1 view .LVU467
1582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1707              		.loc 1 1582 16 is_stmt 0 view .LVU468
 1708 002a 2B4A     		ldr	r2, .L140
 1709 002c 1268     		ldr	r2, [r2]
1582:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1710              		.loc 1 1582 8 view .LVU469
 1711 002e AA42     		cmp	r2, r5
 1712 0030 2ED0     		beq	.L133
1587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1713              		.loc 1 1587 7 is_stmt 1 view .LVU470
1587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1714              		.loc 1 1587 40 is_stmt 0 view .LVU471
 1715 0032 294A     		ldr	r2, .L140
 1716 0034 1268     		ldr	r2, [r2]
 1717 0036 D26A     		ldr	r2, [r2, #44]
1587:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1718              		.loc 1 1587 9 view .LVU472
 1719 0038 A242     		cmp	r2, r4
 1720 003a 2BD9     		bls	.L134
1544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1721              		.loc 1 1544 13 view .LVU473
 1722 003c 0027     		movs	r7, #0
 1723 003e 07E0     		b	.L128
 1724              	.LVL130:
 1725              	.L137:
1562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1726              		.loc 1 1562 12 discriminator 1 view .LVU474
 1727 0040 254B     		ldr	r3, .L140
 1728 0042 1D68     		ldr	r5, [r3]
 1729              	.LVL131:
1562:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1730              		.loc 1 1562 12 discriminator 1 view .LVU475
 1731 0044 EDE7     		b	.L125
 1732              	.LVL132:
 1733              	.L127:
1603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1734              		.loc 1 1603 10 is_stmt 1 view .LVU476
1603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1735              		.loc 1 1603 20 is_stmt 0 view .LVU477
 1736 0046 244A     		ldr	r2, .L140
 1737 0048 1268     		ldr	r2, [r2]
1603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1738              		.loc 1 1603 12 view .LVU478
 1739 004a AA42     		cmp	r2, r5
 1740 004c 24D0     		beq	.L135
1544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1741              		.loc 1 1544 13 view .LVU479
 1742 004e 0027     		movs	r7, #0
 1743              	.L128:
 1744              	.LVL133:
1615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1745              		.loc 1 1615 5 is_stmt 1 view .LVU480
1620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1746              		.loc 1 1620 5 view .LVU481
ARM GAS  /tmp/cc6UspJj.s 			page 135


1620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1747              		.loc 1 1620 27 is_stmt 0 view .LVU482
 1748 0050 EE6A     		ldr	r6, [r5, #44]
 1749              	.LVL134:
1626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1750              		.loc 1 1626 6 is_stmt 1 view .LVU483
1626:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1751              		.loc 1 1626 8 is_stmt 0 view .LVU484
 1752 0052 B342     		cmp	r3, r6
 1753 0054 22D0     		beq	.L138
 1754              	.L129:
1632:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1755              		.loc 1 1632 31 is_stmt 1 view .LVU485
1636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1756              		.loc 1 1636 6 view .LVU486
1636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1757              		.loc 1 1636 28 is_stmt 0 view .LVU487
 1758 0056 6C64     		str	r4, [r5, #68]
1646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1759              		.loc 1 1646 5 is_stmt 1 view .LVU488
1646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1760              		.loc 1 1646 11 is_stmt 0 view .LVU489
 1761 0058 AB69     		ldr	r3, [r5, #24]
 1762              	.LVL135:
1646:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1763              		.loc 1 1646 7 view .LVU490
 1764 005a 002B     		cmp	r3, #0
 1765 005c 02DB     		blt	.L130
1648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1766              		.loc 1 1648 6 is_stmt 1 view .LVU491
 1767 005e C4F10704 		rsb	r4, r4, #7
 1768              	.LVL136:
1648:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1769              		.loc 1 1648 6 is_stmt 0 view .LVU492
 1770 0062 AC61     		str	r4, [r5, #24]
 1771              	.L130:
1652:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1772              		.loc 1 1652 30 is_stmt 1 view .LVU493
1659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1773              		.loc 1 1659 5 view .LVU494
1659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1774              		.loc 1 1659 9 is_stmt 0 view .LVU495
 1775 0064 6969     		ldr	r1, [r5, #20]
 1776 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1777 006a 1C4B     		ldr	r3, .L140+4
 1778 006c 03EB8203 		add	r3, r3, r2, lsl #2
1659:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1779              		.loc 1 1659 7 view .LVU496
 1780 0070 9942     		cmp	r1, r3
 1781 0072 15D0     		beq	.L139
 1782              	.LVL137:
 1783              	.L131:
1679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1784              		.loc 1 1679 30 is_stmt 1 view .LVU497
1682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1785              		.loc 1 1682 5 view .LVU498
1682:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc6UspJj.s 			page 136


 1786              		.loc 1 1682 7 is_stmt 0 view .LVU499
 1787 0074 4FB1     		cbz	r7, .L126
1684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1788              		.loc 1 1684 6 is_stmt 1 view .LVU500
 1789 0076 4FF0E023 		mov	r3, #-536813568
 1790 007a 4FF08052 		mov	r2, #268435456
 1791 007e C3F8042D 		str	r2, [r3, #3332]
1684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1792              		.loc 1 1684 6 view .LVU501
 1793              		.syntax unified
 1794              	@ 1684 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1795 0082 BFF34F8F 		dsb
 1796              	@ 0 "" 2
1684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1797              		.loc 1 1684 6 view .LVU502
 1798              	@ 1684 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1799 0086 BFF36F8F 		isb
 1800              	@ 0 "" 2
1684:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1801              		.loc 1 1684 37 view .LVU503
 1802              	.LVL138:
 1803              		.thumb
 1804              		.syntax unified
 1805              	.L126:
1688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1806              		.loc 1 1688 30 view .LVU504
1693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1807              		.loc 1 1693 5 view .LVU505
1696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1808              		.loc 1 1696 3 view .LVU506
 1809 008a FFF7FEFF 		bl	vPortExitCritical
 1810              	.LVL139:
1697:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1811              		.loc 1 1697 2 is_stmt 0 view .LVU507
 1812 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1813              	.LVL140:
 1814              	.L133:
1544:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1815              		.loc 1 1544 13 view .LVU508
 1816 0090 0027     		movs	r7, #0
 1817 0092 DDE7     		b	.L128
 1818              	.L134:
1589:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1819              		.loc 1 1589 23 view .LVU509
 1820 0094 0127     		movs	r7, #1
 1821 0096 DBE7     		b	.L128
 1822              	.L135:
1608:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1823              		.loc 1 1608 21 view .LVU510
 1824 0098 0127     		movs	r7, #1
 1825 009a D9E7     		b	.L128
 1826              	.LVL141:
 1827              	.L138:
1628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1828              		.loc 1 1628 7 is_stmt 1 view .LVU511
1628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1829              		.loc 1 1628 25 is_stmt 0 view .LVU512
ARM GAS  /tmp/cc6UspJj.s 			page 137


 1830 009c EC62     		str	r4, [r5, #44]
 1831 009e DAE7     		b	.L129
 1832              	.LVL142:
 1833              	.L139:
1664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1834              		.loc 1 1664 6 is_stmt 1 view .LVU513
1664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1835              		.loc 1 1664 10 is_stmt 0 view .LVU514
 1836 00a0 2C1D     		adds	r4, r5, #4
 1837 00a2 2046     		mov	r0, r4
 1838 00a4 FFF7FEFF 		bl	uxListRemove
 1839              	.LVL143:
1664:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1840              		.loc 1 1664 8 view .LVU515
 1841 00a8 30B9     		cbnz	r0, .L132
1669:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1842              		.loc 1 1669 7 is_stmt 1 view .LVU516
 1843 00aa 0122     		movs	r2, #1
 1844 00ac B240     		lsls	r2, r2, r6
 1845 00ae 0C49     		ldr	r1, .L140+8
 1846 00b0 0B68     		ldr	r3, [r1]
 1847 00b2 23EA0203 		bic	r3, r3, r2
 1848 00b6 0B60     		str	r3, [r1]
 1849              	.L132:
1673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1850              		.loc 1 1673 31 view .LVU517
1675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1851              		.loc 1 1675 6 view .LVU518
1675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1852              		.loc 1 1675 6 view .LVU519
 1853 00b8 E86A     		ldr	r0, [r5, #44]
 1854 00ba 0123     		movs	r3, #1
 1855 00bc 8340     		lsls	r3, r3, r0
 1856 00be 084A     		ldr	r2, .L140+8
 1857 00c0 1168     		ldr	r1, [r2]
 1858 00c2 0B43     		orrs	r3, r3, r1
 1859 00c4 1360     		str	r3, [r2]
1675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1860              		.loc 1 1675 6 view .LVU520
 1861 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1862 00ca 2146     		mov	r1, r4
 1863 00cc 034B     		ldr	r3, .L140+4
 1864 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1865 00d2 FFF7FEFF 		bl	vListInsertEnd
 1866              	.LVL144:
1675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1867              		.loc 1 1675 36 view .LVU521
 1868 00d6 CDE7     		b	.L131
 1869              	.L141:
 1870              		.align	2
 1871              	.L140:
 1872 00d8 00000000 		.word	.LANCHOR10
 1873 00dc 00000000 		.word	.LANCHOR4
 1874 00e0 00000000 		.word	.LANCHOR13
 1875              		.cfi_endproc
 1876              	.LFE13:
 1878              		.section	.text.vTaskResume,"ax",%progbits
ARM GAS  /tmp/cc6UspJj.s 			page 138


 1879              		.align	1
 1880              		.global	vTaskResume
 1881              		.syntax unified
 1882              		.thumb
 1883              		.thumb_func
 1884              		.fpu fpv4-sp-d16
 1886              	vTaskResume:
 1887              	.LVL145:
 1888              	.LFB16:
1852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1889              		.loc 1 1852 2 view -0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 0, uses_anonymous_args = 0
1852:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1893              		.loc 1 1852 2 is_stmt 0 view .LVU523
 1894 0000 38B5     		push	{r3, r4, r5, lr}
 1895              	.LCFI19:
 1896              		.cfi_def_cfa_offset 16
 1897              		.cfi_offset 3, -16
 1898              		.cfi_offset 4, -12
 1899              		.cfi_offset 5, -8
 1900              		.cfi_offset 14, -4
1853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1901              		.loc 1 1853 2 is_stmt 1 view .LVU524
 1902              	.LVL146:
1856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1903              		.loc 1 1856 3 view .LVU525
 1904 0002 68B1     		cbz	r0, .L148
 1905 0004 0446     		mov	r4, r0
1856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1906              		.loc 1 1856 32 discriminator 2 view .LVU526
1860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1907              		.loc 1 1860 3 discriminator 2 view .LVU527
1860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1908              		.loc 1 1860 15 is_stmt 0 discriminator 2 view .LVU528
 1909 0006 1D4B     		ldr	r3, .L150
 1910 0008 1B68     		ldr	r3, [r3]
1860:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1911              		.loc 1 1860 5 discriminator 2 view .LVU529
 1912 000a 8342     		cmp	r3, r0
 1913 000c 07D0     		beq	.L142
1862:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1914              		.loc 1 1862 4 is_stmt 1 view .LVU530
 1915 000e FFF7FEFF 		bl	vPortEnterCritical
 1916              	.LVL147:
1864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1917              		.loc 1 1864 5 view .LVU531
1864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1918              		.loc 1 1864 9 is_stmt 0 view .LVU532
 1919 0012 2046     		mov	r0, r4
 1920 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1921              	.LVL148:
1864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1922              		.loc 1 1864 7 view .LVU533
 1923 0018 58B9     		cbnz	r0, .L149
 1924              	.L146:
ARM GAS  /tmp/cc6UspJj.s 			page 139


1888:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1925              		.loc 1 1888 30 is_stmt 1 view .LVU534
1891:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1926              		.loc 1 1891 4 view .LVU535
 1927 001a FFF7FEFF 		bl	vPortExitCritical
 1928              	.LVL149:
1895:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1929              		.loc 1 1895 28 view .LVU536
 1930              	.L142:
1897:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1931              		.loc 1 1897 2 is_stmt 0 view .LVU537
 1932 001e 38BD     		pop	{r3, r4, r5, pc}
 1933              	.LVL150:
 1934              	.L148:
1856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1935              		.loc 1 1856 3 is_stmt 1 view .LVU538
 1936              	.LBB140:
 1937              	.LBI140:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1938              		.loc 2 191 30 view .LVU539
 1939              	.LBB141:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1940              		.loc 2 193 1 view .LVU540
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1941              		.loc 2 195 2 view .LVU541
 1942              		.syntax unified
 1943              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1944 0020 4FF05003 			mov r3, #80												
 1945 0024 83F31188 		msr basepri, r3											
 1946 0028 BFF36F8F 		isb														
 1947 002c BFF34F8F 		dsb														
 1948              	
 1949              	@ 0 "" 2
 1950              	.LVL151:
 1951              		.thumb
 1952              		.syntax unified
 1953              	.L144:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1954              		.loc 2 195 2 is_stmt 0 view .LVU542
 1955              	.LBE141:
 1956              	.LBE140:
1856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1957              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU543
1856:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1958              		.loc 1 1856 3 discriminator 1 view .LVU544
 1959 0030 FEE7     		b	.L144
 1960              	.LVL152:
 1961              	.L149:
1866:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1962              		.loc 1 1866 31 view .LVU545
1870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1963              		.loc 1 1870 6 view .LVU546
1870:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1964              		.loc 1 1870 15 is_stmt 0 view .LVU547
 1965 0032 251D     		adds	r5, r4, #4
 1966 0034 2846     		mov	r0, r5
 1967 0036 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/cc6UspJj.s 			page 140


 1968              	.LVL153:
1871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1969              		.loc 1 1871 6 is_stmt 1 view .LVU548
1871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1970              		.loc 1 1871 6 view .LVU549
 1971 003a E06A     		ldr	r0, [r4, #44]
 1972 003c 0123     		movs	r3, #1
 1973 003e 8340     		lsls	r3, r3, r0
 1974 0040 0F4A     		ldr	r2, .L150+4
 1975 0042 1168     		ldr	r1, [r2]
 1976 0044 0B43     		orrs	r3, r3, r1
 1977 0046 1360     		str	r3, [r2]
1871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1978              		.loc 1 1871 6 view .LVU550
 1979 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1980 004c 2946     		mov	r1, r5
 1981 004e 0D4B     		ldr	r3, .L150+8
 1982 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1983 0054 FFF7FEFF 		bl	vListInsertEnd
 1984              	.LVL154:
1871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1985              		.loc 1 1871 36 view .LVU551
1874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1986              		.loc 1 1874 6 view .LVU552
1874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1987              		.loc 1 1874 15 is_stmt 0 view .LVU553
 1988 0058 E26A     		ldr	r2, [r4, #44]
1874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1989              		.loc 1 1874 43 view .LVU554
 1990 005a 084B     		ldr	r3, .L150
 1991 005c 1B68     		ldr	r3, [r3]
 1992 005e DB6A     		ldr	r3, [r3, #44]
1874:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1993              		.loc 1 1874 8 view .LVU555
 1994 0060 9A42     		cmp	r2, r3
 1995 0062 DAD3     		bcc	.L146
1879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1996              		.loc 1 1879 7 is_stmt 1 view .LVU556
 1997 0064 4FF0E023 		mov	r3, #-536813568
 1998 0068 4FF08052 		mov	r2, #268435456
 1999 006c C3F8042D 		str	r2, [r3, #3332]
1879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2000              		.loc 1 1879 7 view .LVU557
 2001              		.syntax unified
 2002              	@ 1879 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2003 0070 BFF34F8F 		dsb
 2004              	@ 0 "" 2
1879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2005              		.loc 1 1879 7 view .LVU558
 2006              	@ 1879 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2007 0074 BFF36F8F 		isb
 2008              	@ 0 "" 2
1879:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2009              		.loc 1 1879 38 view .LVU559
 2010              		.thumb
 2011              		.syntax unified
 2012 0078 CFE7     		b	.L146
ARM GAS  /tmp/cc6UspJj.s 			page 141


 2013              	.L151:
 2014 007a 00BF     		.align	2
 2015              	.L150:
 2016 007c 00000000 		.word	.LANCHOR10
 2017 0080 00000000 		.word	.LANCHOR13
 2018 0084 00000000 		.word	.LANCHOR4
 2019              		.cfi_endproc
 2020              	.LFE16:
 2022              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2023              		.align	1
 2024              		.global	xTaskResumeFromISR
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2028              		.fpu fpv4-sp-d16
 2030              	xTaskResumeFromISR:
 2031              	.LVL155:
 2032              	.LFB17:
1906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2033              		.loc 1 1906 2 view -0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 0
 2036              		@ frame_needed = 0, uses_anonymous_args = 0
1906:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2037              		.loc 1 1906 2 is_stmt 0 view .LVU561
 2038 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2039              	.LCFI20:
 2040              		.cfi_def_cfa_offset 24
 2041              		.cfi_offset 3, -24
 2042              		.cfi_offset 4, -20
 2043              		.cfi_offset 5, -16
 2044              		.cfi_offset 6, -12
 2045              		.cfi_offset 7, -8
 2046              		.cfi_offset 14, -4
1907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2047              		.loc 1 1907 2 is_stmt 1 view .LVU562
 2048              	.LVL156:
1908:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2049              		.loc 1 1908 2 view .LVU563
1909:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2050              		.loc 1 1909 2 view .LVU564
1911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2051              		.loc 1 1911 3 view .LVU565
 2052 0002 90B3     		cbz	r0, .L160
 2053 0004 0546     		mov	r5, r0
1911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2054              		.loc 1 1911 32 discriminator 2 view .LVU566
1929:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2055              		.loc 1 1929 3 discriminator 2 view .LVU567
 2056 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2057              	.LVL157:
1931:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2058              		.loc 1 1931 3 discriminator 2 view .LVU568
 2059              	.LBB142:
 2060              	.LBI142:
 207:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2061              		.loc 2 207 34 discriminator 2 view .LVU569
ARM GAS  /tmp/cc6UspJj.s 			page 142


 2062              	.LBB143:
 209:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2063              		.loc 2 209 1 discriminator 2 view .LVU570
 211:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2064              		.loc 2 211 2 discriminator 2 view .LVU571
 2065              		.syntax unified
 2066              	@ 211 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2067 000a EFF31184 			mrs r4, basepri											
 2068 000e 4FF05003 		mov r3, #80												
 2069 0012 83F31188 		msr basepri, r3											
 2070 0016 BFF36F8F 		isb														
 2071 001a BFF34F8F 		dsb														
 2072              	
 2073              	@ 0 "" 2
 2074              	.LVL158:
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2075              		.loc 2 223 2 discriminator 2 view .LVU572
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2076              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU573
 2077              		.thumb
 2078              		.syntax unified
 2079              	.LBE143:
 2080              	.LBE142:
1933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2081              		.loc 1 1933 4 is_stmt 1 discriminator 2 view .LVU574
1933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2082              		.loc 1 1933 8 is_stmt 0 discriminator 2 view .LVU575
 2083 001e 2846     		mov	r0, r5
 2084 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2085              	.LVL159:
1933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2086              		.loc 1 1933 6 discriminator 2 view .LVU576
 2087 0024 0646     		mov	r6, r0
 2088 0026 E0B1     		cbz	r0, .L155
1935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2089              		.loc 1 1935 39 is_stmt 1 view .LVU577
1938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2090              		.loc 1 1938 5 view .LVU578
1938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2091              		.loc 1 1938 30 is_stmt 0 view .LVU579
 2092 0028 194B     		ldr	r3, .L161
 2093 002a 1B68     		ldr	r3, [r3]
1938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2094              		.loc 1 1938 7 view .LVU580
 2095 002c 43BB     		cbnz	r3, .L156
1942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2096              		.loc 1 1942 6 is_stmt 1 view .LVU581
1942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2097              		.loc 1 1942 15 is_stmt 0 view .LVU582
 2098 002e EA6A     		ldr	r2, [r5, #44]
1942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2099              		.loc 1 1942 43 view .LVU583
 2100 0030 184B     		ldr	r3, .L161+4
 2101 0032 1B68     		ldr	r3, [r3]
 2102 0034 DB6A     		ldr	r3, [r3, #44]
1942:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2103              		.loc 1 1942 8 view .LVU584
ARM GAS  /tmp/cc6UspJj.s 			page 143


 2104 0036 9A42     		cmp	r2, r3
 2105 0038 20D2     		bcs	.L158
1907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2106              		.loc 1 1907 13 view .LVU585
 2107 003a 0026     		movs	r6, #0
 2108              	.L157:
 2109              	.LVL160:
1948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2110              		.loc 1 1948 31 is_stmt 1 view .LVU586
1951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2111              		.loc 1 1951 6 view .LVU587
1951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2112              		.loc 1 1951 15 is_stmt 0 view .LVU588
 2113 003c 2F1D     		adds	r7, r5, #4
 2114 003e 3846     		mov	r0, r7
 2115 0040 FFF7FEFF 		bl	uxListRemove
 2116              	.LVL161:
1952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2117              		.loc 1 1952 6 is_stmt 1 view .LVU589
1952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2118              		.loc 1 1952 6 view .LVU590
 2119 0044 E86A     		ldr	r0, [r5, #44]
 2120 0046 0123     		movs	r3, #1
 2121 0048 8340     		lsls	r3, r3, r0
 2122 004a 134A     		ldr	r2, .L161+8
 2123 004c 1168     		ldr	r1, [r2]
 2124 004e 0B43     		orrs	r3, r3, r1
 2125 0050 1360     		str	r3, [r2]
1952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2126              		.loc 1 1952 6 view .LVU591
 2127 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2128 0056 3946     		mov	r1, r7
 2129 0058 104B     		ldr	r3, .L161+12
 2130 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2131 005e FFF7FEFF 		bl	vListInsertEnd
 2132              	.LVL162:
1952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2133              		.loc 1 1952 36 view .LVU592
 2134              	.L155:
1964:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2135              		.loc 1 1964 29 view .LVU593
1967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2136              		.loc 1 1967 3 view .LVU594
 2137              	.LBB144:
 2138              	.LBI144:
 227:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2139              		.loc 2 227 30 view .LVU595
 2140              	.LBB145:
 2141              		.loc 2 229 2 view .LVU596
 2142              		.syntax unified
 2143              	@ 229 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2144 0062 84F31188 			msr basepri, r4	
 2145              	@ 0 "" 2
 2146              		.thumb
 2147              		.syntax unified
 2148              	.LBE145:
 2149              	.LBE144:
ARM GAS  /tmp/cc6UspJj.s 			page 144


1969:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2150              		.loc 1 1969 3 view .LVU597
1970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2151              		.loc 1 1970 2 is_stmt 0 view .LVU598
 2152 0066 3046     		mov	r0, r6
 2153 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2154              	.LVL163:
 2155              	.L160:
1911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2156              		.loc 1 1911 3 is_stmt 1 view .LVU599
 2157              	.LBB146:
 2158              	.LBI146:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2159              		.loc 2 191 30 view .LVU600
 2160              	.LBB147:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2161              		.loc 2 193 1 view .LVU601
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2162              		.loc 2 195 2 view .LVU602
 2163              		.syntax unified
 2164              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2165 006a 4FF05003 			mov r3, #80												
 2166 006e 83F31188 		msr basepri, r3											
 2167 0072 BFF36F8F 		isb														
 2168 0076 BFF34F8F 		dsb														
 2169              	
 2170              	@ 0 "" 2
 2171              	.LVL164:
 2172              		.thumb
 2173              		.syntax unified
 2174              	.L154:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2175              		.loc 2 195 2 is_stmt 0 view .LVU603
 2176              	.LBE147:
 2177              	.LBE146:
1911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2178              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU604
1911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2179              		.loc 1 1911 3 discriminator 1 view .LVU605
 2180 007a FEE7     		b	.L154
 2181              	.LVL165:
 2182              	.L158:
1944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2183              		.loc 1 1944 22 is_stmt 0 view .LVU606
 2184 007c 0126     		movs	r6, #1
 2185 007e DDE7     		b	.L157
 2186              	.L156:
1959:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2187              		.loc 1 1959 6 is_stmt 1 view .LVU607
 2188 0080 05F11801 		add	r1, r5, #24
 2189 0084 0648     		ldr	r0, .L161+16
 2190 0086 FFF7FEFF 		bl	vListInsertEnd
 2191              	.LVL166:
1907:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2192              		.loc 1 1907 13 is_stmt 0 view .LVU608
 2193 008a 0026     		movs	r6, #0
 2194 008c E9E7     		b	.L155
ARM GAS  /tmp/cc6UspJj.s 			page 145


 2195              	.L162:
 2196 008e 00BF     		.align	2
 2197              	.L161:
 2198 0090 00000000 		.word	.LANCHOR16
 2199 0094 00000000 		.word	.LANCHOR10
 2200 0098 00000000 		.word	.LANCHOR13
 2201 009c 00000000 		.word	.LANCHOR4
 2202 00a0 00000000 		.word	.LANCHOR1
 2203              		.cfi_endproc
 2204              	.LFE17:
 2206              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2207              		.align	2
 2208              	.LC0:
 2209 0000 49444C45 		.ascii	"IDLE\000"
 2209      00
 2210              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2211              		.align	1
 2212              		.global	vTaskStartScheduler
 2213              		.syntax unified
 2214              		.thumb
 2215              		.thumb_func
 2216              		.fpu fpv4-sp-d16
 2218              	vTaskStartScheduler:
 2219              	.LFB18:
1976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2220              		.loc 1 1976 1 is_stmt 1 view -0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 16
 2223              		@ frame_needed = 0, uses_anonymous_args = 0
 2224 0000 10B5     		push	{r4, lr}
 2225              	.LCFI21:
 2226              		.cfi_def_cfa_offset 8
 2227              		.cfi_offset 4, -8
 2228              		.cfi_offset 14, -4
 2229 0002 88B0     		sub	sp, sp, #32
 2230              	.LCFI22:
 2231              		.cfi_def_cfa_offset 40
1977:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2232              		.loc 1 1977 1 view .LVU610
 2233              	.LBB148:
1982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2234              		.loc 1 1982 3 view .LVU611
1982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2235              		.loc 1 1982 17 is_stmt 0 view .LVU612
 2236 0004 0024     		movs	r4, #0
 2237 0006 0594     		str	r4, [sp, #20]
1983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2238              		.loc 1 1983 3 is_stmt 1 view .LVU613
1983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2239              		.loc 1 1983 16 is_stmt 0 view .LVU614
 2240 0008 0694     		str	r4, [sp, #24]
1984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2241              		.loc 1 1984 3 is_stmt 1 view .LVU615
1988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2242              		.loc 1 1988 3 view .LVU616
 2243 000a 07AA     		add	r2, sp, #28
 2244 000c 06A9     		add	r1, sp, #24
ARM GAS  /tmp/cc6UspJj.s 			page 146


 2245 000e 05A8     		add	r0, sp, #20
 2246 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2247              	.LVL167:
1989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2248              		.loc 1 1989 3 view .LVU617
1989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2249              		.loc 1 1989 21 is_stmt 0 view .LVU618
 2250 0014 059B     		ldr	r3, [sp, #20]
 2251 0016 0293     		str	r3, [sp, #8]
 2252 0018 069B     		ldr	r3, [sp, #24]
 2253 001a 0193     		str	r3, [sp, #4]
 2254 001c 0094     		str	r4, [sp]
 2255 001e 2346     		mov	r3, r4
 2256 0020 079A     		ldr	r2, [sp, #28]
 2257 0022 0E49     		ldr	r1, .L167
 2258 0024 0E48     		ldr	r0, .L167+4
 2259 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2260              	.LVL168:
1989:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2261              		.loc 1 1989 19 view .LVU619
 2262 002a 0E4B     		ldr	r3, .L167+8
 2263 002c 1860     		str	r0, [r3]
1997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2264              		.loc 1 1997 3 is_stmt 1 view .LVU620
1997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2265              		.loc 1 1997 5 is_stmt 0 view .LVU621
 2266 002e 90B1     		cbz	r0, .L163
 2267              	.LVL169:
1997:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2268              		.loc 1 1997 5 view .LVU622
 2269              	.LBE148:
2031:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2270              		.loc 1 2031 2 is_stmt 1 view .LVU623
2047:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2271              		.loc 1 2047 3 view .LVU624
 2272              	.LBB149:
 2273              	.LBI149:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2274              		.loc 2 191 30 view .LVU625
 2275              	.LBB150:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2276              		.loc 2 193 1 view .LVU626
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2277              		.loc 2 195 2 view .LVU627
 2278              		.syntax unified
 2279              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2280 0030 4FF05003 			mov r3, #80												
 2281 0034 83F31188 		msr basepri, r3											
 2282 0038 BFF36F8F 		isb														
 2283 003c BFF34F8F 		dsb														
 2284              	
 2285              	@ 0 "" 2
 2286              		.thumb
 2287              		.syntax unified
 2288              	.LBE150:
 2289              	.LBE149:
2059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
ARM GAS  /tmp/cc6UspJj.s 			page 147


 2290              		.loc 1 2059 3 view .LVU628
2059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2291              		.loc 1 2059 24 is_stmt 0 view .LVU629
 2292 0040 094B     		ldr	r3, .L167+12
 2293 0042 4FF0FF32 		mov	r2, #-1
 2294 0046 1A60     		str	r2, [r3]
2060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2295              		.loc 1 2060 3 is_stmt 1 view .LVU630
2060:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2296              		.loc 1 2060 21 is_stmt 0 view .LVU631
 2297 0048 084B     		ldr	r3, .L167+16
 2298 004a 0122     		movs	r2, #1
 2299 004c 1A60     		str	r2, [r3]
2061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2300              		.loc 1 2061 3 is_stmt 1 view .LVU632
2061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2301              		.loc 1 2061 14 is_stmt 0 view .LVU633
 2302 004e 084B     		ldr	r3, .L167+20
 2303 0050 1C60     		str	r4, [r3]
2069:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2304              		.loc 1 2069 43 is_stmt 1 view .LVU634
2071:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2305              		.loc 1 2071 26 view .LVU635
2075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2306              		.loc 1 2075 3 view .LVU636
2075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2307              		.loc 1 2075 7 is_stmt 0 view .LVU637
 2308 0052 FFF7FEFF 		bl	xPortStartScheduler
 2309              	.LVL170:
 2310              	.L163:
2096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2311              		.loc 1 2096 1 view .LVU638
 2312 0056 08B0     		add	sp, sp, #32
 2313              	.LCFI23:
 2314              		.cfi_def_cfa_offset 8
 2315              		@ sp needed
 2316 0058 10BD     		pop	{r4, pc}
 2317              	.L168:
 2318 005a 00BF     		.align	2
 2319              	.L167:
 2320 005c 00000000 		.word	.LC0
 2321 0060 00000000 		.word	prvIdleTask
 2322 0064 00000000 		.word	.LANCHOR17
 2323 0068 00000000 		.word	.LANCHOR3
 2324 006c 00000000 		.word	.LANCHOR11
 2325 0070 00000000 		.word	.LANCHOR15
 2326              		.cfi_endproc
 2327              	.LFE18:
 2329              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2330              		.align	1
 2331              		.global	vTaskEndScheduler
 2332              		.syntax unified
 2333              		.thumb
 2334              		.thumb_func
 2335              		.fpu fpv4-sp-d16
 2337              	vTaskEndScheduler:
 2338              	.LFB19:
ARM GAS  /tmp/cc6UspJj.s 			page 148


2100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2339              		.loc 1 2100 1 is_stmt 1 view -0
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 0
 2342              		@ frame_needed = 0, uses_anonymous_args = 0
 2343 0000 08B5     		push	{r3, lr}
 2344              	.LCFI24:
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 3, -8
 2347              		.cfi_offset 14, -4
2104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2348              		.loc 1 2104 2 view .LVU640
 2349              	.LBB151:
 2350              	.LBI151:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2351              		.loc 2 191 30 view .LVU641
 2352              	.LBB152:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2353              		.loc 2 193 1 view .LVU642
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2354              		.loc 2 195 2 view .LVU643
 2355              		.syntax unified
 2356              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2357 0002 4FF05003 			mov r3, #80												
 2358 0006 83F31188 		msr basepri, r3											
 2359 000a BFF36F8F 		isb														
 2360 000e BFF34F8F 		dsb														
 2361              	
 2362              	@ 0 "" 2
 2363              		.thumb
 2364              		.syntax unified
 2365              	.LBE152:
 2366              	.LBE151:
2105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2367              		.loc 1 2105 2 view .LVU644
2105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2368              		.loc 1 2105 20 is_stmt 0 view .LVU645
 2369 0012 034B     		ldr	r3, .L171
 2370 0014 0022     		movs	r2, #0
 2371 0016 1A60     		str	r2, [r3]
2106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2372              		.loc 1 2106 2 is_stmt 1 view .LVU646
 2373 0018 FFF7FEFF 		bl	vPortEndScheduler
 2374              	.LVL171:
2107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2375              		.loc 1 2107 1 is_stmt 0 view .LVU647
 2376 001c 08BD     		pop	{r3, pc}
 2377              	.L172:
 2378 001e 00BF     		.align	2
 2379              	.L171:
 2380 0020 00000000 		.word	.LANCHOR11
 2381              		.cfi_endproc
 2382              	.LFE19:
 2384              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2385              		.align	1
 2386              		.global	vTaskSuspendAll
 2387              		.syntax unified
ARM GAS  /tmp/cc6UspJj.s 			page 149


 2388              		.thumb
 2389              		.thumb_func
 2390              		.fpu fpv4-sp-d16
 2392              	vTaskSuspendAll:
 2393              	.LFB20:
2111:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2394              		.loc 1 2111 1 is_stmt 1 view -0
 2395              		.cfi_startproc
 2396              		@ args = 0, pretend = 0, frame = 0
 2397              		@ frame_needed = 0, uses_anonymous_args = 0
 2398              		@ link register save eliminated.
2119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2399              		.loc 1 2119 24 view .LVU649
2123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2400              		.loc 1 2123 2 view .LVU650
 2401 0000 024A     		ldr	r2, .L174
 2402 0002 1368     		ldr	r3, [r2]
 2403 0004 0133     		adds	r3, r3, #1
 2404 0006 1360     		str	r3, [r2]
2127:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2405              		.loc 1 2127 2 view .LVU651
2128:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2406              		.loc 1 2128 1 is_stmt 0 view .LVU652
 2407 0008 7047     		bx	lr
 2408              	.L175:
 2409 000a 00BF     		.align	2
 2410              	.L174:
 2411 000c 00000000 		.word	.LANCHOR16
 2412              		.cfi_endproc
 2413              	.LFE20:
 2415              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2416              		.align	1
 2417              		.global	xTaskGetTickCount
 2418              		.syntax unified
 2419              		.thumb
 2420              		.thumb_func
 2421              		.fpu fpv4-sp-d16
 2423              	xTaskGetTickCount:
 2424              	.LFB22:
2305:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2425              		.loc 1 2305 1 is_stmt 1 view -0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 0
 2428              		@ frame_needed = 0, uses_anonymous_args = 0
 2429              		@ link register save eliminated.
2306:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2430              		.loc 1 2306 1 view .LVU654
2309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2431              		.loc 1 2309 32 view .LVU655
2311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2432              		.loc 1 2311 3 view .LVU656
2311:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2433              		.loc 1 2311 10 is_stmt 0 view .LVU657
 2434 0000 014B     		ldr	r3, .L177
 2435 0002 1868     		ldr	r0, [r3]
 2436              	.LVL172:
2313:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 150


 2437              		.loc 1 2313 31 is_stmt 1 view .LVU658
2315:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2438              		.loc 1 2315 2 view .LVU659
2316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2439              		.loc 1 2316 1 is_stmt 0 view .LVU660
 2440 0004 7047     		bx	lr
 2441              	.L178:
 2442 0006 00BF     		.align	2
 2443              	.L177:
 2444 0008 00000000 		.word	.LANCHOR15
 2445              		.cfi_endproc
 2446              	.LFE22:
 2448              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2449              		.align	1
 2450              		.global	xTaskGetTickCountFromISR
 2451              		.syntax unified
 2452              		.thumb
 2453              		.thumb_func
 2454              		.fpu fpv4-sp-d16
 2456              	xTaskGetTickCountFromISR:
 2457              	.LFB23:
2320:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2458              		.loc 1 2320 1 is_stmt 1 view -0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 0
 2461              		@ frame_needed = 0, uses_anonymous_args = 0
 2462 0000 08B5     		push	{r3, lr}
 2463              	.LCFI25:
 2464              		.cfi_def_cfa_offset 8
 2465              		.cfi_offset 3, -8
 2466              		.cfi_offset 14, -4
2321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2467              		.loc 1 2321 1 view .LVU662
2322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2468              		.loc 1 2322 1 view .LVU663
2338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2469              		.loc 1 2338 2 view .LVU664
 2470 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2471              	.LVL173:
2340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2472              		.loc 1 2340 2 view .LVU665
2342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2473              		.loc 1 2342 3 view .LVU666
2342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2474              		.loc 1 2342 11 is_stmt 0 view .LVU667
 2475 0006 014B     		ldr	r3, .L181
 2476 0008 1868     		ldr	r0, [r3]
 2477              	.LVL174:
2344:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2478              		.loc 1 2344 2 is_stmt 1 view .LVU668
2346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2479              		.loc 1 2346 2 view .LVU669
2347:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2480              		.loc 1 2347 1 is_stmt 0 view .LVU670
 2481 000a 08BD     		pop	{r3, pc}
 2482              	.L182:
 2483              		.align	2
ARM GAS  /tmp/cc6UspJj.s 			page 151


 2484              	.L181:
 2485 000c 00000000 		.word	.LANCHOR15
 2486              		.cfi_endproc
 2487              	.LFE23:
 2489              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2490              		.align	1
 2491              		.global	uxTaskGetNumberOfTasks
 2492              		.syntax unified
 2493              		.thumb
 2494              		.thumb_func
 2495              		.fpu fpv4-sp-d16
 2497              	uxTaskGetNumberOfTasks:
 2498              	.LFB24:
2351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2499              		.loc 1 2351 1 is_stmt 1 view -0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 0
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 2503              		@ link register save eliminated.
2354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2504              		.loc 1 2354 2 view .LVU672
2354:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2505              		.loc 1 2354 9 is_stmt 0 view .LVU673
 2506 0000 014B     		ldr	r3, .L184
 2507 0002 1868     		ldr	r0, [r3]
2355:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2508              		.loc 1 2355 1 view .LVU674
 2509 0004 7047     		bx	lr
 2510              	.L185:
 2511 0006 00BF     		.align	2
 2512              	.L184:
 2513 0008 00000000 		.word	.LANCHOR9
 2514              		.cfi_endproc
 2515              	.LFE24:
 2517              		.section	.text.pcTaskGetName,"ax",%progbits
 2518              		.align	1
 2519              		.global	pcTaskGetName
 2520              		.syntax unified
 2521              		.thumb
 2522              		.thumb_func
 2523              		.fpu fpv4-sp-d16
 2525              	pcTaskGetName:
 2526              	.LVL175:
 2527              	.LFB25:
2359:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2528              		.loc 1 2359 1 is_stmt 1 view -0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 0
 2531              		@ frame_needed = 0, uses_anonymous_args = 0
 2532              		@ link register save eliminated.
2360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2533              		.loc 1 2360 1 view .LVU676
2364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2534              		.loc 1 2364 2 view .LVU677
2364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2535              		.loc 1 2364 10 is_stmt 0 view .LVU678
 2536 0000 0346     		mov	r3, r0
ARM GAS  /tmp/cc6UspJj.s 			page 152


 2537 0002 18B1     		cbz	r0, .L190
 2538              	.LVL176:
 2539              	.L187:
2365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2540              		.loc 1 2365 2 is_stmt 1 discriminator 4 view .LVU679
 2541 0004 2BB1     		cbz	r3, .L191
2365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2542              		.loc 1 2365 23 discriminator 2 view .LVU680
2366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2543              		.loc 1 2366 2 discriminator 2 view .LVU681
2367:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2544              		.loc 1 2367 1 is_stmt 0 discriminator 2 view .LVU682
 2545 0006 03F13400 		add	r0, r3, #52
 2546 000a 7047     		bx	lr
 2547              	.LVL177:
 2548              	.L190:
2364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2549              		.loc 1 2364 10 discriminator 1 view .LVU683
 2550 000c 054B     		ldr	r3, .L192
 2551 000e 1B68     		ldr	r3, [r3]
 2552              	.LVL178:
2364:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2553              		.loc 1 2364 10 discriminator 1 view .LVU684
 2554 0010 F8E7     		b	.L187
 2555              	.LVL179:
 2556              	.L191:
2365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2557              		.loc 1 2365 2 is_stmt 1 view .LVU685
 2558              	.LBB153:
 2559              	.LBI153:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2560              		.loc 2 191 30 view .LVU686
 2561              	.LBB154:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2562              		.loc 2 193 1 view .LVU687
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2563              		.loc 2 195 2 view .LVU688
 2564              		.syntax unified
 2565              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2566 0012 4FF05003 			mov r3, #80												
 2567 0016 83F31188 		msr basepri, r3											
 2568 001a BFF36F8F 		isb														
 2569 001e BFF34F8F 		dsb														
 2570              	
 2571              	@ 0 "" 2
 2572              	.LVL180:
 2573              		.thumb
 2574              		.syntax unified
 2575              	.L189:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2576              		.loc 2 195 2 is_stmt 0 view .LVU689
 2577              	.LBE154:
 2578              	.LBE153:
2365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2579              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU690
2365:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2580              		.loc 1 2365 2 discriminator 1 view .LVU691
ARM GAS  /tmp/cc6UspJj.s 			page 153


 2581 0022 FEE7     		b	.L189
 2582              	.L193:
 2583              		.align	2
 2584              	.L192:
 2585 0024 00000000 		.word	.LANCHOR10
 2586              		.cfi_endproc
 2587              	.LFE25:
 2589              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2590              		.align	1
 2591              		.global	xTaskIncrementTick
 2592              		.syntax unified
 2593              		.thumb
 2594              		.thumb_func
 2595              		.fpu fpv4-sp-d16
 2597              	xTaskIncrementTick:
 2598              	.LFB27:
2708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2599              		.loc 1 2708 1 view -0
 2600              		.cfi_startproc
 2601              		@ args = 0, pretend = 0, frame = 0
 2602              		@ frame_needed = 0, uses_anonymous_args = 0
 2603 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2604              	.LCFI26:
 2605              		.cfi_def_cfa_offset 24
 2606              		.cfi_offset 3, -24
 2607              		.cfi_offset 4, -20
 2608              		.cfi_offset 5, -16
 2609              		.cfi_offset 6, -12
 2610              		.cfi_offset 7, -8
 2611              		.cfi_offset 14, -4
2709:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2612              		.loc 1 2709 1 view .LVU693
2710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2613              		.loc 1 2710 1 view .LVU694
2711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2614              		.loc 1 2711 1 view .LVU695
 2615              	.LVL181:
2716:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2616              		.loc 1 2716 40 view .LVU696
2717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2617              		.loc 1 2717 2 view .LVU697
2717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2618              		.loc 1 2717 27 is_stmt 0 view .LVU698
 2619 0002 3A4B     		ldr	r3, .L215
 2620 0004 1B68     		ldr	r3, [r3]
2717:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2621              		.loc 1 2717 4 view .LVU699
 2622 0006 002B     		cmp	r3, #0
 2623 0008 69D1     		bne	.L195
 2624              	.LBB155:
2721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2625              		.loc 1 2721 3 is_stmt 1 view .LVU700
2721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2626              		.loc 1 2721 49 is_stmt 0 view .LVU701
 2627 000a 394B     		ldr	r3, .L215+4
 2628 000c 1D68     		ldr	r5, [r3]
2721:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 154


 2629              		.loc 1 2721 20 view .LVU702
 2630 000e 0135     		adds	r5, r5, #1
 2631              	.LVL182:
2725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2632              		.loc 1 2725 3 is_stmt 1 view .LVU703
2725:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2633              		.loc 1 2725 14 is_stmt 0 view .LVU704
 2634 0010 1D60     		str	r5, [r3]
2727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2635              		.loc 1 2727 3 is_stmt 1 view .LVU705
2727:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2636              		.loc 1 2727 5 is_stmt 0 view .LVU706
 2637 0012 C5B9     		cbnz	r5, .L196
 2638              	.LBB156:
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2639              		.loc 1 2729 4 is_stmt 1 view .LVU707
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2640              		.loc 1 2729 4 view .LVU708
 2641 0014 374B     		ldr	r3, .L215+8
 2642 0016 1B68     		ldr	r3, [r3]
 2643 0018 1B68     		ldr	r3, [r3]
 2644 001a 43B1     		cbz	r3, .L197
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2645              		.loc 1 2729 4 view .LVU709
 2646              	.LBB157:
 2647              	.LBI157:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2648              		.loc 2 191 30 view .LVU710
 2649              	.LBB158:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2650              		.loc 2 193 1 view .LVU711
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2651              		.loc 2 195 2 view .LVU712
 2652              		.syntax unified
 2653              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2654 001c 4FF05003 			mov r3, #80												
 2655 0020 83F31188 		msr basepri, r3											
 2656 0024 BFF36F8F 		isb														
 2657 0028 BFF34F8F 		dsb														
 2658              	
 2659              	@ 0 "" 2
 2660              	.LVL183:
 2661              		.thumb
 2662              		.syntax unified
 2663              	.L198:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2664              		.loc 2 195 2 is_stmt 0 view .LVU713
 2665              	.LBE158:
 2666              	.LBE157:
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2667              		.loc 1 2729 4 is_stmt 1 discriminator 1 view .LVU714
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2668              		.loc 1 2729 4 discriminator 1 view .LVU715
 2669 002c FEE7     		b	.L198
 2670              	.L197:
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2671              		.loc 1 2729 4 discriminator 2 view .LVU716
ARM GAS  /tmp/cc6UspJj.s 			page 155


2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2672              		.loc 1 2729 4 discriminator 2 view .LVU717
 2673 002e 314A     		ldr	r2, .L215+8
 2674 0030 1168     		ldr	r1, [r2]
 2675              	.LVL184:
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2676              		.loc 1 2729 4 discriminator 2 view .LVU718
 2677 0032 314B     		ldr	r3, .L215+12
 2678 0034 1868     		ldr	r0, [r3]
 2679 0036 1060     		str	r0, [r2]
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2680              		.loc 1 2729 4 discriminator 2 view .LVU719
 2681 0038 1960     		str	r1, [r3]
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2682              		.loc 1 2729 4 discriminator 2 view .LVU720
 2683 003a 304A     		ldr	r2, .L215+16
 2684 003c 1368     		ldr	r3, [r2]
 2685 003e 0133     		adds	r3, r3, #1
 2686 0040 1360     		str	r3, [r2]
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2687              		.loc 1 2729 4 discriminator 2 view .LVU721
 2688 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2689              	.LVL185:
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2690              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU722
 2691              	.LBE156:
2729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2692              		.loc 1 2729 30 is_stmt 1 discriminator 2 view .LVU723
 2693              	.L196:
2733:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2694              		.loc 1 2733 28 view .LVU724
2740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2695              		.loc 1 2740 3 view .LVU725
2740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2696              		.loc 1 2740 23 is_stmt 0 view .LVU726
 2697 0046 2E4B     		ldr	r3, .L215+20
 2698 0048 1B68     		ldr	r3, [r3]
2740:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2699              		.loc 1 2740 5 view .LVU727
 2700 004a AB42     		cmp	r3, r5
 2701 004c 3DD9     		bls	.L208
 2702              	.LBE155:
2711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2703              		.loc 1 2711 12 view .LVU728
 2704 004e 0027     		movs	r7, #0
 2705              	.LVL186:
 2706              	.L200:
 2707              	.LBB159:
2823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2708              		.loc 1 2823 4 is_stmt 1 view .LVU729
2823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2709              		.loc 1 2823 8 is_stmt 0 view .LVU730
 2710 0050 2C4B     		ldr	r3, .L215+24
 2711 0052 1B68     		ldr	r3, [r3]
 2712 0054 DB6A     		ldr	r3, [r3, #44]
 2713 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2714 005a 9A00     		lsls	r2, r3, #2
ARM GAS  /tmp/cc6UspJj.s 			page 156


 2715 005c 2A4B     		ldr	r3, .L215+28
 2716 005e 9B58     		ldr	r3, [r3, r2]
2823:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2717              		.loc 1 2823 6 view .LVU731
 2718 0060 012B     		cmp	r3, #1
 2719 0062 00D9     		bls	.L206
2825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2720              		.loc 1 2825 21 view .LVU732
 2721 0064 0127     		movs	r7, #1
 2722              	.LVL187:
 2723              	.L206:
2829:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2724              		.loc 1 2829 29 is_stmt 1 view .LVU733
2851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2725              		.loc 1 2851 4 view .LVU734
2851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2726              		.loc 1 2851 22 is_stmt 0 view .LVU735
 2727 0066 294B     		ldr	r3, .L215+32
 2728 0068 1B68     		ldr	r3, [r3]
2851:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2729              		.loc 1 2851 6 view .LVU736
 2730 006a 002B     		cmp	r3, #0
 2731 006c 3CD0     		beq	.L194
2853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2732              		.loc 1 2853 21 view .LVU737
 2733 006e 0127     		movs	r7, #1
 2734              	.LVL188:
2853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2735              		.loc 1 2853 21 view .LVU738
 2736              	.LBE159:
2875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2737              		.loc 1 2875 2 is_stmt 1 view .LVU739
2875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2738              		.loc 1 2875 9 is_stmt 0 view .LVU740
 2739 0070 3AE0     		b	.L194
 2740              	.LVL189:
 2741              	.L209:
 2742              	.LBB160:
2806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2743              		.loc 1 2806 24 view .LVU741
 2744 0072 0127     		movs	r7, #1
 2745              	.LVL190:
 2746              	.L199:
2742:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2747              		.loc 1 2742 4 is_stmt 1 view .LVU742
2744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2748              		.loc 1 2744 5 view .LVU743
2744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2749              		.loc 1 2744 9 is_stmt 0 view .LVU744
 2750 0074 1F4B     		ldr	r3, .L215+8
 2751 0076 1B68     		ldr	r3, [r3]
 2752 0078 1B68     		ldr	r3, [r3]
2744:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2753              		.loc 1 2744 7 view .LVU745
 2754 007a 43B3     		cbz	r3, .L213
2760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2755              		.loc 1 2760 6 is_stmt 1 view .LVU746
ARM GAS  /tmp/cc6UspJj.s 			page 157


2760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2756              		.loc 1 2760 14 is_stmt 0 view .LVU747
 2757 007c 1D4B     		ldr	r3, .L215+8
 2758 007e 1B68     		ldr	r3, [r3]
 2759 0080 DB68     		ldr	r3, [r3, #12]
2760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2760              		.loc 1 2760 12 view .LVU748
 2761 0082 DC68     		ldr	r4, [r3, #12]
 2762              	.LVL191:
2761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2763              		.loc 1 2761 6 is_stmt 1 view .LVU749
2761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2764              		.loc 1 2761 17 is_stmt 0 view .LVU750
 2765 0084 6368     		ldr	r3, [r4, #4]
 2766              	.LVL192:
2763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2767              		.loc 1 2763 6 is_stmt 1 view .LVU751
2763:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2768              		.loc 1 2763 8 is_stmt 0 view .LVU752
 2769 0086 9D42     		cmp	r5, r3
 2770 0088 26D3     		bcc	.L214
2775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2771              		.loc 1 2775 31 is_stmt 1 view .LVU753
2779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2772              		.loc 1 2779 6 view .LVU754
2779:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2773              		.loc 1 2779 15 is_stmt 0 view .LVU755
 2774 008a 261D     		adds	r6, r4, #4
 2775 008c 3046     		mov	r0, r6
 2776 008e FFF7FEFF 		bl	uxListRemove
 2777              	.LVL193:
2783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2778              		.loc 1 2783 6 is_stmt 1 view .LVU756
2783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2779              		.loc 1 2783 10 is_stmt 0 view .LVU757
 2780 0092 A36A     		ldr	r3, [r4, #40]
2783:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2781              		.loc 1 2783 8 view .LVU758
 2782 0094 1BB1     		cbz	r3, .L203
2785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2783              		.loc 1 2785 7 is_stmt 1 view .LVU759
2785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2784              		.loc 1 2785 16 is_stmt 0 view .LVU760
 2785 0096 04F11800 		add	r0, r4, #24
 2786 009a FFF7FEFF 		bl	uxListRemove
 2787              	.LVL194:
 2788              	.L203:
2789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2789              		.loc 1 2789 31 is_stmt 1 view .LVU761
2794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2790              		.loc 1 2794 6 view .LVU762
2794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2791              		.loc 1 2794 6 view .LVU763
 2792 009e E36A     		ldr	r3, [r4, #44]
 2793 00a0 0122     		movs	r2, #1
 2794 00a2 9A40     		lsls	r2, r2, r3
 2795 00a4 1A49     		ldr	r1, .L215+36
ARM GAS  /tmp/cc6UspJj.s 			page 158


 2796 00a6 0868     		ldr	r0, [r1]
 2797 00a8 0243     		orrs	r2, r2, r0
 2798 00aa 0A60     		str	r2, [r1]
2794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2799              		.loc 1 2794 6 view .LVU764
 2800 00ac 03EB8303 		add	r3, r3, r3, lsl #2
 2801 00b0 9A00     		lsls	r2, r3, #2
 2802 00b2 3146     		mov	r1, r6
 2803 00b4 1448     		ldr	r0, .L215+28
 2804 00b6 1044     		add	r0, r0, r2
 2805 00b8 FFF7FEFF 		bl	vListInsertEnd
 2806              	.LVL195:
2794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2807              		.loc 1 2794 36 view .LVU765
2804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2808              		.loc 1 2804 7 view .LVU766
2804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2809              		.loc 1 2804 16 is_stmt 0 view .LVU767
 2810 00bc E26A     		ldr	r2, [r4, #44]
2804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2811              		.loc 1 2804 44 view .LVU768
 2812 00be 114B     		ldr	r3, .L215+24
 2813 00c0 1B68     		ldr	r3, [r3]
 2814 00c2 DB6A     		ldr	r3, [r3, #44]
2804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2815              		.loc 1 2804 9 view .LVU769
 2816 00c4 9A42     		cmp	r2, r3
 2817 00c6 D4D2     		bcs	.L209
 2818 00c8 D4E7     		b	.L199
 2819              	.LVL196:
 2820              	.L208:
2804:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2821              		.loc 1 2804 9 view .LVU770
 2822              	.LBE160:
2711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2823              		.loc 1 2711 12 view .LVU771
 2824 00ca 0027     		movs	r7, #0
 2825 00cc D2E7     		b	.L199
 2826              	.LVL197:
 2827              	.L213:
 2828              	.LBB161:
2751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2829              		.loc 1 2751 6 is_stmt 1 view .LVU772
2751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2830              		.loc 1 2751 27 is_stmt 0 view .LVU773
 2831 00ce 0C4B     		ldr	r3, .L215+20
 2832 00d0 4FF0FF32 		mov	r2, #-1
 2833 00d4 1A60     		str	r2, [r3]
2752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2834              		.loc 1 2752 6 is_stmt 1 view .LVU774
 2835 00d6 BBE7     		b	.L200
 2836              	.LVL198:
 2837              	.L214:
2770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2838              		.loc 1 2770 7 view .LVU775
2770:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2839              		.loc 1 2770 28 is_stmt 0 view .LVU776
ARM GAS  /tmp/cc6UspJj.s 			page 159


 2840 00d8 094A     		ldr	r2, .L215+20
 2841 00da 1360     		str	r3, [r2]
2771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2842              		.loc 1 2771 7 is_stmt 1 view .LVU777
 2843 00dc B8E7     		b	.L200
 2844              	.LVL199:
 2845              	.L195:
2771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2846              		.loc 1 2771 7 is_stmt 0 view .LVU778
 2847              	.LBE161:
2864:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2848              		.loc 1 2864 3 is_stmt 1 view .LVU779
 2849 00de 0D4A     		ldr	r2, .L215+40
 2850 00e0 1368     		ldr	r3, [r2]
 2851 00e2 0133     		adds	r3, r3, #1
 2852 00e4 1360     		str	r3, [r2]
2711:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2853              		.loc 1 2711 12 is_stmt 0 view .LVU780
 2854 00e6 0027     		movs	r7, #0
 2855              	.LVL200:
 2856              	.L194:
2876:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2857              		.loc 1 2876 1 view .LVU781
 2858 00e8 3846     		mov	r0, r7
 2859 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2860              	.L216:
 2861              		.align	2
 2862              	.L215:
 2863 00ec 00000000 		.word	.LANCHOR16
 2864 00f0 00000000 		.word	.LANCHOR15
 2865 00f4 00000000 		.word	.LANCHOR2
 2866 00f8 00000000 		.word	.LANCHOR8
 2867 00fc 00000000 		.word	.LANCHOR18
 2868 0100 00000000 		.word	.LANCHOR3
 2869 0104 00000000 		.word	.LANCHOR10
 2870 0108 00000000 		.word	.LANCHOR4
 2871 010c 00000000 		.word	.LANCHOR19
 2872 0110 00000000 		.word	.LANCHOR13
 2873 0114 00000000 		.word	.LANCHOR20
 2874              		.cfi_endproc
 2875              	.LFE27:
 2877              		.section	.text.xTaskResumeAll,"ax",%progbits
 2878              		.align	1
 2879              		.global	xTaskResumeAll
 2880              		.syntax unified
 2881              		.thumb
 2882              		.thumb_func
 2883              		.fpu fpv4-sp-d16
 2885              	xTaskResumeAll:
 2886              	.LFB21:
2195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2887              		.loc 1 2195 1 is_stmt 1 view -0
 2888              		.cfi_startproc
 2889              		@ args = 0, pretend = 0, frame = 0
 2890              		@ frame_needed = 0, uses_anonymous_args = 0
 2891 0000 38B5     		push	{r3, r4, r5, lr}
 2892              	.LCFI27:
ARM GAS  /tmp/cc6UspJj.s 			page 160


 2893              		.cfi_def_cfa_offset 16
 2894              		.cfi_offset 3, -16
 2895              		.cfi_offset 4, -12
 2896              		.cfi_offset 5, -8
 2897              		.cfi_offset 14, -4
2196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2898              		.loc 1 2196 1 view .LVU783
 2899              	.LVL201:
2197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2900              		.loc 1 2197 1 view .LVU784
2201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2901              		.loc 1 2201 2 view .LVU785
 2902 0002 354B     		ldr	r3, .L233
 2903 0004 1B68     		ldr	r3, [r3]
 2904 0006 43B9     		cbnz	r3, .L218
2201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2905              		.loc 1 2201 2 view .LVU786
 2906              	.LBB162:
 2907              	.LBI162:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2908              		.loc 2 191 30 view .LVU787
 2909              	.LBB163:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2910              		.loc 2 193 1 view .LVU788
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2911              		.loc 2 195 2 view .LVU789
 2912              		.syntax unified
 2913              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2914 0008 4FF05003 			mov r3, #80												
 2915 000c 83F31188 		msr basepri, r3											
 2916 0010 BFF36F8F 		isb														
 2917 0014 BFF34F8F 		dsb														
 2918              	
 2919              	@ 0 "" 2
 2920              	.LVL202:
 2921              		.thumb
 2922              		.syntax unified
 2923              	.L219:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2924              		.loc 2 195 2 is_stmt 0 view .LVU790
 2925              	.LBE163:
 2926              	.LBE162:
2201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2927              		.loc 1 2201 2 is_stmt 1 discriminator 1 view .LVU791
2201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2928              		.loc 1 2201 2 discriminator 1 view .LVU792
 2929 0018 FEE7     		b	.L219
 2930              	.L218:
2201:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2931              		.loc 1 2201 38 discriminator 2 view .LVU793
2208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2932              		.loc 1 2208 2 discriminator 2 view .LVU794
 2933 001a FFF7FEFF 		bl	vPortEnterCritical
 2934              	.LVL203:
2210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2935              		.loc 1 2210 3 discriminator 2 view .LVU795
 2936 001e 2E4B     		ldr	r3, .L233
ARM GAS  /tmp/cc6UspJj.s 			page 161


 2937 0020 1A68     		ldr	r2, [r3]
 2938 0022 013A     		subs	r2, r2, #1
 2939 0024 1A60     		str	r2, [r3]
2212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2940              		.loc 1 2212 3 discriminator 2 view .LVU796
2212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2941              		.loc 1 2212 28 is_stmt 0 discriminator 2 view .LVU797
 2942 0026 1B68     		ldr	r3, [r3]
2212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2943              		.loc 1 2212 5 discriminator 2 view .LVU798
 2944 0028 002B     		cmp	r3, #0
 2945 002a 4FD1     		bne	.L228
2214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2946              		.loc 1 2214 4 is_stmt 1 view .LVU799
2214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2947              		.loc 1 2214 31 is_stmt 0 view .LVU800
 2948 002c 2B4B     		ldr	r3, .L233+4
 2949 002e 1B68     		ldr	r3, [r3]
2214:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2950              		.loc 1 2214 6 view .LVU801
 2951 0030 0BB9     		cbnz	r3, .L229
2197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2952              		.loc 1 2197 12 view .LVU802
 2953 0032 0024     		movs	r4, #0
 2954 0034 4BE0     		b	.L220
 2955              	.L229:
2196:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2956              		.loc 1 2196 8 view .LVU803
 2957 0036 0024     		movs	r4, #0
 2958              	.LVL204:
 2959              	.L221:
2233:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2960              		.loc 1 2233 31 is_stmt 1 view .LVU804
2218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2961              		.loc 1 2218 52 view .LVU805
2218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2962              		.loc 1 2218 12 is_stmt 0 view .LVU806
 2963 0038 294B     		ldr	r3, .L233+8
 2964 003a 1B68     		ldr	r3, [r3]
2218:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2965              		.loc 1 2218 52 view .LVU807
 2966 003c 1BB3     		cbz	r3, .L231
2220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2967              		.loc 1 2220 6 is_stmt 1 view .LVU808
2220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2968              		.loc 1 2220 14 is_stmt 0 view .LVU809
 2969 003e 284B     		ldr	r3, .L233+8
 2970 0040 DB68     		ldr	r3, [r3, #12]
2220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2971              		.loc 1 2220 12 view .LVU810
 2972 0042 DC68     		ldr	r4, [r3, #12]
 2973              	.LVL205:
2221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2974              		.loc 1 2221 6 is_stmt 1 view .LVU811
2221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2975              		.loc 1 2221 15 is_stmt 0 view .LVU812
 2976 0044 04F11800 		add	r0, r4, #24
ARM GAS  /tmp/cc6UspJj.s 			page 162


 2977 0048 FFF7FEFF 		bl	uxListRemove
 2978              	.LVL206:
2222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2979              		.loc 1 2222 6 is_stmt 1 view .LVU813
2222:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2980              		.loc 1 2222 15 is_stmt 0 view .LVU814
 2981 004c 251D     		adds	r5, r4, #4
 2982 004e 2846     		mov	r0, r5
 2983 0050 FFF7FEFF 		bl	uxListRemove
 2984              	.LVL207:
2223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2985              		.loc 1 2223 6 is_stmt 1 view .LVU815
2223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2986              		.loc 1 2223 6 view .LVU816
 2987 0054 E06A     		ldr	r0, [r4, #44]
 2988 0056 0123     		movs	r3, #1
 2989 0058 8340     		lsls	r3, r3, r0
 2990 005a 224A     		ldr	r2, .L233+12
 2991 005c 1168     		ldr	r1, [r2]
 2992 005e 0B43     		orrs	r3, r3, r1
 2993 0060 1360     		str	r3, [r2]
2223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2994              		.loc 1 2223 6 view .LVU817
 2995 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2996 0066 2946     		mov	r1, r5
 2997 0068 1F4B     		ldr	r3, .L233+16
 2998 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2999 006e FFF7FEFF 		bl	vListInsertEnd
 3000              	.LVL208:
2223:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3001              		.loc 1 2223 36 view .LVU818
2227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3002              		.loc 1 2227 6 view .LVU819
2227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3003              		.loc 1 2227 15 is_stmt 0 view .LVU820
 3004 0072 E26A     		ldr	r2, [r4, #44]
2227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3005              		.loc 1 2227 43 view .LVU821
 3006 0074 1D4B     		ldr	r3, .L233+20
 3007 0076 1B68     		ldr	r3, [r3]
 3008 0078 DB6A     		ldr	r3, [r3, #44]
2227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3009              		.loc 1 2227 8 view .LVU822
 3010 007a 9A42     		cmp	r2, r3
 3011 007c DCD3     		bcc	.L221
2229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3012              		.loc 1 2229 7 is_stmt 1 view .LVU823
2229:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3013              		.loc 1 2229 21 is_stmt 0 view .LVU824
 3014 007e 1C4B     		ldr	r3, .L233+24
 3015 0080 0122     		movs	r2, #1
 3016 0082 1A60     		str	r2, [r3]
 3017 0084 D8E7     		b	.L221
 3018              	.L231:
2237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3019              		.loc 1 2237 5 is_stmt 1 view .LVU825
2237:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc6UspJj.s 			page 163


 3020              		.loc 1 2237 7 is_stmt 0 view .LVU826
 3021 0086 0CB1     		cbz	r4, .L224
2245:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3022              		.loc 1 2245 6 is_stmt 1 view .LVU827
 3023 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3024              	.LVL209:
 3025              	.L224:
 3026              	.LBB164:
2253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3027              		.loc 1 2253 6 view .LVU828
2253:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3028              		.loc 1 2253 17 is_stmt 0 view .LVU829
 3029 008c 194B     		ldr	r3, .L233+28
 3030 008e 1C68     		ldr	r4, [r3]
 3031              	.LVL210:
2255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3032              		.loc 1 2255 6 is_stmt 1 view .LVU830
2255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3033              		.loc 1 2255 8 is_stmt 0 view .LVU831
 3034 0090 84B9     		cbnz	r4, .L227
 3035              	.L225:
2274:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3036              		.loc 1 2274 31 is_stmt 1 view .LVU832
 3037              	.LBE164:
2278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3038              		.loc 1 2278 5 view .LVU833
2278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3039              		.loc 1 2278 23 is_stmt 0 view .LVU834
 3040 0092 174B     		ldr	r3, .L233+24
 3041 0094 1C68     		ldr	r4, [r3]
 3042              	.LVL211:
2278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3043              		.loc 1 2278 7 view .LVU835
 3044 0096 D4B1     		cbz	r4, .L220
2282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3045              		.loc 1 2282 7 is_stmt 1 view .LVU836
 3046              	.LVL212:
2285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3047              		.loc 1 2285 6 view .LVU837
 3048 0098 4FF0E023 		mov	r3, #-536813568
 3049 009c 4FF08052 		mov	r2, #268435456
 3050 00a0 C3F8042D 		str	r2, [r3, #3332]
2285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3051              		.loc 1 2285 6 view .LVU838
 3052              		.syntax unified
 3053              	@ 2285 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3054 00a4 BFF34F8F 		dsb
 3055              	@ 0 "" 2
2285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3056              		.loc 1 2285 6 view .LVU839
 3057              	@ 2285 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3058 00a8 BFF36F8F 		isb
 3059              	@ 0 "" 2
2285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3060              		.loc 1 2285 37 view .LVU840
2282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3061              		.loc 1 2282 23 is_stmt 0 view .LVU841
ARM GAS  /tmp/cc6UspJj.s 			page 164


 3062              		.thumb
 3063              		.syntax unified
 3064 00ac 0124     		movs	r4, #1
 3065 00ae 0EE0     		b	.L220
 3066              	.LVL213:
 3067              	.L226:
 3068              	.LBB165:
2265:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3069              		.loc 1 2265 33 is_stmt 1 view .LVU842
2267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 3070              		.loc 1 2267 8 view .LVU843
2268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3071              		.loc 1 2268 30 view .LVU844
 3072 00b0 013C     		subs	r4, r4, #1
 3073              	.LVL214:
2268:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3074              		.loc 1 2268 30 is_stmt 0 view .LVU845
 3075 00b2 07D0     		beq	.L232
 3076              	.L227:
2257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3077              		.loc 1 2257 7 is_stmt 1 view .LVU846
2259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3078              		.loc 1 2259 8 view .LVU847
2259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3079              		.loc 1 2259 12 is_stmt 0 view .LVU848
 3080 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3081              	.LVL215:
2259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3082              		.loc 1 2259 10 view .LVU849
 3083 00b8 0028     		cmp	r0, #0
 3084 00ba F9D0     		beq	.L226
2261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3085              		.loc 1 2261 9 is_stmt 1 view .LVU850
2261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3086              		.loc 1 2261 23 is_stmt 0 view .LVU851
 3087 00bc 0C4B     		ldr	r3, .L233+24
 3088 00be 0122     		movs	r2, #1
 3089 00c0 1A60     		str	r2, [r3]
 3090 00c2 F5E7     		b	.L226
 3091              	.L232:
2270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3092              		.loc 1 2270 7 is_stmt 1 view .LVU852
2270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3093              		.loc 1 2270 20 is_stmt 0 view .LVU853
 3094 00c4 0B4B     		ldr	r3, .L233+28
 3095 00c6 0022     		movs	r2, #0
 3096 00c8 1A60     		str	r2, [r3]
 3097 00ca E2E7     		b	.L225
 3098              	.LVL216:
 3099              	.L228:
2270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3100              		.loc 1 2270 20 view .LVU854
 3101              	.LBE165:
2197:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3102              		.loc 1 2197 12 view .LVU855
 3103 00cc 0024     		movs	r4, #0
 3104              	.LVL217:
ARM GAS  /tmp/cc6UspJj.s 			page 165


 3105              	.L220:
2295:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3106              		.loc 1 2295 28 is_stmt 1 view .LVU856
2298:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3107              		.loc 1 2298 2 view .LVU857
 3108 00ce FFF7FEFF 		bl	vPortExitCritical
 3109              	.LVL218:
2300:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3110              		.loc 1 2300 2 view .LVU858
2301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3111              		.loc 1 2301 1 is_stmt 0 view .LVU859
 3112 00d2 2046     		mov	r0, r4
 3113 00d4 38BD     		pop	{r3, r4, r5, pc}
 3114              	.LVL219:
 3115              	.L234:
2301:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3116              		.loc 1 2301 1 view .LVU860
 3117 00d6 00BF     		.align	2
 3118              	.L233:
 3119 00d8 00000000 		.word	.LANCHOR16
 3120 00dc 00000000 		.word	.LANCHOR9
 3121 00e0 00000000 		.word	.LANCHOR1
 3122 00e4 00000000 		.word	.LANCHOR13
 3123 00e8 00000000 		.word	.LANCHOR4
 3124 00ec 00000000 		.word	.LANCHOR10
 3125 00f0 00000000 		.word	.LANCHOR19
 3126 00f4 00000000 		.word	.LANCHOR20
 3127              		.cfi_endproc
 3128              	.LFE21:
 3130              		.section	.text.vTaskDelay,"ax",%progbits
 3131              		.align	1
 3132              		.global	vTaskDelay
 3133              		.syntax unified
 3134              		.thumb
 3135              		.thumb_func
 3136              		.fpu fpv4-sp-d16
 3138              	vTaskDelay:
 3139              	.LVL220:
 3140              	.LFB10:
1342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3141              		.loc 1 1342 2 is_stmt 1 view -0
 3142              		.cfi_startproc
 3143              		@ args = 0, pretend = 0, frame = 0
 3144              		@ frame_needed = 0, uses_anonymous_args = 0
1342:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3145              		.loc 1 1342 2 is_stmt 0 view .LVU862
 3146 0000 10B5     		push	{r4, lr}
 3147              	.LCFI28:
 3148              		.cfi_def_cfa_offset 8
 3149              		.cfi_offset 4, -8
 3150              		.cfi_offset 14, -4
1343:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3151              		.loc 1 1343 2 is_stmt 1 view .LVU863
 3152              	.LVL221:
1346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3153              		.loc 1 1346 3 view .LVU864
1346:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc6UspJj.s 			page 166


 3154              		.loc 1 1346 5 is_stmt 0 view .LVU865
 3155 0002 A8B1     		cbz	r0, .L236
 3156 0004 0446     		mov	r4, r0
1348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3157              		.loc 1 1348 4 is_stmt 1 view .LVU866
 3158 0006 104B     		ldr	r3, .L241
 3159 0008 1B68     		ldr	r3, [r3]
 3160 000a 43B1     		cbz	r3, .L237
1348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3161              		.loc 1 1348 4 view .LVU867
 3162              	.LBB166:
 3163              	.LBI166:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3164              		.loc 2 191 30 view .LVU868
 3165              	.LBB167:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3166              		.loc 2 193 1 view .LVU869
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3167              		.loc 2 195 2 view .LVU870
 3168              		.syntax unified
 3169              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3170 000c 4FF05003 			mov r3, #80												
 3171 0010 83F31188 		msr basepri, r3											
 3172 0014 BFF36F8F 		isb														
 3173 0018 BFF34F8F 		dsb														
 3174              	
 3175              	@ 0 "" 2
 3176              	.LVL222:
 3177              		.thumb
 3178              		.syntax unified
 3179              	.L238:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3180              		.loc 2 195 2 is_stmt 0 view .LVU871
 3181              	.LBE167:
 3182              	.LBE166:
1348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3183              		.loc 1 1348 4 is_stmt 1 discriminator 1 view .LVU872
1348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3184              		.loc 1 1348 4 discriminator 1 view .LVU873
 3185 001c FEE7     		b	.L238
 3186              	.L237:
1348:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3187              		.loc 1 1348 45 discriminator 2 view .LVU874
1349:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3188              		.loc 1 1349 4 discriminator 2 view .LVU875
 3189 001e FFF7FEFF 		bl	vTaskSuspendAll
 3190              	.LVL223:
1351:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3191              		.loc 1 1351 22 discriminator 2 view .LVU876
1360:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3192              		.loc 1 1360 5 discriminator 2 view .LVU877
 3193 0022 0021     		movs	r1, #0
 3194 0024 2046     		mov	r0, r4
 3195 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3196              	.LVL224:
1362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3197              		.loc 1 1362 4 discriminator 2 view .LVU878
ARM GAS  /tmp/cc6UspJj.s 			page 167


1362:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3198              		.loc 1 1362 22 is_stmt 0 discriminator 2 view .LVU879
 3199 002a FFF7FEFF 		bl	xTaskResumeAll
 3200              	.LVL225:
1366:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3201              		.loc 1 1366 28 is_stmt 1 discriminator 2 view .LVU880
1371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3202              		.loc 1 1371 3 discriminator 2 view .LVU881
1371:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3203              		.loc 1 1371 5 is_stmt 0 discriminator 2 view .LVU882
 3204 002e 48B9     		cbnz	r0, .L235
 3205              	.LVL226:
 3206              	.L236:
1373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3207              		.loc 1 1373 4 is_stmt 1 view .LVU883
 3208 0030 4FF0E023 		mov	r3, #-536813568
 3209 0034 4FF08052 		mov	r2, #268435456
 3210 0038 C3F8042D 		str	r2, [r3, #3332]
1373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3211              		.loc 1 1373 4 view .LVU884
 3212              		.syntax unified
 3213              	@ 1373 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3214 003c BFF34F8F 		dsb
 3215              	@ 0 "" 2
1373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3216              		.loc 1 1373 4 view .LVU885
 3217              	@ 1373 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3218 0040 BFF36F8F 		isb
 3219              	@ 0 "" 2
1373:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3220              		.loc 1 1373 26 view .LVU886
1377:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3221              		.loc 1 1377 28 view .LVU887
 3222              		.thumb
 3223              		.syntax unified
 3224              	.L235:
1379:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3225              		.loc 1 1379 2 is_stmt 0 view .LVU888
 3226 0044 10BD     		pop	{r4, pc}
 3227              	.L242:
 3228 0046 00BF     		.align	2
 3229              	.L241:
 3230 0048 00000000 		.word	.LANCHOR16
 3231              		.cfi_endproc
 3232              	.LFE10:
 3234              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3235              		.align	1
 3236              		.global	xTaskCatchUpTicks
 3237              		.syntax unified
 3238              		.thumb
 3239              		.thumb_func
 3240              		.fpu fpv4-sp-d16
 3242              	xTaskCatchUpTicks:
 3243              	.LVL227:
 3244              	.LFB26:
2610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3245              		.loc 1 2610 1 is_stmt 1 view -0
ARM GAS  /tmp/cc6UspJj.s 			page 168


 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 0, uses_anonymous_args = 0
2611:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3249              		.loc 1 2611 1 view .LVU890
2615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3250              		.loc 1 2615 2 view .LVU891
 3251 0000 0B4B     		ldr	r3, .L248
 3252 0002 1B68     		ldr	r3, [r3]
 3253 0004 43B1     		cbz	r3, .L244
2615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3254              		.loc 1 2615 2 view .LVU892
 3255              	.LBB168:
 3256              	.LBI168:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3257              		.loc 2 191 30 view .LVU893
 3258              	.LBB169:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3259              		.loc 2 193 1 view .LVU894
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3260              		.loc 2 195 2 view .LVU895
 3261              		.syntax unified
 3262              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3263 0006 4FF05003 			mov r3, #80												
 3264 000a 83F31188 		msr basepri, r3											
 3265 000e BFF36F8F 		isb														
 3266 0012 BFF34F8F 		dsb														
 3267              	
 3268              	@ 0 "" 2
 3269              	.LVL228:
 3270              		.thumb
 3271              		.syntax unified
 3272              	.L245:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3273              		.loc 2 195 2 is_stmt 0 view .LVU896
 3274              	.LBE169:
 3275              	.LBE168:
2615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3276              		.loc 1 2615 2 is_stmt 1 discriminator 1 view .LVU897
2615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3277              		.loc 1 2615 2 discriminator 1 view .LVU898
 3278 0016 FEE7     		b	.L245
 3279              	.L244:
2610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3280              		.loc 1 2610 1 is_stmt 0 discriminator 2 view .LVU899
 3281 0018 10B5     		push	{r4, lr}
 3282              	.LCFI29:
 3283              		.cfi_def_cfa_offset 8
 3284              		.cfi_offset 4, -8
 3285              		.cfi_offset 14, -4
 3286 001a 0446     		mov	r4, r0
2615:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3287              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU900
2619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3288              		.loc 1 2619 2 discriminator 2 view .LVU901
 3289 001c FFF7FEFF 		bl	vTaskSuspendAll
 3290              	.LVL229:
ARM GAS  /tmp/cc6UspJj.s 			page 169


2620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3291              		.loc 1 2620 2 discriminator 2 view .LVU902
2620:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3292              		.loc 1 2620 15 is_stmt 0 discriminator 2 view .LVU903
 3293 0020 044A     		ldr	r2, .L248+4
 3294 0022 1368     		ldr	r3, [r2]
 3295 0024 2344     		add	r3, r3, r4
 3296 0026 1360     		str	r3, [r2]
2621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3297              		.loc 1 2621 2 is_stmt 1 discriminator 2 view .LVU904
2621:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3298              		.loc 1 2621 19 is_stmt 0 discriminator 2 view .LVU905
 3299 0028 FFF7FEFF 		bl	xTaskResumeAll
 3300              	.LVL230:
2623:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3301              		.loc 1 2623 2 is_stmt 1 discriminator 2 view .LVU906
2624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3302              		.loc 1 2624 1 is_stmt 0 discriminator 2 view .LVU907
 3303 002c 10BD     		pop	{r4, pc}
 3304              	.LVL231:
 3305              	.L249:
2624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3306              		.loc 1 2624 1 discriminator 2 view .LVU908
 3307 002e 00BF     		.align	2
 3308              	.L248:
 3309 0030 00000000 		.word	.LANCHOR16
 3310 0034 00000000 		.word	.LANCHOR20
 3311              		.cfi_endproc
 3312              	.LFE26:
 3314              		.section	.text.vTaskSetApplicationTaskTag,"ax",%progbits
 3315              		.align	1
 3316              		.global	vTaskSetApplicationTaskTag
 3317              		.syntax unified
 3318              		.thumb
 3319              		.thumb_func
 3320              		.fpu fpv4-sp-d16
 3322              	vTaskSetApplicationTaskTag:
 3323              	.LVL232:
 3324              	.LFB28:
2882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
 3325              		.loc 1 2882 2 is_stmt 1 view -0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
 3328              		@ frame_needed = 0, uses_anonymous_args = 0
2882:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
 3329              		.loc 1 2882 2 is_stmt 0 view .LVU910
 3330 0000 38B5     		push	{r3, r4, r5, lr}
 3331              	.LCFI30:
 3332              		.cfi_def_cfa_offset 16
 3333              		.cfi_offset 3, -16
 3334              		.cfi_offset 4, -12
 3335              		.cfi_offset 5, -8
 3336              		.cfi_offset 14, -4
 3337 0002 0C46     		mov	r4, r1
2883:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3338              		.loc 1 2883 2 is_stmt 1 view .LVU911
2887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc6UspJj.s 			page 170


 3339              		.loc 1 2887 3 view .LVU912
2887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3340              		.loc 1 2887 5 is_stmt 0 view .LVU913
 3341 0004 0546     		mov	r5, r0
 3342 0006 28B1     		cbz	r0, .L253
 3343              	.LVL233:
 3344              	.L251:
2898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3345              		.loc 1 2898 3 is_stmt 1 view .LVU914
 3346 0008 FFF7FEFF 		bl	vPortEnterCritical
 3347              	.LVL234:
2900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3348              		.loc 1 2900 4 view .LVU915
2900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3349              		.loc 1 2900 20 is_stmt 0 view .LVU916
 3350 000c EC64     		str	r4, [r5, #76]
2902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3351              		.loc 1 2902 3 is_stmt 1 view .LVU917
 3352 000e FFF7FEFF 		bl	vPortExitCritical
 3353              	.LVL235:
2903:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3354              		.loc 1 2903 2 is_stmt 0 view .LVU918
 3355 0012 38BD     		pop	{r3, r4, r5, pc}
 3356              	.LVL236:
 3357              	.L253:
2889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3358              		.loc 1 2889 4 is_stmt 1 view .LVU919
2889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3359              		.loc 1 2889 9 is_stmt 0 view .LVU920
 3360 0014 014B     		ldr	r3, .L254
 3361 0016 1D68     		ldr	r5, [r3]
 3362              	.LVL237:
2889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3363              		.loc 1 2889 9 view .LVU921
 3364 0018 F6E7     		b	.L251
 3365              	.L255:
 3366 001a 00BF     		.align	2
 3367              	.L254:
 3368 001c 00000000 		.word	.LANCHOR10
 3369              		.cfi_endproc
 3370              	.LFE28:
 3372              		.section	.text.xTaskGetApplicationTaskTag,"ax",%progbits
 3373              		.align	1
 3374              		.global	xTaskGetApplicationTaskTag
 3375              		.syntax unified
 3376              		.thumb
 3377              		.thumb_func
 3378              		.fpu fpv4-sp-d16
 3380              	xTaskGetApplicationTaskTag:
 3381              	.LVL238:
 3382              	.LFB29:
2911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3383              		.loc 1 2911 2 is_stmt 1 view -0
 3384              		.cfi_startproc
 3385              		@ args = 0, pretend = 0, frame = 0
 3386              		@ frame_needed = 0, uses_anonymous_args = 0
2911:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/cc6UspJj.s 			page 171


 3387              		.loc 1 2911 2 is_stmt 0 view .LVU923
 3388 0000 10B5     		push	{r4, lr}
 3389              	.LCFI31:
 3390              		.cfi_def_cfa_offset 8
 3391              		.cfi_offset 4, -8
 3392              		.cfi_offset 14, -4
2912:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
 3393              		.loc 1 2912 2 is_stmt 1 view .LVU924
2913:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3394              		.loc 1 2913 2 view .LVU925
2916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3395              		.loc 1 2916 3 view .LVU926
2916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3396              		.loc 1 2916 11 is_stmt 0 view .LVU927
 3397 0002 0446     		mov	r4, r0
 3398 0004 30B1     		cbz	r0, .L259
 3399              	.LVL239:
 3400              	.L257:
2920:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3401              		.loc 1 2920 3 is_stmt 1 discriminator 4 view .LVU928
 3402 0006 FFF7FEFF 		bl	vPortEnterCritical
 3403              	.LVL240:
2922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3404              		.loc 1 2922 4 discriminator 4 view .LVU929
2922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3405              		.loc 1 2922 12 is_stmt 0 discriminator 4 view .LVU930
 3406 000a E46C     		ldr	r4, [r4, #76]
 3407              	.LVL241:
2924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3408              		.loc 1 2924 3 is_stmt 1 discriminator 4 view .LVU931
 3409 000c FFF7FEFF 		bl	vPortExitCritical
 3410              	.LVL242:
2926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3411              		.loc 1 2926 3 discriminator 4 view .LVU932
2927:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3412              		.loc 1 2927 2 is_stmt 0 discriminator 4 view .LVU933
 3413 0010 2046     		mov	r0, r4
 3414 0012 10BD     		pop	{r4, pc}
 3415              	.LVL243:
 3416              	.L259:
2916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3417              		.loc 1 2916 11 discriminator 1 view .LVU934
 3418 0014 014B     		ldr	r3, .L260
 3419 0016 1C68     		ldr	r4, [r3]
 3420              	.LVL244:
2916:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3421              		.loc 1 2916 11 discriminator 1 view .LVU935
 3422 0018 F5E7     		b	.L257
 3423              	.L261:
 3424 001a 00BF     		.align	2
 3425              	.L260:
 3426 001c 00000000 		.word	.LANCHOR10
 3427              		.cfi_endproc
 3428              	.LFE29:
 3430              		.section	.text.xTaskGetApplicationTaskTagFromISR,"ax",%progbits
 3431              		.align	1
 3432              		.global	xTaskGetApplicationTaskTagFromISR
ARM GAS  /tmp/cc6UspJj.s 			page 172


 3433              		.syntax unified
 3434              		.thumb
 3435              		.thumb_func
 3436              		.fpu fpv4-sp-d16
 3438              	xTaskGetApplicationTaskTagFromISR:
 3439              	.LVL245:
 3440              	.LFB30:
2935:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3441              		.loc 1 2935 2 is_stmt 1 view -0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 0, uses_anonymous_args = 0
 3445              		@ link register save eliminated.
2936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
 3446              		.loc 1 2936 2 view .LVU937
2937:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3447              		.loc 1 2937 2 view .LVU938
2938:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3448              		.loc 1 2938 2 view .LVU939
2941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3449              		.loc 1 2941 3 view .LVU940
2941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3450              		.loc 1 2941 11 is_stmt 0 view .LVU941
 3451 0000 0346     		mov	r3, r0
 3452 0002 68B1     		cbz	r0, .L264
 3453              	.LVL246:
 3454              	.L263:
2945:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3455              		.loc 1 2945 3 is_stmt 1 discriminator 4 view .LVU942
 3456              	.LBB170:
 3457              	.LBI170:
 207:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3458              		.loc 2 207 34 discriminator 4 view .LVU943
 3459              	.LBB171:
 209:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3460              		.loc 2 209 1 discriminator 4 view .LVU944
 211:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3461              		.loc 2 211 2 discriminator 4 view .LVU945
 3462              		.syntax unified
 3463              	@ 211 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3464 0004 EFF31182 			mrs r2, basepri											
 3465 0008 4FF05001 		mov r1, #80												
 3466 000c 81F31188 		msr basepri, r1											
 3467 0010 BFF36F8F 		isb														
 3468 0014 BFF34F8F 		dsb														
 3469              	
 3470              	@ 0 "" 2
 3471              	.LVL247:
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 3472              		.loc 2 223 2 discriminator 4 view .LVU946
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 3473              		.loc 2 223 2 is_stmt 0 discriminator 4 view .LVU947
 3474              		.thumb
 3475              		.syntax unified
 3476              	.LBE171:
 3477              	.LBE170:
2947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc6UspJj.s 			page 173


 3478              		.loc 1 2947 4 is_stmt 1 discriminator 4 view .LVU948
2947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3479              		.loc 1 2947 12 is_stmt 0 discriminator 4 view .LVU949
 3480 0018 D86C     		ldr	r0, [r3, #76]
 3481              	.LVL248:
2949:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3482              		.loc 1 2949 3 is_stmt 1 discriminator 4 view .LVU950
 3483              	.LBB172:
 3484              	.LBI172:
 227:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3485              		.loc 2 227 30 discriminator 4 view .LVU951
 3486              	.LBB173:
 3487              		.loc 2 229 2 discriminator 4 view .LVU952
 3488              		.syntax unified
 3489              	@ 229 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3490 001a 82F31188 			msr basepri, r2	
 3491              	@ 0 "" 2
 3492              	.LVL249:
 3493              		.loc 2 229 2 is_stmt 0 discriminator 4 view .LVU953
 3494              		.thumb
 3495              		.syntax unified
 3496              	.LBE173:
 3497              	.LBE172:
2951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3498              		.loc 1 2951 3 is_stmt 1 discriminator 4 view .LVU954
2952:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3499              		.loc 1 2952 2 is_stmt 0 discriminator 4 view .LVU955
 3500 001e 7047     		bx	lr
 3501              	.LVL250:
 3502              	.L264:
2941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3503              		.loc 1 2941 11 discriminator 1 view .LVU956
 3504 0020 014B     		ldr	r3, .L265
 3505 0022 1B68     		ldr	r3, [r3]
 3506              	.LVL251:
2941:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3507              		.loc 1 2941 11 discriminator 1 view .LVU957
 3508 0024 EEE7     		b	.L263
 3509              	.L266:
 3510 0026 00BF     		.align	2
 3511              	.L265:
 3512 0028 00000000 		.word	.LANCHOR10
 3513              		.cfi_endproc
 3514              	.LFE30:
 3516              		.section	.text.xTaskCallApplicationTaskHook,"ax",%progbits
 3517              		.align	1
 3518              		.global	xTaskCallApplicationTaskHook
 3519              		.syntax unified
 3520              		.thumb
 3521              		.thumb_func
 3522              		.fpu fpv4-sp-d16
 3524              	xTaskCallApplicationTaskHook:
 3525              	.LVL252:
 3526              	.LFB31:
2960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
 3527              		.loc 1 2960 2 is_stmt 1 view -0
 3528              		.cfi_startproc
ARM GAS  /tmp/cc6UspJj.s 			page 174


 3529              		@ args = 0, pretend = 0, frame = 0
 3530              		@ frame_needed = 0, uses_anonymous_args = 0
2960:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
 3531              		.loc 1 2960 2 is_stmt 0 view .LVU959
 3532 0000 08B5     		push	{r3, lr}
 3533              	.LCFI32:
 3534              		.cfi_def_cfa_offset 8
 3535              		.cfi_offset 3, -8
 3536              		.cfi_offset 14, -4
2961:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 3537              		.loc 1 2961 2 is_stmt 1 view .LVU960
2962:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3538              		.loc 1 2962 2 view .LVU961
2965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3539              		.loc 1 2965 3 view .LVU962
2965:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3540              		.loc 1 2965 5 is_stmt 0 view .LVU963
 3541 0002 0346     		mov	r3, r0
 3542 0004 20B1     		cbz	r0, .L272
 3543              	.LVL253:
 3544              	.L268:
2974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3545              		.loc 1 2974 3 is_stmt 1 view .LVU964
2974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3546              		.loc 1 2974 11 is_stmt 0 view .LVU965
 3547 0006 DB6C     		ldr	r3, [r3, #76]
 3548              	.LVL254:
2974:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3549              		.loc 1 2974 5 view .LVU966
 3550 0008 2BB1     		cbz	r3, .L270
2976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3551              		.loc 1 2976 4 is_stmt 1 view .LVU967
2976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3552              		.loc 1 2976 14 is_stmt 0 view .LVU968
 3553 000a 0846     		mov	r0, r1
 3554 000c 9847     		blx	r3
 3555              	.LVL255:
 3556              	.L267:
2984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3557              		.loc 1 2984 2 view .LVU969
 3558 000e 08BD     		pop	{r3, pc}
 3559              	.LVL256:
 3560              	.L272:
2967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3561              		.loc 1 2967 4 is_stmt 1 view .LVU970
2967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3562              		.loc 1 2967 9 is_stmt 0 view .LVU971
 3563 0010 024B     		ldr	r3, .L273
 3564 0012 1B68     		ldr	r3, [r3]
 3565              	.LVL257:
2967:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3566              		.loc 1 2967 9 view .LVU972
 3567 0014 F7E7     		b	.L268
 3568              	.LVL258:
 3569              	.L270:
2980:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3570              		.loc 1 2980 12 view .LVU973
ARM GAS  /tmp/cc6UspJj.s 			page 175


 3571 0016 0020     		movs	r0, #0
 3572              	.LVL259:
2983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3573              		.loc 1 2983 3 is_stmt 1 view .LVU974
2983:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3574              		.loc 1 2983 10 is_stmt 0 view .LVU975
 3575 0018 F9E7     		b	.L267
 3576              	.L274:
 3577 001a 00BF     		.align	2
 3578              	.L273:
 3579 001c 00000000 		.word	.LANCHOR10
 3580              		.cfi_endproc
 3581              	.LFE31:
 3583              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3584              		.align	1
 3585              		.global	vTaskSwitchContext
 3586              		.syntax unified
 3587              		.thumb
 3588              		.thumb_func
 3589              		.fpu fpv4-sp-d16
 3591              	vTaskSwitchContext:
 3592              	.LFB32:
2990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3593              		.loc 1 2990 1 is_stmt 1 view -0
 3594              		.cfi_startproc
 3595              		@ args = 0, pretend = 0, frame = 0
 3596              		@ frame_needed = 0, uses_anonymous_args = 0
 3597 0000 08B5     		push	{r3, lr}
 3598              	.LCFI33:
 3599              		.cfi_def_cfa_offset 8
 3600              		.cfi_offset 3, -8
 3601              		.cfi_offset 14, -4
2991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3602              		.loc 1 2991 2 view .LVU977
2991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3603              		.loc 1 2991 27 is_stmt 0 view .LVU978
 3604 0002 2D4B     		ldr	r3, .L286
 3605 0004 1B68     		ldr	r3, [r3]
2991:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3606              		.loc 1 2991 4 view .LVU979
 3607 0006 1BB1     		cbz	r3, .L276
2995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3608              		.loc 1 2995 3 is_stmt 1 view .LVU980
2995:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3609              		.loc 1 2995 17 is_stmt 0 view .LVU981
 3610 0008 2C4B     		ldr	r3, .L286+4
 3611 000a 0122     		movs	r2, #1
 3612 000c 1A60     		str	r2, [r3]
 3613              	.L275:
3061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3614              		.loc 1 3061 1 view .LVU982
 3615 000e 08BD     		pop	{r3, pc}
 3616              	.L276:
2999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3617              		.loc 1 2999 3 is_stmt 1 view .LVU983
2999:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3618              		.loc 1 2999 17 is_stmt 0 view .LVU984
ARM GAS  /tmp/cc6UspJj.s 			page 176


 3619 0010 2A4B     		ldr	r3, .L286+4
 3620 0012 0022     		movs	r2, #0
 3621 0014 1A60     		str	r2, [r3]
3000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3622              		.loc 1 3000 27 is_stmt 1 view .LVU985
 3623              	.LBB174:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3624              		.loc 1 3030 3 view .LVU986
 3625 0016 2A4B     		ldr	r3, .L286+8
 3626 0018 1B68     		ldr	r3, [r3]
 3627 001a 1B6B     		ldr	r3, [r3, #48]
 3628              	.LVL260:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3629              		.loc 1 3030 3 view .LVU987
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3630              		.loc 1 3030 3 view .LVU988
 3631 001c 1A68     		ldr	r2, [r3]
 3632 001e B2F1A53F 		cmp	r2, #-1515870811
 3633 0022 03D1     		bne	.L278
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3634              		.loc 1 3030 3 is_stmt 0 discriminator 2 view .LVU989
 3635 0024 5A68     		ldr	r2, [r3, #4]
 3636 0026 B2F1A53F 		cmp	r2, #-1515870811
 3637 002a 1BD0     		beq	.L284
 3638              	.LVL261:
 3639              	.L278:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3640              		.loc 1 3030 3 is_stmt 1 discriminator 7 view .LVU990
 3641 002c 244B     		ldr	r3, .L286+8
 3642 002e 1868     		ldr	r0, [r3]
 3643 0030 1968     		ldr	r1, [r3]
 3644 0032 3431     		adds	r1, r1, #52
 3645 0034 FFF7FEFF 		bl	vApplicationStackOverflowHook
 3646              	.LVL262:
 3647              	.L279:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3648              		.loc 1 3030 3 is_stmt 0 discriminator 7 view .LVU991
 3649              	.LBE174:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3650              		.loc 1 3030 33 is_stmt 1 discriminator 9 view .LVU992
 3651              	.LBB175:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3652              		.loc 1 3041 3 discriminator 9 view .LVU993
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3653              		.loc 1 3041 3 discriminator 9 view .LVU994
 3654 0038 224B     		ldr	r3, .L286+12
 3655 003a 1B68     		ldr	r3, [r3]
 3656              	.LVL263:
 3657              	.LBB176:
 3658              	.LBI176:
 130:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3659              		.loc 2 130 59 discriminator 9 view .LVU995
 3660              	.LBB177:
 132:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3661              		.loc 2 132 2 discriminator 9 view .LVU996
 134:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3662              		.loc 2 134 3 discriminator 9 view .LVU997
ARM GAS  /tmp/cc6UspJj.s 			page 177


 3663              		.syntax unified
 3664              	@ 134 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3665 003c B3FA83F3 		clz r3, r3
 3666              	@ 0 "" 2
 3667              	.LVL264:
 134:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3668              		.loc 2 134 3 is_stmt 0 discriminator 9 view .LVU998
 3669              		.thumb
 3670              		.syntax unified
 3671 0040 DBB2     		uxtb	r3, r3
 3672              	.LVL265:
 135:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3673              		.loc 2 135 3 is_stmt 1 discriminator 9 view .LVU999
 135:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3674              		.loc 2 135 3 is_stmt 0 discriminator 9 view .LVU1000
 3675              	.LBE177:
 3676              	.LBE176:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3677              		.loc 1 3041 3 discriminator 9 view .LVU1001
 3678 0042 C3F11F03 		rsb	r3, r3, #31
 3679              	.LVL266:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3680              		.loc 1 3041 3 is_stmt 1 discriminator 9 view .LVU1002
 3681 0046 03EB8301 		add	r1, r3, r3, lsl #2
 3682 004a 8A00     		lsls	r2, r1, #2
 3683 004c 1E49     		ldr	r1, .L286+16
 3684 004e 8A58     		ldr	r2, [r1, r2]
 3685 0050 8AB9     		cbnz	r2, .L280
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3686              		.loc 1 3041 3 view .LVU1003
 3687              	.LBB178:
 3688              	.LBI178:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3689              		.loc 2 191 30 view .LVU1004
 3690              	.LBB179:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3691              		.loc 2 193 1 view .LVU1005
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3692              		.loc 2 195 2 view .LVU1006
 3693              		.syntax unified
 3694              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3695 0052 4FF05003 			mov r3, #80												
 3696 0056 83F31188 		msr basepri, r3											
 3697 005a BFF36F8F 		isb														
 3698 005e BFF34F8F 		dsb														
 3699              	
 3700              	@ 0 "" 2
 3701              	.LVL267:
 3702              		.thumb
 3703              		.syntax unified
 3704              	.L281:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3705              		.loc 2 195 2 is_stmt 0 view .LVU1007
 3706              	.LBE179:
 3707              	.LBE178:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3708              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU1008
ARM GAS  /tmp/cc6UspJj.s 			page 178


3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3709              		.loc 1 3041 3 discriminator 1 view .LVU1009
 3710 0062 FEE7     		b	.L281
 3711              	.LVL268:
 3712              	.L284:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3713              		.loc 1 3041 3 is_stmt 0 discriminator 1 view .LVU1010
 3714              	.LBE175:
 3715              	.LBB182:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3716              		.loc 1 3030 3 discriminator 4 view .LVU1011
 3717 0064 9A68     		ldr	r2, [r3, #8]
 3718 0066 B2F1A53F 		cmp	r2, #-1515870811
 3719 006a DFD1     		bne	.L278
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3720              		.loc 1 3030 3 discriminator 6 view .LVU1012
 3721 006c DB68     		ldr	r3, [r3, #12]
 3722              	.LVL269:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3723              		.loc 1 3030 3 discriminator 6 view .LVU1013
 3724 006e B3F1A53F 		cmp	r3, #-1515870811
 3725 0072 DBD1     		bne	.L278
 3726 0074 E0E7     		b	.L279
 3727              	.LVL270:
 3728              	.L280:
3030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3729              		.loc 1 3030 3 discriminator 6 view .LVU1014
 3730              	.LBE182:
 3731              	.LBB183:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3732              		.loc 1 3041 3 is_stmt 1 discriminator 2 view .LVU1015
 3733              	.LBB180:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3734              		.loc 1 3041 3 discriminator 2 view .LVU1016
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3735              		.loc 1 3041 3 discriminator 2 view .LVU1017
 3736 0076 1449     		ldr	r1, .L286+16
 3737 0078 03EB8300 		add	r0, r3, r3, lsl #2
 3738 007c 8200     		lsls	r2, r0, #2
 3739 007e 0A44     		add	r2, r2, r1
 3740 0080 5068     		ldr	r0, [r2, #4]
 3741 0082 4068     		ldr	r0, [r0, #4]
 3742 0084 5060     		str	r0, [r2, #4]
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3743              		.loc 1 3041 3 discriminator 2 view .LVU1018
 3744 0086 03EB830C 		add	ip, r3, r3, lsl #2
 3745 008a 4FEA8C02 		lsl	r2, ip, #2
 3746 008e 0832     		adds	r2, r2, #8
 3747 0090 1144     		add	r1, r1, r2
 3748 0092 8842     		cmp	r0, r1
 3749 0094 09D0     		beq	.L285
 3750              	.L282:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3751              		.loc 1 3041 3 discriminator 6 view .LVU1019
 3752 0096 03EB8303 		add	r3, r3, r3, lsl #2
 3753              	.LVL271:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  /tmp/cc6UspJj.s 			page 179


 3754              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU1020
 3755 009a 9A00     		lsls	r2, r3, #2
 3756 009c 0A4B     		ldr	r3, .L286+16
 3757 009e 1344     		add	r3, r3, r2
 3758 00a0 5B68     		ldr	r3, [r3, #4]
 3759 00a2 DA68     		ldr	r2, [r3, #12]
 3760 00a4 064B     		ldr	r3, .L286+8
 3761 00a6 1A60     		str	r2, [r3]
 3762              	.LBE180:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3763              		.loc 1 3041 3 is_stmt 1 discriminator 6 view .LVU1021
 3764              	.LBE183:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3765              		.loc 1 3041 37 discriminator 6 view .LVU1022
3042:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3766              		.loc 1 3042 26 discriminator 6 view .LVU1023
3061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3767              		.loc 1 3061 1 is_stmt 0 discriminator 6 view .LVU1024
 3768 00a8 B1E7     		b	.L275
 3769              	.LVL272:
 3770              	.L285:
 3771              	.LBB184:
 3772              	.LBB181:
3041:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3773              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU1025
 3774 00aa 4068     		ldr	r0, [r0, #4]
 3775 00ac 6246     		mov	r2, ip
 3776 00ae 9100     		lsls	r1, r2, #2
 3777 00b0 054A     		ldr	r2, .L286+16
 3778 00b2 0A44     		add	r2, r2, r1
 3779 00b4 5060     		str	r0, [r2, #4]
 3780 00b6 EEE7     		b	.L282
 3781              	.L287:
 3782              		.align	2
 3783              	.L286:
 3784 00b8 00000000 		.word	.LANCHOR16
 3785 00bc 00000000 		.word	.LANCHOR19
 3786 00c0 00000000 		.word	.LANCHOR10
 3787 00c4 00000000 		.word	.LANCHOR13
 3788 00c8 00000000 		.word	.LANCHOR4
 3789              	.LBE181:
 3790              	.LBE184:
 3791              		.cfi_endproc
 3792              	.LFE32:
 3794              		.section	.text.vTaskSuspend,"ax",%progbits
 3795              		.align	1
 3796              		.global	vTaskSuspend
 3797              		.syntax unified
 3798              		.thumb
 3799              		.thumb_func
 3800              		.fpu fpv4-sp-d16
 3802              	vTaskSuspend:
 3803              	.LVL273:
 3804              	.LFB14:
1705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3805              		.loc 1 1705 2 view -0
 3806              		.cfi_startproc
ARM GAS  /tmp/cc6UspJj.s 			page 180


 3807              		@ args = 0, pretend = 0, frame = 0
 3808              		@ frame_needed = 0, uses_anonymous_args = 0
1705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3809              		.loc 1 1705 2 is_stmt 0 view .LVU1027
 3810 0000 38B5     		push	{r3, r4, r5, lr}
 3811              	.LCFI34:
 3812              		.cfi_def_cfa_offset 16
 3813              		.cfi_offset 3, -16
 3814              		.cfi_offset 4, -12
 3815              		.cfi_offset 5, -8
 3816              		.cfi_offset 14, -4
 3817 0002 0446     		mov	r4, r0
1706:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3818              		.loc 1 1706 2 is_stmt 1 view .LVU1028
1708:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3819              		.loc 1 1708 3 view .LVU1029
 3820 0004 FFF7FEFF 		bl	vPortEnterCritical
 3821              	.LVL274:
1712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3822              		.loc 1 1712 4 view .LVU1030
1712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3823              		.loc 1 1712 12 is_stmt 0 view .LVU1031
 3824 0008 64B3     		cbz	r4, .L300
 3825              	.LVL275:
 3826              	.L289:
1714:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3827              		.loc 1 1714 30 is_stmt 1 discriminator 4 view .LVU1032
1718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3828              		.loc 1 1718 4 discriminator 4 view .LVU1033
1718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3829              		.loc 1 1718 8 is_stmt 0 discriminator 4 view .LVU1034
 3830 000a 251D     		adds	r5, r4, #4
 3831 000c 2846     		mov	r0, r5
 3832 000e FFF7FEFF 		bl	uxListRemove
 3833              	.LVL276:
1718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3834              		.loc 1 1718 6 discriminator 4 view .LVU1035
 3835 0012 70B9     		cbnz	r0, .L290
1720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3836              		.loc 1 1720 5 is_stmt 1 view .LVU1036
 3837 0014 E26A     		ldr	r2, [r4, #44]
 3838 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3839 001a 9B00     		lsls	r3, r3, #2
 3840 001c 2C49     		ldr	r1, .L304
 3841 001e CB58     		ldr	r3, [r1, r3]
 3842 0020 3BB9     		cbnz	r3, .L290
1720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3843              		.loc 1 1720 5 discriminator 1 view .LVU1037
 3844 0022 0123     		movs	r3, #1
 3845 0024 03FA02F2 		lsl	r2, r3, r2
 3846 0028 2A49     		ldr	r1, .L304+4
 3847 002a 0B68     		ldr	r3, [r1]
 3848 002c 23EA0203 		bic	r3, r3, r2
 3849 0030 0B60     		str	r3, [r1]
 3850              	.L290:
1724:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3851              		.loc 1 1724 29 view .LVU1038
ARM GAS  /tmp/cc6UspJj.s 			page 181


1728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3852              		.loc 1 1728 4 view .LVU1039
1728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3853              		.loc 1 1728 8 is_stmt 0 view .LVU1040
 3854 0032 A36A     		ldr	r3, [r4, #40]
1728:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3855              		.loc 1 1728 6 view .LVU1041
 3856 0034 1BB1     		cbz	r3, .L291
1730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3857              		.loc 1 1730 5 is_stmt 1 view .LVU1042
1730:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3858              		.loc 1 1730 14 is_stmt 0 view .LVU1043
 3859 0036 04F11800 		add	r0, r4, #24
 3860 003a FFF7FEFF 		bl	uxListRemove
 3861              	.LVL277:
 3862              	.L291:
1734:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3863              		.loc 1 1734 29 is_stmt 1 view .LVU1044
1737:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3864              		.loc 1 1737 4 view .LVU1045
 3865 003e 2946     		mov	r1, r5
 3866 0040 2548     		ldr	r0, .L304+8
 3867 0042 FFF7FEFF 		bl	vListInsertEnd
 3868              	.LVL278:
1741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3869              		.loc 1 1741 5 view .LVU1046
1741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3870              		.loc 1 1741 14 is_stmt 0 view .LVU1047
 3871 0046 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 3872 004a DBB2     		uxtb	r3, r3
1741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3873              		.loc 1 1741 7 view .LVU1048
 3874 004c 012B     		cmp	r3, #1
 3875 004e 0CD0     		beq	.L301
 3876              	.L292:
1750:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3877              		.loc 1 1750 3 is_stmt 1 view .LVU1049
 3878 0050 FFF7FEFF 		bl	vPortExitCritical
 3879              	.LVL279:
1752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3880              		.loc 1 1752 3 view .LVU1050
1752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3881              		.loc 1 1752 25 is_stmt 0 view .LVU1051
 3882 0054 214B     		ldr	r3, .L304+12
 3883 0056 1B68     		ldr	r3, [r3]
1752:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3884              		.loc 1 1752 5 view .LVU1052
 3885 0058 5BB9     		cbnz	r3, .L302
 3886              	.L293:
1764:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3887              		.loc 1 1764 28 is_stmt 1 view .LVU1053
1767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3888              		.loc 1 1767 3 view .LVU1054
1767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3889              		.loc 1 1767 13 is_stmt 0 view .LVU1055
 3890 005a 214B     		ldr	r3, .L304+16
 3891 005c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6UspJj.s 			page 182


1767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3892              		.loc 1 1767 5 view .LVU1056
 3893 005e A342     		cmp	r3, r4
 3894 0060 0ED0     		beq	.L303
 3895              	.L288:
1798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3896              		.loc 1 1798 2 view .LVU1057
 3897 0062 38BD     		pop	{r3, r4, r5, pc}
 3898              	.LVL280:
 3899              	.L300:
1712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3900              		.loc 1 1712 12 discriminator 1 view .LVU1058
 3901 0064 1E4B     		ldr	r3, .L304+16
 3902 0066 1C68     		ldr	r4, [r3]
 3903              	.LVL281:
1712:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3904              		.loc 1 1712 12 discriminator 1 view .LVU1059
 3905 0068 CFE7     		b	.L289
 3906              	.LVL282:
 3907              	.L301:
1745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3908              		.loc 1 1745 6 is_stmt 1 view .LVU1060
1745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3909              		.loc 1 1745 27 is_stmt 0 view .LVU1061
 3910 006a 0023     		movs	r3, #0
 3911 006c 84F85430 		strb	r3, [r4, #84]
 3912 0070 EEE7     		b	.L292
 3913              	.L302:
1756:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3914              		.loc 1 1756 4 is_stmt 1 view .LVU1062
 3915 0072 FFF7FEFF 		bl	vPortEnterCritical
 3916              	.LVL283:
1758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3917              		.loc 1 1758 5 view .LVU1063
 3918 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3919              	.LVL284:
1760:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3920              		.loc 1 1760 4 view .LVU1064
 3921 007a FFF7FEFF 		bl	vPortExitCritical
 3922              	.LVL285:
 3923 007e ECE7     		b	.L293
 3924              	.L303:
1769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3925              		.loc 1 1769 4 view .LVU1065
1769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3926              		.loc 1 1769 26 is_stmt 0 view .LVU1066
 3927 0080 164B     		ldr	r3, .L304+12
 3928 0082 1B68     		ldr	r3, [r3]
1769:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3929              		.loc 1 1769 6 view .LVU1067
 3930 0084 B3B1     		cbz	r3, .L295
1772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3931              		.loc 1 1772 5 is_stmt 1 view .LVU1068
 3932 0086 174B     		ldr	r3, .L304+20
 3933 0088 1B68     		ldr	r3, [r3]
 3934 008a 43B1     		cbz	r3, .L296
1772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  /tmp/cc6UspJj.s 			page 183


 3935              		.loc 1 1772 5 view .LVU1069
 3936              	.LBB185:
 3937              	.LBI185:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3938              		.loc 2 191 30 view .LVU1070
 3939              	.LBB186:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3940              		.loc 2 193 1 view .LVU1071
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3941              		.loc 2 195 2 view .LVU1072
 3942              		.syntax unified
 3943              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3944 008c 4FF05003 			mov r3, #80												
 3945 0090 83F31188 		msr basepri, r3											
 3946 0094 BFF36F8F 		isb														
 3947 0098 BFF34F8F 		dsb														
 3948              	
 3949              	@ 0 "" 2
 3950              	.LVL286:
 3951              		.thumb
 3952              		.syntax unified
 3953              	.L297:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3954              		.loc 2 195 2 is_stmt 0 view .LVU1073
 3955              	.LBE186:
 3956              	.LBE185:
1772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3957              		.loc 1 1772 5 is_stmt 1 discriminator 1 view .LVU1074
1772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3958              		.loc 1 1772 5 discriminator 1 view .LVU1075
 3959 009c FEE7     		b	.L297
 3960              	.L296:
1772:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3961              		.loc 1 1772 46 discriminator 2 view .LVU1076
1773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3962              		.loc 1 1773 5 discriminator 2 view .LVU1077
 3963 009e 4FF0E023 		mov	r3, #-536813568
 3964 00a2 4FF08052 		mov	r2, #268435456
 3965 00a6 C3F8042D 		str	r2, [r3, #3332]
1773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3966              		.loc 1 1773 5 discriminator 2 view .LVU1078
 3967              		.syntax unified
 3968              	@ 1773 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3969 00aa BFF34F8F 		dsb
 3970              	@ 0 "" 2
1773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3971              		.loc 1 1773 5 discriminator 2 view .LVU1079
 3972              	@ 1773 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3973 00ae BFF36F8F 		isb
 3974              	@ 0 "" 2
1773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3975              		.loc 1 1773 27 discriminator 2 view .LVU1080
 3976              		.thumb
 3977              		.syntax unified
 3978 00b2 D6E7     		b	.L288
 3979              	.L295:
1780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc6UspJj.s 			page 184


 3980              		.loc 1 1780 5 view .LVU1081
1780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3981              		.loc 1 1780 9 is_stmt 0 view .LVU1082
 3982 00b4 084B     		ldr	r3, .L304+8
 3983 00b6 1A68     		ldr	r2, [r3]
1780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3984              		.loc 1 1780 56 view .LVU1083
 3985 00b8 0B4B     		ldr	r3, .L304+24
 3986 00ba 1B68     		ldr	r3, [r3]
1780:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3987              		.loc 1 1780 7 view .LVU1084
 3988 00bc 9A42     		cmp	r2, r3
 3989 00be 03D1     		bne	.L298
1786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3990              		.loc 1 1786 6 is_stmt 1 view .LVU1085
1786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3991              		.loc 1 1786 19 is_stmt 0 view .LVU1086
 3992 00c0 074B     		ldr	r3, .L304+16
 3993 00c2 0022     		movs	r2, #0
 3994 00c4 1A60     		str	r2, [r3]
 3995 00c6 CCE7     		b	.L288
 3996              	.L298:
1790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3997              		.loc 1 1790 6 is_stmt 1 view .LVU1087
 3998 00c8 FFF7FEFF 		bl	vTaskSwitchContext
 3999              	.LVL287:
1796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4000              		.loc 1 1796 28 view .LVU1088
1798:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4001              		.loc 1 1798 2 is_stmt 0 view .LVU1089
 4002 00cc C9E7     		b	.L288
 4003              	.L305:
 4004 00ce 00BF     		.align	2
 4005              	.L304:
 4006 00d0 00000000 		.word	.LANCHOR4
 4007 00d4 00000000 		.word	.LANCHOR13
 4008 00d8 00000000 		.word	.LANCHOR0
 4009 00dc 00000000 		.word	.LANCHOR11
 4010 00e0 00000000 		.word	.LANCHOR10
 4011 00e4 00000000 		.word	.LANCHOR16
 4012 00e8 00000000 		.word	.LANCHOR9
 4013              		.cfi_endproc
 4014              	.LFE14:
 4016              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 4017              		.align	1
 4018              		.global	vTaskPlaceOnEventList
 4019              		.syntax unified
 4020              		.thumb
 4021              		.thumb_func
 4022              		.fpu fpv4-sp-d16
 4024              	vTaskPlaceOnEventList:
 4025              	.LVL288:
 4026              	.LFB33:
3065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 4027              		.loc 1 3065 1 is_stmt 1 view -0
 4028              		.cfi_startproc
 4029              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6UspJj.s 			page 185


 4030              		@ frame_needed = 0, uses_anonymous_args = 0
3066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4031              		.loc 1 3066 2 view .LVU1091
 4032 0000 58B1     		cbz	r0, .L311
3065:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 4033              		.loc 1 3065 1 is_stmt 0 discriminator 2 view .LVU1092
 4034 0002 10B5     		push	{r4, lr}
 4035              	.LCFI35:
 4036              		.cfi_def_cfa_offset 8
 4037              		.cfi_offset 4, -8
 4038              		.cfi_offset 14, -4
 4039 0004 0C46     		mov	r4, r1
3066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4040              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU1093
3075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4041              		.loc 1 3075 2 discriminator 2 view .LVU1094
3075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4042              		.loc 1 3075 43 is_stmt 0 discriminator 2 view .LVU1095
 4043 0006 094A     		ldr	r2, .L312
 4044 0008 1168     		ldr	r1, [r2]
 4045              	.LVL289:
3075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4046              		.loc 1 3075 2 discriminator 2 view .LVU1096
 4047 000a 1831     		adds	r1, r1, #24
 4048 000c FFF7FEFF 		bl	vListInsert
 4049              	.LVL290:
3077:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4050              		.loc 1 3077 2 is_stmt 1 discriminator 2 view .LVU1097
 4051 0010 0121     		movs	r1, #1
 4052 0012 2046     		mov	r0, r4
 4053 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4054              	.LVL291:
3078:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4055              		.loc 1 3078 1 is_stmt 0 discriminator 2 view .LVU1098
 4056 0018 10BD     		pop	{r4, pc}
 4057              	.LVL292:
 4058              	.L311:
 4059              	.LCFI36:
 4060              		.cfi_def_cfa_offset 0
 4061              		.cfi_restore 4
 4062              		.cfi_restore 14
3066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4063              		.loc 1 3066 2 is_stmt 1 view .LVU1099
 4064              	.LBB187:
 4065              	.LBI187:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4066              		.loc 2 191 30 view .LVU1100
 4067              	.LBB188:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4068              		.loc 2 193 1 view .LVU1101
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4069              		.loc 2 195 2 view .LVU1102
 4070              		.syntax unified
 4071              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4072 001a 4FF05003 			mov r3, #80												
 4073 001e 83F31188 		msr basepri, r3											
 4074 0022 BFF36F8F 		isb														
ARM GAS  /tmp/cc6UspJj.s 			page 186


 4075 0026 BFF34F8F 		dsb														
 4076              	
 4077              	@ 0 "" 2
 4078              	.LVL293:
 4079              		.thumb
 4080              		.syntax unified
 4081              	.L308:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4082              		.loc 2 195 2 is_stmt 0 view .LVU1103
 4083              	.LBE188:
 4084              	.LBE187:
3066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4085              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU1104
3066:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4086              		.loc 1 3066 2 discriminator 1 view .LVU1105
 4087 002a FEE7     		b	.L308
 4088              	.L313:
 4089              		.align	2
 4090              	.L312:
 4091 002c 00000000 		.word	.LANCHOR10
 4092              		.cfi_endproc
 4093              	.LFE33:
 4095              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 4096              		.align	1
 4097              		.global	vTaskPlaceOnUnorderedEventList
 4098              		.syntax unified
 4099              		.thumb
 4100              		.thumb_func
 4101              		.fpu fpv4-sp-d16
 4103              	vTaskPlaceOnUnorderedEventList:
 4104              	.LVL294:
 4105              	.LFB34:
3082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 4106              		.loc 1 3082 1 view -0
 4107              		.cfi_startproc
 4108              		@ args = 0, pretend = 0, frame = 0
 4109              		@ frame_needed = 0, uses_anonymous_args = 0
3083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4110              		.loc 1 3083 2 view .LVU1107
 4111 0000 70B1     		cbz	r0, .L321
3082:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 4112              		.loc 1 3082 1 is_stmt 0 discriminator 2 view .LVU1108
 4113 0002 10B5     		push	{r4, lr}
 4114              	.LCFI37:
 4115              		.cfi_def_cfa_offset 8
 4116              		.cfi_offset 4, -8
 4117              		.cfi_offset 14, -4
 4118 0004 1446     		mov	r4, r2
 4119 0006 0246     		mov	r2, r0
 4120              	.LVL295:
3083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4121              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU1109
3087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4122              		.loc 1 3087 2 discriminator 2 view .LVU1110
 4123 0008 114B     		ldr	r3, .L322
 4124 000a 1B68     		ldr	r3, [r3]
 4125 000c 8BB9     		cbnz	r3, .L317
ARM GAS  /tmp/cc6UspJj.s 			page 187


3087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4126              		.loc 1 3087 2 view .LVU1111
 4127              	.LBB189:
 4128              	.LBI189:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4129              		.loc 2 191 30 view .LVU1112
 4130              	.LBB190:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4131              		.loc 2 193 1 view .LVU1113
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4132              		.loc 2 195 2 view .LVU1114
 4133              		.syntax unified
 4134              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4135 000e 4FF05003 			mov r3, #80												
 4136 0012 83F31188 		msr basepri, r3											
 4137 0016 BFF36F8F 		isb														
 4138 001a BFF34F8F 		dsb														
 4139              	
 4140              	@ 0 "" 2
 4141              	.LVL296:
 4142              		.thumb
 4143              		.syntax unified
 4144              	.L318:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4145              		.loc 2 195 2 is_stmt 0 view .LVU1115
 4146              	.LBE190:
 4147              	.LBE189:
3087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4148              		.loc 1 3087 2 is_stmt 1 discriminator 2 view .LVU1116
3087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4149              		.loc 1 3087 2 discriminator 2 view .LVU1117
 4150 001e FEE7     		b	.L318
 4151              	.LVL297:
 4152              	.L321:
 4153              	.LCFI38:
 4154              		.cfi_def_cfa_offset 0
 4155              		.cfi_restore 4
 4156              		.cfi_restore 14
3083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4157              		.loc 1 3083 2 view .LVU1118
 4158              	.LBB191:
 4159              	.LBI191:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4160              		.loc 2 191 30 view .LVU1119
 4161              	.LBB192:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4162              		.loc 2 193 1 view .LVU1120
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4163              		.loc 2 195 2 view .LVU1121
 4164              		.syntax unified
 4165              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4166 0020 4FF05003 			mov r3, #80												
 4167 0024 83F31188 		msr basepri, r3											
 4168 0028 BFF36F8F 		isb														
 4169 002c BFF34F8F 		dsb														
 4170              	
 4171              	@ 0 "" 2
ARM GAS  /tmp/cc6UspJj.s 			page 188


 4172              	.LVL298:
 4173              		.thumb
 4174              		.syntax unified
 4175              	.L316:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4176              		.loc 2 195 2 is_stmt 0 view .LVU1122
 4177              	.LBE192:
 4178              	.LBE191:
3083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4179              		.loc 1 3083 2 is_stmt 1 discriminator 1 view .LVU1123
3083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4180              		.loc 1 3083 2 discriminator 1 view .LVU1124
 4181 0030 FEE7     		b	.L316
 4182              	.LVL299:
 4183              	.L317:
 4184              	.LCFI39:
 4185              		.cfi_def_cfa_offset 8
 4186              		.cfi_offset 4, -8
 4187              		.cfi_offset 14, -4
3087:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4188              		.loc 1 3087 43 discriminator 2 view .LVU1125
3092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4189              		.loc 1 3092 2 discriminator 2 view .LVU1126
 4190 0032 084B     		ldr	r3, .L322+4
 4191 0034 1868     		ldr	r0, [r3]
 4192              	.LVL300:
3092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4193              		.loc 1 3092 2 is_stmt 0 discriminator 2 view .LVU1127
 4194 0036 41F00041 		orr	r1, r1, #-2147483648
 4195              	.LVL301:
3092:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4196              		.loc 1 3092 2 discriminator 2 view .LVU1128
 4197 003a 8161     		str	r1, [r0, #24]
3099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4198              		.loc 1 3099 2 is_stmt 1 discriminator 2 view .LVU1129
3099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4199              		.loc 1 3099 46 is_stmt 0 discriminator 2 view .LVU1130
 4200 003c 1968     		ldr	r1, [r3]
3099:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4201              		.loc 1 3099 2 discriminator 2 view .LVU1131
 4202 003e 1831     		adds	r1, r1, #24
 4203 0040 1046     		mov	r0, r2
 4204 0042 FFF7FEFF 		bl	vListInsertEnd
 4205              	.LVL302:
3101:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4206              		.loc 1 3101 2 is_stmt 1 discriminator 2 view .LVU1132
 4207 0046 0121     		movs	r1, #1
 4208 0048 2046     		mov	r0, r4
 4209 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4210              	.LVL303:
3102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4211              		.loc 1 3102 1 is_stmt 0 discriminator 2 view .LVU1133
 4212 004e 10BD     		pop	{r4, pc}
 4213              	.LVL304:
 4214              	.L323:
3102:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4215              		.loc 1 3102 1 discriminator 2 view .LVU1134
ARM GAS  /tmp/cc6UspJj.s 			page 189


 4216              		.align	2
 4217              	.L322:
 4218 0050 00000000 		.word	.LANCHOR16
 4219 0054 00000000 		.word	.LANCHOR10
 4220              		.cfi_endproc
 4221              	.LFE34:
 4223              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4224              		.align	1
 4225              		.global	xTaskRemoveFromEventList
 4226              		.syntax unified
 4227              		.thumb
 4228              		.thumb_func
 4229              		.fpu fpv4-sp-d16
 4231              	xTaskRemoveFromEventList:
 4232              	.LVL305:
 4233              	.LFB35:
3139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4234              		.loc 1 3139 1 is_stmt 1 view -0
 4235              		.cfi_startproc
 4236              		@ args = 0, pretend = 0, frame = 0
 4237              		@ frame_needed = 0, uses_anonymous_args = 0
3139:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4238              		.loc 1 3139 1 is_stmt 0 view .LVU1136
 4239 0000 38B5     		push	{r3, r4, r5, lr}
 4240              	.LCFI40:
 4241              		.cfi_def_cfa_offset 16
 4242              		.cfi_offset 3, -16
 4243              		.cfi_offset 4, -12
 4244              		.cfi_offset 5, -8
 4245              		.cfi_offset 14, -4
3140:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4246              		.loc 1 3140 1 is_stmt 1 view .LVU1137
3141:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4247              		.loc 1 3141 1 view .LVU1138
3156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4248              		.loc 1 3156 2 view .LVU1139
3156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4249              		.loc 1 3156 19 is_stmt 0 view .LVU1140
 4250 0002 C368     		ldr	r3, [r0, #12]
3156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4251              		.loc 1 3156 17 view .LVU1141
 4252 0004 DC68     		ldr	r4, [r3, #12]
 4253              	.LVL306:
3157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4254              		.loc 1 3157 2 is_stmt 1 view .LVU1142
 4255 0006 24B3     		cbz	r4, .L332
3157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4256              		.loc 1 3157 32 discriminator 2 view .LVU1143
3158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4257              		.loc 1 3158 2 discriminator 2 view .LVU1144
3158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4258              		.loc 1 3158 11 is_stmt 0 discriminator 2 view .LVU1145
 4259 0008 04F11805 		add	r5, r4, #24
 4260 000c 2846     		mov	r0, r5
 4261              	.LVL307:
3158:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4262              		.loc 1 3158 11 discriminator 2 view .LVU1146
ARM GAS  /tmp/cc6UspJj.s 			page 190


 4263 000e FFF7FEFF 		bl	uxListRemove
 4264              	.LVL308:
3160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4265              		.loc 1 3160 2 is_stmt 1 discriminator 2 view .LVU1147
3160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4266              		.loc 1 3160 27 is_stmt 0 discriminator 2 view .LVU1148
 4267 0012 184B     		ldr	r3, .L333
 4268 0014 1B68     		ldr	r3, [r3]
3160:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4269              		.loc 1 3160 4 discriminator 2 view .LVU1149
 4270 0016 2BBB     		cbnz	r3, .L327
3162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 4271              		.loc 1 3162 3 is_stmt 1 view .LVU1150
3162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 4272              		.loc 1 3162 12 is_stmt 0 view .LVU1151
 4273 0018 251D     		adds	r5, r4, #4
 4274 001a 2846     		mov	r0, r5
 4275 001c FFF7FEFF 		bl	uxListRemove
 4276              	.LVL309:
3163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4277              		.loc 1 3163 3 is_stmt 1 view .LVU1152
3163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4278              		.loc 1 3163 3 view .LVU1153
 4279 0020 E06A     		ldr	r0, [r4, #44]
 4280 0022 0123     		movs	r3, #1
 4281 0024 8340     		lsls	r3, r3, r0
 4282 0026 144A     		ldr	r2, .L333+4
 4283 0028 1168     		ldr	r1, [r2]
 4284 002a 0B43     		orrs	r3, r3, r1
 4285 002c 1360     		str	r3, [r2]
3163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4286              		.loc 1 3163 3 view .LVU1154
 4287 002e 00EB8000 		add	r0, r0, r0, lsl #2
 4288 0032 2946     		mov	r1, r5
 4289 0034 114B     		ldr	r3, .L333+8
 4290 0036 03EB8000 		add	r0, r3, r0, lsl #2
 4291 003a FFF7FEFF 		bl	vListInsertEnd
 4292              	.LVL310:
3163:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4293              		.loc 1 3163 42 view .LVU1155
 4294              	.L328:
3186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4295              		.loc 1 3186 2 view .LVU1156
3186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4296              		.loc 1 3186 20 is_stmt 0 view .LVU1157
 4297 003e E26A     		ldr	r2, [r4, #44]
3186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4298              		.loc 1 3186 47 view .LVU1158
 4299 0040 0F4B     		ldr	r3, .L333+12
 4300 0042 1B68     		ldr	r3, [r3]
 4301 0044 DB6A     		ldr	r3, [r3, #44]
3186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4302              		.loc 1 3186 4 view .LVU1159
 4303 0046 9A42     		cmp	r2, r3
 4304 0048 11D9     		bls	.L330
3191:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4305              		.loc 1 3191 3 is_stmt 1 view .LVU1160
ARM GAS  /tmp/cc6UspJj.s 			page 191


 4306              	.LVL311:
3195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4307              		.loc 1 3195 3 view .LVU1161
3195:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4308              		.loc 1 3195 17 is_stmt 0 view .LVU1162
 4309 004a 0120     		movs	r0, #1
 4310 004c 0D4B     		ldr	r3, .L333+16
 4311 004e 1860     		str	r0, [r3]
 4312              	.LVL312:
 4313              	.L324:
3203:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4314              		.loc 1 3203 1 view .LVU1163
 4315 0050 38BD     		pop	{r3, r4, r5, pc}
 4316              	.LVL313:
 4317              	.L332:
3157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4318              		.loc 1 3157 2 is_stmt 1 view .LVU1164
 4319              	.LBB193:
 4320              	.LBI193:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4321              		.loc 2 191 30 view .LVU1165
 4322              	.LBB194:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4323              		.loc 2 193 1 view .LVU1166
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4324              		.loc 2 195 2 view .LVU1167
 4325              		.syntax unified
 4326              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4327 0052 4FF05003 			mov r3, #80												
 4328 0056 83F31188 		msr basepri, r3											
 4329 005a BFF36F8F 		isb														
 4330 005e BFF34F8F 		dsb														
 4331              	
 4332              	@ 0 "" 2
 4333              	.LVL314:
 4334              		.thumb
 4335              		.syntax unified
 4336              	.L326:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4337              		.loc 2 195 2 is_stmt 0 view .LVU1168
 4338              	.LBE194:
 4339              	.LBE193:
3157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4340              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1169
3157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4341              		.loc 1 3157 2 discriminator 1 view .LVU1170
 4342 0062 FEE7     		b	.L326
 4343              	.LVL315:
 4344              	.L327:
3183:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4345              		.loc 1 3183 3 view .LVU1171
 4346 0064 2946     		mov	r1, r5
 4347 0066 0848     		ldr	r0, .L333+20
 4348 0068 FFF7FEFF 		bl	vListInsertEnd
 4349              	.LVL316:
 4350 006c E7E7     		b	.L328
 4351              	.L330:
ARM GAS  /tmp/cc6UspJj.s 			page 192


3199:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4352              		.loc 1 3199 11 is_stmt 0 view .LVU1172
 4353 006e 0020     		movs	r0, #0
 4354              	.LVL317:
3202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4355              		.loc 1 3202 2 is_stmt 1 view .LVU1173
3202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4356              		.loc 1 3202 9 is_stmt 0 view .LVU1174
 4357 0070 EEE7     		b	.L324
 4358              	.L334:
 4359 0072 00BF     		.align	2
 4360              	.L333:
 4361 0074 00000000 		.word	.LANCHOR16
 4362 0078 00000000 		.word	.LANCHOR13
 4363 007c 00000000 		.word	.LANCHOR4
 4364 0080 00000000 		.word	.LANCHOR10
 4365 0084 00000000 		.word	.LANCHOR19
 4366 0088 00000000 		.word	.LANCHOR1
 4367              		.cfi_endproc
 4368              	.LFE35:
 4370              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4371              		.align	1
 4372              		.global	vTaskRemoveFromUnorderedEventList
 4373              		.syntax unified
 4374              		.thumb
 4375              		.thumb_func
 4376              		.fpu fpv4-sp-d16
 4378              	vTaskRemoveFromUnorderedEventList:
 4379              	.LVL318:
 4380              	.LFB36:
3207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4381              		.loc 1 3207 1 is_stmt 1 view -0
 4382              		.cfi_startproc
 4383              		@ args = 0, pretend = 0, frame = 0
 4384              		@ frame_needed = 0, uses_anonymous_args = 0
3207:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4385              		.loc 1 3207 1 is_stmt 0 view .LVU1176
 4386 0000 38B5     		push	{r3, r4, r5, lr}
 4387              	.LCFI41:
 4388              		.cfi_def_cfa_offset 16
 4389              		.cfi_offset 3, -16
 4390              		.cfi_offset 4, -12
 4391              		.cfi_offset 5, -8
 4392              		.cfi_offset 14, -4
3208:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4393              		.loc 1 3208 1 is_stmt 1 view .LVU1177
3212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4394              		.loc 1 3212 2 view .LVU1178
 4395 0002 1C4B     		ldr	r3, .L343
 4396 0004 1B68     		ldr	r3, [r3]
 4397 0006 43B9     		cbnz	r3, .L336
3212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4398              		.loc 1 3212 2 view .LVU1179
 4399              	.LBB195:
 4400              	.LBI195:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4401              		.loc 2 191 30 view .LVU1180
ARM GAS  /tmp/cc6UspJj.s 			page 193


 4402              	.LBB196:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4403              		.loc 2 193 1 view .LVU1181
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4404              		.loc 2 195 2 view .LVU1182
 4405              		.syntax unified
 4406              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4407 0008 4FF05003 			mov r3, #80												
 4408 000c 83F31188 		msr basepri, r3											
 4409 0010 BFF36F8F 		isb														
 4410 0014 BFF34F8F 		dsb														
 4411              	
 4412              	@ 0 "" 2
 4413              	.LVL319:
 4414              		.thumb
 4415              		.syntax unified
 4416              	.L337:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4417              		.loc 2 195 2 is_stmt 0 view .LVU1183
 4418              	.LBE196:
 4419              	.LBE195:
3212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4420              		.loc 1 3212 2 is_stmt 1 discriminator 1 view .LVU1184
3212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4421              		.loc 1 3212 2 discriminator 1 view .LVU1185
 4422 0018 FEE7     		b	.L337
 4423              	.L336:
3212:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4424              		.loc 1 3212 49 discriminator 2 view .LVU1186
3215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4425              		.loc 1 3215 2 discriminator 2 view .LVU1187
 4426 001a 41F00041 		orr	r1, r1, #-2147483648
 4427              	.LVL320:
3215:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4428              		.loc 1 3215 2 is_stmt 0 discriminator 2 view .LVU1188
 4429 001e 0160     		str	r1, [r0]
3219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4430              		.loc 1 3219 2 is_stmt 1 discriminator 2 view .LVU1189
3219:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4431              		.loc 1 3219 17 is_stmt 0 discriminator 2 view .LVU1190
 4432 0020 C468     		ldr	r4, [r0, #12]
 4433              	.LVL321:
3220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4434              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1191
 4435 0022 F4B1     		cbz	r4, .L342
3220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4436              		.loc 1 3220 32 discriminator 2 view .LVU1192
3221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4437              		.loc 1 3221 2 discriminator 2 view .LVU1193
3221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4438              		.loc 1 3221 11 is_stmt 0 discriminator 2 view .LVU1194
 4439 0024 FFF7FEFF 		bl	uxListRemove
 4440              	.LVL322:
3240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4441              		.loc 1 3240 2 is_stmt 1 discriminator 2 view .LVU1195
3240:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4442              		.loc 1 3240 11 is_stmt 0 discriminator 2 view .LVU1196
ARM GAS  /tmp/cc6UspJj.s 			page 194


 4443 0028 251D     		adds	r5, r4, #4
 4444 002a 2846     		mov	r0, r5
 4445 002c FFF7FEFF 		bl	uxListRemove
 4446              	.LVL323:
3241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4447              		.loc 1 3241 2 is_stmt 1 discriminator 2 view .LVU1197
3241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4448              		.loc 1 3241 2 discriminator 2 view .LVU1198
 4449 0030 E06A     		ldr	r0, [r4, #44]
 4450 0032 0123     		movs	r3, #1
 4451 0034 8340     		lsls	r3, r3, r0
 4452 0036 104A     		ldr	r2, .L343+4
 4453 0038 1168     		ldr	r1, [r2]
 4454 003a 0B43     		orrs	r3, r3, r1
 4455 003c 1360     		str	r3, [r2]
3241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4456              		.loc 1 3241 2 discriminator 2 view .LVU1199
 4457 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4458 0042 2946     		mov	r1, r5
 4459 0044 0D4B     		ldr	r3, .L343+8
 4460 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4461 004a FFF7FEFF 		bl	vListInsertEnd
 4462              	.LVL324:
3241:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4463              		.loc 1 3241 41 discriminator 2 view .LVU1200
3243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4464              		.loc 1 3243 2 discriminator 2 view .LVU1201
3243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4465              		.loc 1 3243 20 is_stmt 0 discriminator 2 view .LVU1202
 4466 004e E26A     		ldr	r2, [r4, #44]
3243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4467              		.loc 1 3243 47 discriminator 2 view .LVU1203
 4468 0050 0B4B     		ldr	r3, .L343+12
 4469 0052 1B68     		ldr	r3, [r3]
 4470 0054 DB6A     		ldr	r3, [r3, #44]
3243:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4471              		.loc 1 3243 4 discriminator 2 view .LVU1204
 4472 0056 9A42     		cmp	r2, r3
 4473 0058 02D9     		bls	.L335
3249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4474              		.loc 1 3249 3 is_stmt 1 view .LVU1205
3249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4475              		.loc 1 3249 17 is_stmt 0 view .LVU1206
 4476 005a 0A4B     		ldr	r3, .L343+16
 4477 005c 0122     		movs	r2, #1
 4478 005e 1A60     		str	r2, [r3]
 4479              	.L335:
3251:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4480              		.loc 1 3251 1 view .LVU1207
 4481 0060 38BD     		pop	{r3, r4, r5, pc}
 4482              	.LVL325:
 4483              	.L342:
3220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4484              		.loc 1 3220 2 is_stmt 1 view .LVU1208
 4485              	.LBB197:
 4486              	.LBI197:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/cc6UspJj.s 			page 195


 4487              		.loc 2 191 30 view .LVU1209
 4488              	.LBB198:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4489              		.loc 2 193 1 view .LVU1210
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4490              		.loc 2 195 2 view .LVU1211
 4491              		.syntax unified
 4492              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4493 0062 4FF05003 			mov r3, #80												
 4494 0066 83F31188 		msr basepri, r3											
 4495 006a BFF36F8F 		isb														
 4496 006e BFF34F8F 		dsb														
 4497              	
 4498              	@ 0 "" 2
 4499              	.LVL326:
 4500              		.thumb
 4501              		.syntax unified
 4502              	.L339:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4503              		.loc 2 195 2 is_stmt 0 view .LVU1212
 4504              	.LBE198:
 4505              	.LBE197:
3220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4506              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1213
3220:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4507              		.loc 1 3220 2 discriminator 2 view .LVU1214
 4508 0072 FEE7     		b	.L339
 4509              	.L344:
 4510              		.align	2
 4511              	.L343:
 4512 0074 00000000 		.word	.LANCHOR16
 4513 0078 00000000 		.word	.LANCHOR13
 4514 007c 00000000 		.word	.LANCHOR4
 4515 0080 00000000 		.word	.LANCHOR10
 4516 0084 00000000 		.word	.LANCHOR19
 4517              		.cfi_endproc
 4518              	.LFE36:
 4520              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4521              		.align	1
 4522              		.global	vTaskSetTimeOutState
 4523              		.syntax unified
 4524              		.thumb
 4525              		.thumb_func
 4526              		.fpu fpv4-sp-d16
 4528              	vTaskSetTimeOutState:
 4529              	.LVL327:
 4530              	.LFB37:
3255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4531              		.loc 1 3255 1 view -0
 4532              		.cfi_startproc
 4533              		@ args = 0, pretend = 0, frame = 0
 4534              		@ frame_needed = 0, uses_anonymous_args = 0
3256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4535              		.loc 1 3256 2 view .LVU1216
 4536 0000 60B1     		cbz	r0, .L350
3255:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4537              		.loc 1 3255 1 is_stmt 0 discriminator 2 view .LVU1217
ARM GAS  /tmp/cc6UspJj.s 			page 196


 4538 0002 10B5     		push	{r4, lr}
 4539              	.LCFI42:
 4540              		.cfi_def_cfa_offset 8
 4541              		.cfi_offset 4, -8
 4542              		.cfi_offset 14, -4
 4543 0004 0446     		mov	r4, r0
3256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4544              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1218
3257:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4545              		.loc 1 3257 2 discriminator 2 view .LVU1219
 4546 0006 FFF7FEFF 		bl	vPortEnterCritical
 4547              	.LVL328:
3259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4548              		.loc 1 3259 3 discriminator 2 view .LVU1220
3259:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4549              		.loc 1 3259 29 is_stmt 0 discriminator 2 view .LVU1221
 4550 000a 094B     		ldr	r3, .L351
 4551 000c 1B68     		ldr	r3, [r3]
 4552 000e 2360     		str	r3, [r4]
3260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4553              		.loc 1 3260 3 is_stmt 1 discriminator 2 view .LVU1222
3260:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4554              		.loc 1 3260 30 is_stmt 0 discriminator 2 view .LVU1223
 4555 0010 084B     		ldr	r3, .L351+4
 4556 0012 1B68     		ldr	r3, [r3]
 4557 0014 6360     		str	r3, [r4, #4]
3262:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4558              		.loc 1 3262 2 is_stmt 1 discriminator 2 view .LVU1224
 4559 0016 FFF7FEFF 		bl	vPortExitCritical
 4560              	.LVL329:
3263:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4561              		.loc 1 3263 1 is_stmt 0 discriminator 2 view .LVU1225
 4562 001a 10BD     		pop	{r4, pc}
 4563              	.LVL330:
 4564              	.L350:
 4565              	.LCFI43:
 4566              		.cfi_def_cfa_offset 0
 4567              		.cfi_restore 4
 4568              		.cfi_restore 14
3256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4569              		.loc 1 3256 2 is_stmt 1 view .LVU1226
 4570              	.LBB199:
 4571              	.LBI199:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4572              		.loc 2 191 30 view .LVU1227
 4573              	.LBB200:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4574              		.loc 2 193 1 view .LVU1228
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4575              		.loc 2 195 2 view .LVU1229
 4576              		.syntax unified
 4577              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4578 001c 4FF05003 			mov r3, #80												
 4579 0020 83F31188 		msr basepri, r3											
 4580 0024 BFF36F8F 		isb														
 4581 0028 BFF34F8F 		dsb														
 4582              	
ARM GAS  /tmp/cc6UspJj.s 			page 197


 4583              	@ 0 "" 2
 4584              	.LVL331:
 4585              		.thumb
 4586              		.syntax unified
 4587              	.L347:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4588              		.loc 2 195 2 is_stmt 0 view .LVU1230
 4589              	.LBE200:
 4590              	.LBE199:
3256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4591              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1231
3256:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4592              		.loc 1 3256 2 discriminator 1 view .LVU1232
 4593 002c FEE7     		b	.L347
 4594              	.L352:
 4595 002e 00BF     		.align	2
 4596              	.L351:
 4597 0030 00000000 		.word	.LANCHOR18
 4598 0034 00000000 		.word	.LANCHOR15
 4599              		.cfi_endproc
 4600              	.LFE37:
 4602              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4603              		.align	1
 4604              		.global	vTaskInternalSetTimeOutState
 4605              		.syntax unified
 4606              		.thumb
 4607              		.thumb_func
 4608              		.fpu fpv4-sp-d16
 4610              	vTaskInternalSetTimeOutState:
 4611              	.LVL332:
 4612              	.LFB38:
3267:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4613              		.loc 1 3267 1 view -0
 4614              		.cfi_startproc
 4615              		@ args = 0, pretend = 0, frame = 0
 4616              		@ frame_needed = 0, uses_anonymous_args = 0
 4617              		@ link register save eliminated.
3269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4618              		.loc 1 3269 2 view .LVU1234
3269:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4619              		.loc 1 3269 28 is_stmt 0 view .LVU1235
 4620 0000 034B     		ldr	r3, .L354
 4621 0002 1B68     		ldr	r3, [r3]
 4622 0004 0360     		str	r3, [r0]
3270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4623              		.loc 1 3270 2 is_stmt 1 view .LVU1236
3270:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4624              		.loc 1 3270 29 is_stmt 0 view .LVU1237
 4625 0006 034B     		ldr	r3, .L354+4
 4626 0008 1B68     		ldr	r3, [r3]
 4627 000a 4360     		str	r3, [r0, #4]
3271:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4628              		.loc 1 3271 1 view .LVU1238
 4629 000c 7047     		bx	lr
 4630              	.L355:
 4631 000e 00BF     		.align	2
 4632              	.L354:
ARM GAS  /tmp/cc6UspJj.s 			page 198


 4633 0010 00000000 		.word	.LANCHOR18
 4634 0014 00000000 		.word	.LANCHOR15
 4635              		.cfi_endproc
 4636              	.LFE38:
 4638              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4639              		.align	1
 4640              		.global	xTaskCheckForTimeOut
 4641              		.syntax unified
 4642              		.thumb
 4643              		.thumb_func
 4644              		.fpu fpv4-sp-d16
 4646              	xTaskCheckForTimeOut:
 4647              	.LVL333:
 4648              	.LFB39:
3275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4649              		.loc 1 3275 1 is_stmt 1 view -0
 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 0
 4652              		@ frame_needed = 0, uses_anonymous_args = 0
3275:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4653              		.loc 1 3275 1 is_stmt 0 view .LVU1240
 4654 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4655              	.LCFI44:
 4656              		.cfi_def_cfa_offset 24
 4657              		.cfi_offset 3, -24
 4658              		.cfi_offset 4, -20
 4659              		.cfi_offset 5, -16
 4660              		.cfi_offset 6, -12
 4661              		.cfi_offset 7, -8
 4662              		.cfi_offset 14, -4
3276:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4663              		.loc 1 3276 1 is_stmt 1 view .LVU1241
3278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4664              		.loc 1 3278 2 view .LVU1242
 4665 0002 C8B1     		cbz	r0, .L367
 4666 0004 0C46     		mov	r4, r1
 4667 0006 0546     		mov	r5, r0
3278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4668              		.loc 1 3278 27 discriminator 2 view .LVU1243
3279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4669              		.loc 1 3279 2 discriminator 2 view .LVU1244
 4670 0008 F9B1     		cbz	r1, .L368
3279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4671              		.loc 1 3279 31 discriminator 2 view .LVU1245
3281:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4672              		.loc 1 3281 2 discriminator 2 view .LVU1246
 4673 000a FFF7FEFF 		bl	vPortEnterCritical
 4674              	.LVL334:
 4675              	.LBB201:
3284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4676              		.loc 1 3284 3 discriminator 2 view .LVU1247
3284:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4677              		.loc 1 3284 20 is_stmt 0 discriminator 2 view .LVU1248
 4678 000e 1B4B     		ldr	r3, .L370
 4679 0010 1968     		ldr	r1, [r3]
 4680              	.LVL335:
3285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 199


 4681              		.loc 1 3285 3 is_stmt 1 discriminator 2 view .LVU1249
3285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4682              		.loc 1 3285 62 is_stmt 0 discriminator 2 view .LVU1250
 4683 0012 6B68     		ldr	r3, [r5, #4]
3285:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4684              		.loc 1 3285 20 discriminator 2 view .LVU1251
 4685 0014 C81A     		subs	r0, r1, r3
 4686              	.LVL336:
3299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4687              		.loc 1 3299 4 is_stmt 1 discriminator 2 view .LVU1252
3299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4688              		.loc 1 3299 8 is_stmt 0 discriminator 2 view .LVU1253
 4689 0016 2268     		ldr	r2, [r4]
3299:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4690              		.loc 1 3299 6 discriminator 2 view .LVU1254
 4691 0018 B2F1FF3F 		cmp	r2, #-1
 4692 001c 26D0     		beq	.L364
3309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4693              		.loc 1 3309 3 is_stmt 1 view .LVU1255
3309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4694              		.loc 1 3309 25 is_stmt 0 view .LVU1256
 4695 001e 184E     		ldr	r6, .L370+4
 4696 0020 3668     		ldr	r6, [r6]
3309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4697              		.loc 1 3309 5 view .LVU1257
 4698 0022 2F68     		ldr	r7, [r5]
 4699 0024 B742     		cmp	r7, r6
 4700 0026 01D0     		beq	.L362
3309:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4701              		.loc 1 3309 56 discriminator 1 view .LVU1258
 4702 0028 8B42     		cmp	r3, r1
 4703 002a 24D9     		bls	.L365
 4704              	.L362:
3318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4705              		.loc 1 3318 8 is_stmt 1 view .LVU1259
3318:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4706              		.loc 1 3318 10 is_stmt 0 view .LVU1260
 4707 002c 8242     		cmp	r2, r0
 4708 002e 15D8     		bhi	.L369
3327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4709              		.loc 1 3327 4 is_stmt 1 view .LVU1261
3327:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4710              		.loc 1 3327 19 is_stmt 0 view .LVU1262
 4711 0030 0023     		movs	r3, #0
 4712 0032 2360     		str	r3, [r4]
3328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4713              		.loc 1 3328 4 is_stmt 1 view .LVU1263
 4714              	.LVL337:
3328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4715              		.loc 1 3328 12 is_stmt 0 view .LVU1264
 4716 0034 0124     		movs	r4, #1
 4717              	.LVL338:
3328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4718              		.loc 1 3328 12 view .LVU1265
 4719 0036 1AE0     		b	.L361
 4720              	.LVL339:
 4721              	.L367:
ARM GAS  /tmp/cc6UspJj.s 			page 200


3328:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4722              		.loc 1 3328 12 view .LVU1266
 4723              	.LBE201:
3278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4724              		.loc 1 3278 2 is_stmt 1 view .LVU1267
 4725              	.LBB202:
 4726              	.LBI202:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4727              		.loc 2 191 30 view .LVU1268
 4728              	.LBB203:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4729              		.loc 2 193 1 view .LVU1269
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4730              		.loc 2 195 2 view .LVU1270
 4731              		.syntax unified
 4732              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4733 0038 4FF05003 			mov r3, #80												
 4734 003c 83F31188 		msr basepri, r3											
 4735 0040 BFF36F8F 		isb														
 4736 0044 BFF34F8F 		dsb														
 4737              	
 4738              	@ 0 "" 2
 4739              	.LVL340:
 4740              		.thumb
 4741              		.syntax unified
 4742              	.L358:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4743              		.loc 2 195 2 is_stmt 0 view .LVU1271
 4744              	.LBE203:
 4745              	.LBE202:
3278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4746              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1272
3278:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4747              		.loc 1 3278 2 discriminator 1 view .LVU1273
 4748 0048 FEE7     		b	.L358
 4749              	.L368:
3279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4750              		.loc 1 3279 2 view .LVU1274
 4751              	.LBB204:
 4752              	.LBI204:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4753              		.loc 2 191 30 view .LVU1275
 4754              	.LBB205:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4755              		.loc 2 193 1 view .LVU1276
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4756              		.loc 2 195 2 view .LVU1277
 4757              		.syntax unified
 4758              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4759 004a 4FF05003 			mov r3, #80												
 4760 004e 83F31188 		msr basepri, r3											
 4761 0052 BFF36F8F 		isb														
 4762 0056 BFF34F8F 		dsb														
 4763              	
 4764              	@ 0 "" 2
 4765              	.LVL341:
 4766              		.thumb
ARM GAS  /tmp/cc6UspJj.s 			page 201


 4767              		.syntax unified
 4768              	.L360:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4769              		.loc 2 195 2 is_stmt 0 view .LVU1278
 4770              	.LBE205:
 4771              	.LBE204:
3279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4772              		.loc 1 3279 2 is_stmt 1 discriminator 2 view .LVU1279
3279:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4773              		.loc 1 3279 2 discriminator 2 view .LVU1280
 4774 005a FEE7     		b	.L360
 4775              	.LVL342:
 4776              	.L369:
 4777              	.LBB206:
3321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4778              		.loc 1 3321 4 view .LVU1281
3321:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4779              		.loc 1 3321 19 is_stmt 0 view .LVU1282
 4780 005c 5B1A     		subs	r3, r3, r1
 4781 005e 1344     		add	r3, r3, r2
 4782 0060 2360     		str	r3, [r4]
3322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4783              		.loc 1 3322 4 is_stmt 1 view .LVU1283
 4784 0062 2846     		mov	r0, r5
 4785              	.LVL343:
3322:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4786              		.loc 1 3322 4 is_stmt 0 view .LVU1284
 4787 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4788              	.LVL344:
3323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4789              		.loc 1 3323 4 is_stmt 1 view .LVU1285
3323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4790              		.loc 1 3323 12 is_stmt 0 view .LVU1286
 4791 0068 0024     		movs	r4, #0
 4792              	.LVL345:
3323:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4793              		.loc 1 3323 12 view .LVU1287
 4794 006a 00E0     		b	.L361
 4795              	.LVL346:
 4796              	.L364:
3304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4797              		.loc 1 3304 13 view .LVU1288
 4798 006c 0024     		movs	r4, #0
 4799              	.LVL347:
 4800              	.L361:
3304:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4801              		.loc 1 3304 13 view .LVU1289
 4802              	.LBE206:
3331:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4803              		.loc 1 3331 2 is_stmt 1 view .LVU1290
 4804 006e FFF7FEFF 		bl	vPortExitCritical
 4805              	.LVL348:
3333:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4806              		.loc 1 3333 2 view .LVU1291
3334:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4807              		.loc 1 3334 1 is_stmt 0 view .LVU1292
 4808 0072 2046     		mov	r0, r4
ARM GAS  /tmp/cc6UspJj.s 			page 202


 4809 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4810              	.LVL349:
 4811              	.L365:
 4812              	.LBB207:
3316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4813              		.loc 1 3316 12 view .LVU1293
 4814 0076 0124     		movs	r4, #1
 4815              	.LVL350:
3316:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4816              		.loc 1 3316 12 view .LVU1294
 4817 0078 F9E7     		b	.L361
 4818              	.L371:
 4819 007a 00BF     		.align	2
 4820              	.L370:
 4821 007c 00000000 		.word	.LANCHOR15
 4822 0080 00000000 		.word	.LANCHOR18
 4823              	.LBE207:
 4824              		.cfi_endproc
 4825              	.LFE39:
 4827              		.section	.text.vTaskMissedYield,"ax",%progbits
 4828              		.align	1
 4829              		.global	vTaskMissedYield
 4830              		.syntax unified
 4831              		.thumb
 4832              		.thumb_func
 4833              		.fpu fpv4-sp-d16
 4835              	vTaskMissedYield:
 4836              	.LFB40:
3338:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4837              		.loc 1 3338 1 is_stmt 1 view -0
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 0
 4840              		@ frame_needed = 0, uses_anonymous_args = 0
 4841              		@ link register save eliminated.
3339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4842              		.loc 1 3339 2 view .LVU1296
3339:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4843              		.loc 1 3339 16 is_stmt 0 view .LVU1297
 4844 0000 014B     		ldr	r3, .L373
 4845 0002 0122     		movs	r2, #1
 4846 0004 1A60     		str	r2, [r3]
3340:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4847              		.loc 1 3340 1 view .LVU1298
 4848 0006 7047     		bx	lr
 4849              	.L374:
 4850              		.align	2
 4851              	.L373:
 4852 0008 00000000 		.word	.LANCHOR19
 4853              		.cfi_endproc
 4854              	.LFE40:
 4856              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4857              		.align	1
 4858              		.global	xTaskGetCurrentTaskHandle
 4859              		.syntax unified
 4860              		.thumb
 4861              		.thumb_func
 4862              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc6UspJj.s 			page 203


 4864              	xTaskGetCurrentTaskHandle:
 4865              	.LFB46:
3970:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4866              		.loc 1 3970 2 is_stmt 1 view -0
 4867              		.cfi_startproc
 4868              		@ args = 0, pretend = 0, frame = 0
 4869              		@ frame_needed = 0, uses_anonymous_args = 0
 4870              		@ link register save eliminated.
3971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4871              		.loc 1 3971 2 view .LVU1300
3976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4872              		.loc 1 3976 3 view .LVU1301
3976:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4873              		.loc 1 3976 11 is_stmt 0 view .LVU1302
 4874 0000 014B     		ldr	r3, .L376
 4875 0002 1868     		ldr	r0, [r3]
 4876              	.LVL351:
3978:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4877              		.loc 1 3978 3 is_stmt 1 view .LVU1303
3979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4878              		.loc 1 3979 2 is_stmt 0 view .LVU1304
 4879 0004 7047     		bx	lr
 4880              	.L377:
 4881 0006 00BF     		.align	2
 4882              	.L376:
 4883 0008 00000000 		.word	.LANCHOR10
 4884              		.cfi_endproc
 4885              	.LFE46:
 4887              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4888              		.align	1
 4889              		.global	xTaskGetSchedulerState
 4890              		.syntax unified
 4891              		.thumb
 4892              		.thumb_func
 4893              		.fpu fpv4-sp-d16
 4895              	xTaskGetSchedulerState:
 4896              	.LFB47:
3987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4897              		.loc 1 3987 2 is_stmt 1 view -0
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 0
 4900              		@ frame_needed = 0, uses_anonymous_args = 0
 4901              		@ link register save eliminated.
3988:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4902              		.loc 1 3988 2 view .LVU1306
3990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4903              		.loc 1 3990 3 view .LVU1307
3990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4904              		.loc 1 3990 25 is_stmt 0 view .LVU1308
 4905 0000 054B     		ldr	r3, .L383
 4906 0002 1B68     		ldr	r3, [r3]
3990:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4907              		.loc 1 3990 5 view .LVU1309
 4908 0004 33B1     		cbz	r3, .L380
3996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4909              		.loc 1 3996 4 is_stmt 1 view .LVU1310
3996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc6UspJj.s 			page 204


 4910              		.loc 1 3996 29 is_stmt 0 view .LVU1311
 4911 0006 054B     		ldr	r3, .L383+4
 4912 0008 1B68     		ldr	r3, [r3]
3996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4913              		.loc 1 3996 6 view .LVU1312
 4914 000a 0BB1     		cbz	r3, .L382
4002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4915              		.loc 1 4002 13 view .LVU1313
 4916 000c 0020     		movs	r0, #0
 4917              	.LVL352:
4006:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4918              		.loc 1 4006 3 is_stmt 1 view .LVU1314
4007:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4919              		.loc 1 4007 2 is_stmt 0 view .LVU1315
 4920 000e 7047     		bx	lr
 4921              	.LVL353:
 4922              	.L382:
3998:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4923              		.loc 1 3998 13 view .LVU1316
 4924 0010 0220     		movs	r0, #2
 4925 0012 7047     		bx	lr
 4926              	.L380:
3992:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4927              		.loc 1 3992 12 view .LVU1317
 4928 0014 0120     		movs	r0, #1
 4929 0016 7047     		bx	lr
 4930              	.L384:
 4931              		.align	2
 4932              	.L383:
 4933 0018 00000000 		.word	.LANCHOR11
 4934 001c 00000000 		.word	.LANCHOR16
 4935              		.cfi_endproc
 4936              	.LFE47:
 4938              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4939              		.align	1
 4940              		.global	xTaskPriorityInherit
 4941              		.syntax unified
 4942              		.thumb
 4943              		.thumb_func
 4944              		.fpu fpv4-sp-d16
 4946              	xTaskPriorityInherit:
 4947              	.LVL354:
 4948              	.LFB48:
4015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4949              		.loc 1 4015 2 is_stmt 1 view -0
 4950              		.cfi_startproc
 4951              		@ args = 0, pretend = 0, frame = 0
 4952              		@ frame_needed = 0, uses_anonymous_args = 0
4016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4953              		.loc 1 4016 2 view .LVU1319
4017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4954              		.loc 1 4017 2 view .LVU1320
4022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4955              		.loc 1 4022 3 view .LVU1321
4022:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4956              		.loc 1 4022 5 is_stmt 0 view .LVU1322
 4957 0000 0028     		cmp	r0, #0
ARM GAS  /tmp/cc6UspJj.s 			page 205


 4958 0002 48D0     		beq	.L391
4015:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4959              		.loc 1 4015 2 view .LVU1323
 4960 0004 38B5     		push	{r3, r4, r5, lr}
 4961              	.LCFI45:
 4962              		.cfi_def_cfa_offset 16
 4963              		.cfi_offset 3, -16
 4964              		.cfi_offset 4, -12
 4965              		.cfi_offset 5, -8
 4966              		.cfi_offset 14, -4
 4967 0006 0446     		mov	r4, r0
4027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4968              		.loc 1 4027 4 is_stmt 1 view .LVU1324
4027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4969              		.loc 1 4027 24 is_stmt 0 view .LVU1325
 4970 0008 C36A     		ldr	r3, [r0, #44]
4027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4971              		.loc 1 4027 51 view .LVU1326
 4972 000a 254A     		ldr	r2, .L398
 4973 000c 1268     		ldr	r2, [r2]
 4974 000e D26A     		ldr	r2, [r2, #44]
4027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4975              		.loc 1 4027 6 view .LVU1327
 4976 0010 9342     		cmp	r3, r2
 4977 0012 38D2     		bcs	.L387
4032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4978              		.loc 1 4032 5 is_stmt 1 view .LVU1328
4032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4979              		.loc 1 4032 11 is_stmt 0 view .LVU1329
 4980 0014 8269     		ldr	r2, [r0, #24]
4032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4981              		.loc 1 4032 7 view .LVU1330
 4982 0016 002A     		cmp	r2, #0
 4983 0018 05DB     		blt	.L388
4034:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4984              		.loc 1 4034 6 is_stmt 1 view .LVU1331
 4985 001a 214A     		ldr	r2, .L398
 4986 001c 1268     		ldr	r2, [r2]
 4987 001e D26A     		ldr	r2, [r2, #44]
 4988 0020 C2F10702 		rsb	r2, r2, #7
 4989 0024 8261     		str	r2, [r0, #24]
 4990              	.L388:
4038:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4991              		.loc 1 4038 30 view .LVU1332
4043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4992              		.loc 1 4043 5 view .LVU1333
4043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4993              		.loc 1 4043 9 is_stmt 0 view .LVU1334
 4994 0026 6169     		ldr	r1, [r4, #20]
 4995 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4996 002c 1D4A     		ldr	r2, .L398+4
 4997 002e 02EB8303 		add	r3, r2, r3, lsl #2
4043:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4998              		.loc 1 4043 7 view .LVU1335
 4999 0032 9942     		cmp	r1, r3
 5000 0034 05D0     		beq	.L397
4064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc6UspJj.s 			page 206


 5001              		.loc 1 4064 6 is_stmt 1 view .LVU1336
4064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5002              		.loc 1 4064 49 is_stmt 0 view .LVU1337
 5003 0036 1A4B     		ldr	r3, .L398
 5004 0038 1B68     		ldr	r3, [r3]
 5005 003a DB6A     		ldr	r3, [r3, #44]
4064:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5006              		.loc 1 4064 35 view .LVU1338
 5007 003c E362     		str	r3, [r4, #44]
4070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5008              		.loc 1 4070 13 view .LVU1339
 5009 003e 0120     		movs	r0, #1
 5010              	.LVL355:
 5011              	.L385:
4097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5012              		.loc 1 4097 2 view .LVU1340
 5013 0040 38BD     		pop	{r3, r4, r5, pc}
 5014              	.LVL356:
 5015              	.L397:
4045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5016              		.loc 1 4045 6 is_stmt 1 view .LVU1341
4045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5017              		.loc 1 4045 10 is_stmt 0 view .LVU1342
 5018 0042 251D     		adds	r5, r4, #4
 5019 0044 2846     		mov	r0, r5
 5020              	.LVL357:
4045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5021              		.loc 1 4045 10 view .LVU1343
 5022 0046 FFF7FEFF 		bl	uxListRemove
 5023              	.LVL358:
4045:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5024              		.loc 1 4045 8 view .LVU1344
 5025 004a 38B9     		cbnz	r0, .L390
4050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5026              		.loc 1 4050 7 is_stmt 1 view .LVU1345
 5027 004c E36A     		ldr	r3, [r4, #44]
 5028 004e 0122     		movs	r2, #1
 5029 0050 9A40     		lsls	r2, r2, r3
 5030 0052 1549     		ldr	r1, .L398+8
 5031 0054 0B68     		ldr	r3, [r1]
 5032 0056 23EA0203 		bic	r3, r3, r2
 5033 005a 0B60     		str	r3, [r1]
 5034              	.L390:
4054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5035              		.loc 1 4054 31 view .LVU1346
4058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 5036              		.loc 1 4058 6 view .LVU1347
4058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 5037              		.loc 1 4058 49 is_stmt 0 view .LVU1348
 5038 005c 104B     		ldr	r3, .L398
 5039 005e 1B68     		ldr	r3, [r3]
 5040 0060 D86A     		ldr	r0, [r3, #44]
4058:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 5041              		.loc 1 4058 35 view .LVU1349
 5042 0062 E062     		str	r0, [r4, #44]
4059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5043              		.loc 1 4059 6 is_stmt 1 view .LVU1350
ARM GAS  /tmp/cc6UspJj.s 			page 207


4059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5044              		.loc 1 4059 6 view .LVU1351
 5045 0064 0124     		movs	r4, #1
 5046              	.LVL359:
4059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5047              		.loc 1 4059 6 is_stmt 0 view .LVU1352
 5048 0066 04FA00F3 		lsl	r3, r4, r0
 5049 006a 0F4A     		ldr	r2, .L398+8
 5050 006c 1168     		ldr	r1, [r2]
 5051 006e 0B43     		orrs	r3, r3, r1
 5052 0070 1360     		str	r3, [r2]
4059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5053              		.loc 1 4059 6 is_stmt 1 view .LVU1353
 5054 0072 00EB8000 		add	r0, r0, r0, lsl #2
 5055 0076 2946     		mov	r1, r5
 5056 0078 0A4B     		ldr	r3, .L398+4
 5057 007a 03EB8000 		add	r0, r3, r0, lsl #2
 5058 007e FFF7FEFF 		bl	vListInsertEnd
 5059              	.LVL360:
4059:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5060              		.loc 1 4059 47 view .LVU1354
4070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5061              		.loc 1 4070 13 is_stmt 0 view .LVU1355
 5062 0082 2046     		mov	r0, r4
 5063 0084 DCE7     		b	.L385
 5064              	.LVL361:
 5065              	.L387:
4074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5066              		.loc 1 4074 5 is_stmt 1 view .LVU1356
4074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5067              		.loc 1 4074 25 is_stmt 0 view .LVU1357
 5068 0086 426C     		ldr	r2, [r0, #68]
4074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5069              		.loc 1 4074 56 view .LVU1358
 5070 0088 054B     		ldr	r3, .L398
 5071 008a 1B68     		ldr	r3, [r3]
 5072 008c DB6A     		ldr	r3, [r3, #44]
4074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5073              		.loc 1 4074 7 view .LVU1359
 5074 008e 9A42     		cmp	r2, r3
 5075 0090 03D3     		bcc	.L392
4017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5076              		.loc 1 4017 13 view .LVU1360
 5077 0092 0020     		movs	r0, #0
 5078              	.LVL362:
4017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5079              		.loc 1 4017 13 view .LVU1361
 5080 0094 D4E7     		b	.L385
 5081              	.LVL363:
 5082              	.L391:
 5083              	.LCFI46:
 5084              		.cfi_def_cfa_offset 0
 5085              		.cfi_restore 3
 5086              		.cfi_restore 4
 5087              		.cfi_restore 5
 5088              		.cfi_restore 14
4017:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 208


 5089              		.loc 1 4017 13 view .LVU1362
 5090 0096 0020     		movs	r0, #0
 5091              	.LVL364:
4097:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5092              		.loc 1 4097 2 view .LVU1363
 5093 0098 7047     		bx	lr
 5094              	.LVL365:
 5095              	.L392:
 5096              	.LCFI47:
 5097              		.cfi_def_cfa_offset 16
 5098              		.cfi_offset 3, -16
 5099              		.cfi_offset 4, -12
 5100              		.cfi_offset 5, -8
 5101              		.cfi_offset 14, -4
4083:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5102              		.loc 1 4083 14 view .LVU1364
 5103 009a 0120     		movs	r0, #1
 5104              	.LVL366:
4093:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5105              		.loc 1 4093 28 is_stmt 1 view .LVU1365
4096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5106              		.loc 1 4096 3 view .LVU1366
4096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5107              		.loc 1 4096 10 is_stmt 0 view .LVU1367
 5108 009c D0E7     		b	.L385
 5109              	.L399:
 5110 009e 00BF     		.align	2
 5111              	.L398:
 5112 00a0 00000000 		.word	.LANCHOR10
 5113 00a4 00000000 		.word	.LANCHOR4
 5114 00a8 00000000 		.word	.LANCHOR13
 5115              		.cfi_endproc
 5116              	.LFE48:
 5118              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 5119              		.align	1
 5120              		.global	xTaskPriorityDisinherit
 5121              		.syntax unified
 5122              		.thumb
 5123              		.thumb_func
 5124              		.fpu fpv4-sp-d16
 5126              	xTaskPriorityDisinherit:
 5127              	.LVL367:
 5128              	.LFB49:
4105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5129              		.loc 1 4105 2 is_stmt 1 view -0
 5130              		.cfi_startproc
 5131              		@ args = 0, pretend = 0, frame = 0
 5132              		@ frame_needed = 0, uses_anonymous_args = 0
4106:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 5133              		.loc 1 4106 2 view .LVU1369
4107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5134              		.loc 1 4107 2 view .LVU1370
4109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5135              		.loc 1 4109 3 view .LVU1371
4109:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5136              		.loc 1 4109 5 is_stmt 0 view .LVU1372
 5137 0000 0028     		cmp	r0, #0
ARM GAS  /tmp/cc6UspJj.s 			page 209


 5138 0002 4BD0     		beq	.L407
4105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5139              		.loc 1 4105 2 view .LVU1373
 5140 0004 38B5     		push	{r3, r4, r5, lr}
 5141              	.LCFI48:
 5142              		.cfi_def_cfa_offset 16
 5143              		.cfi_offset 3, -16
 5144              		.cfi_offset 4, -12
 5145              		.cfi_offset 5, -8
 5146              		.cfi_offset 14, -4
 5147 0006 0446     		mov	r4, r0
4115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5148              		.loc 1 4115 4 is_stmt 1 view .LVU1374
 5149 0008 264B     		ldr	r3, .L415
 5150 000a 1B68     		ldr	r3, [r3]
 5151 000c 8342     		cmp	r3, r0
 5152 000e 08D0     		beq	.L402
4115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5153              		.loc 1 4115 4 view .LVU1375
 5154              	.LBB208:
 5155              	.LBI208:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5156              		.loc 2 191 30 view .LVU1376
 5157              	.LBB209:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5158              		.loc 2 193 1 view .LVU1377
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5159              		.loc 2 195 2 view .LVU1378
 5160              		.syntax unified
 5161              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5162 0010 4FF05003 			mov r3, #80												
 5163 0014 83F31188 		msr basepri, r3											
 5164 0018 BFF36F8F 		isb														
 5165 001c BFF34F8F 		dsb														
 5166              	
 5167              	@ 0 "" 2
 5168              	.LVL368:
 5169              		.thumb
 5170              		.syntax unified
 5171              	.L403:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5172              		.loc 2 195 2 is_stmt 0 view .LVU1379
 5173              	.LBE209:
 5174              	.LBE208:
4115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5175              		.loc 1 4115 4 is_stmt 1 discriminator 1 view .LVU1380
4115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5176              		.loc 1 4115 4 discriminator 1 view .LVU1381
 5177 0020 FEE7     		b	.L403
 5178              	.L402:
4115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5179              		.loc 1 4115 41 discriminator 2 view .LVU1382
4116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 5180              		.loc 1 4116 4 discriminator 2 view .LVU1383
 5181 0022 836C     		ldr	r3, [r0, #72]
 5182 0024 43B9     		cbnz	r3, .L404
4116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
ARM GAS  /tmp/cc6UspJj.s 			page 210


 5183              		.loc 1 4116 4 view .LVU1384
 5184              	.LBB210:
 5185              	.LBI210:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5186              		.loc 2 191 30 view .LVU1385
 5187              	.LBB211:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5188              		.loc 2 193 1 view .LVU1386
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5189              		.loc 2 195 2 view .LVU1387
 5190              		.syntax unified
 5191              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5192 0026 4FF05003 			mov r3, #80												
 5193 002a 83F31188 		msr basepri, r3											
 5194 002e BFF36F8F 		isb														
 5195 0032 BFF34F8F 		dsb														
 5196              	
 5197              	@ 0 "" 2
 5198              	.LVL369:
 5199              		.thumb
 5200              		.syntax unified
 5201              	.L405:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5202              		.loc 2 195 2 is_stmt 0 view .LVU1388
 5203              	.LBE211:
 5204              	.LBE210:
4116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 5205              		.loc 1 4116 4 is_stmt 1 discriminator 2 view .LVU1389
4116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 5206              		.loc 1 4116 4 discriminator 2 view .LVU1390
 5207 0036 FEE7     		b	.L405
 5208              	.L404:
4116:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 5209              		.loc 1 4116 40 discriminator 2 view .LVU1391
4117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5210              		.loc 1 4117 4 discriminator 2 view .LVU1392
4117:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5211              		.loc 1 4117 28 is_stmt 0 discriminator 2 view .LVU1393
 5212 0038 013B     		subs	r3, r3, #1
 5213 003a 8364     		str	r3, [r0, #72]
4121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5214              		.loc 1 4121 4 is_stmt 1 discriminator 2 view .LVU1394
4121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5215              		.loc 1 4121 13 is_stmt 0 discriminator 2 view .LVU1395
 5216 003c C16A     		ldr	r1, [r0, #44]
4121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5217              		.loc 1 4121 34 discriminator 2 view .LVU1396
 5218 003e 426C     		ldr	r2, [r0, #68]
4121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5219              		.loc 1 4121 6 discriminator 2 view .LVU1397
 5220 0040 9142     		cmp	r1, r2
 5221 0042 2DD0     		beq	.L408
4124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5222              		.loc 1 4124 5 is_stmt 1 view .LVU1398
4124:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5223              		.loc 1 4124 7 is_stmt 0 view .LVU1399
 5224 0044 0BB1     		cbz	r3, .L414
ARM GAS  /tmp/cc6UspJj.s 			page 211


4107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5225              		.loc 1 4107 13 view .LVU1400
 5226 0046 0020     		movs	r0, #0
 5227              	.LVL370:
4173:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5228              		.loc 1 4173 28 is_stmt 1 view .LVU1401
4176:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5229              		.loc 1 4176 3 view .LVU1402
 5230              	.L400:
4177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5231              		.loc 1 4177 2 is_stmt 0 view .LVU1403
 5232 0048 38BD     		pop	{r3, r4, r5, pc}
 5233              	.LVL371:
 5234              	.L414:
4131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5235              		.loc 1 4131 6 is_stmt 1 view .LVU1404
4131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5236              		.loc 1 4131 10 is_stmt 0 view .LVU1405
 5237 004a 051D     		adds	r5, r0, #4
 5238 004c 2846     		mov	r0, r5
 5239              	.LVL372:
4131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5240              		.loc 1 4131 10 view .LVU1406
 5241 004e FFF7FEFF 		bl	uxListRemove
 5242              	.LVL373:
4131:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5243              		.loc 1 4131 8 view .LVU1407
 5244 0052 68B9     		cbnz	r0, .L406
4133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5245              		.loc 1 4133 7 is_stmt 1 view .LVU1408
 5246 0054 E36A     		ldr	r3, [r4, #44]
 5247 0056 03EB8302 		add	r2, r3, r3, lsl #2
 5248 005a 9200     		lsls	r2, r2, #2
 5249 005c 1249     		ldr	r1, .L415+4
 5250 005e 8A58     		ldr	r2, [r1, r2]
 5251 0060 32B9     		cbnz	r2, .L406
4133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5252              		.loc 1 4133 7 discriminator 1 view .LVU1409
 5253 0062 0122     		movs	r2, #1
 5254 0064 9A40     		lsls	r2, r2, r3
 5255 0066 1149     		ldr	r1, .L415+8
 5256 0068 0B68     		ldr	r3, [r1]
 5257 006a 23EA0203 		bic	r3, r3, r2
 5258 006e 0B60     		str	r3, [r1]
 5259              	.L406:
4137:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5260              		.loc 1 4137 31 view .LVU1410
4142:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 5261              		.loc 1 4142 67 view .LVU1411
4143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5262              		.loc 1 4143 6 view .LVU1412
4143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5263              		.loc 1 4143 31 is_stmt 0 view .LVU1413
 5264 0070 606C     		ldr	r0, [r4, #68]
4143:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5265              		.loc 1 4143 24 view .LVU1414
 5266 0072 E062     		str	r0, [r4, #44]
ARM GAS  /tmp/cc6UspJj.s 			page 212


4148:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5267              		.loc 1 4148 6 is_stmt 1 view .LVU1415
 5268 0074 C0F10703 		rsb	r3, r0, #7
 5269 0078 A361     		str	r3, [r4, #24]
4149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5270              		.loc 1 4149 6 view .LVU1416
4149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5271              		.loc 1 4149 6 view .LVU1417
 5272 007a 0124     		movs	r4, #1
 5273              	.LVL374:
4149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5274              		.loc 1 4149 6 is_stmt 0 view .LVU1418
 5275 007c 04FA00F3 		lsl	r3, r4, r0
 5276 0080 0A4A     		ldr	r2, .L415+8
 5277 0082 1168     		ldr	r1, [r2]
 5278 0084 0B43     		orrs	r3, r3, r1
 5279 0086 1360     		str	r3, [r2]
4149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5280              		.loc 1 4149 6 is_stmt 1 view .LVU1419
 5281 0088 00EB8000 		add	r0, r0, r0, lsl #2
 5282 008c 2946     		mov	r1, r5
 5283 008e 064B     		ldr	r3, .L415+4
 5284 0090 03EB8000 		add	r0, r3, r0, lsl #2
 5285 0094 FFF7FEFF 		bl	vListInsertEnd
 5286              	.LVL375:
4149:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5287              		.loc 1 4149 36 view .LVU1420
4159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5288              		.loc 1 4159 6 view .LVU1421
4159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5289              		.loc 1 4159 14 is_stmt 0 view .LVU1422
 5290 0098 2046     		mov	r0, r4
 5291 009a D5E7     		b	.L400
 5292              	.LVL376:
 5293              	.L407:
 5294              	.LCFI49:
 5295              		.cfi_def_cfa_offset 0
 5296              		.cfi_restore 3
 5297              		.cfi_restore 4
 5298              		.cfi_restore 5
 5299              		.cfi_restore 14
4107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5300              		.loc 1 4107 13 view .LVU1423
 5301 009c 0020     		movs	r0, #0
 5302              	.LVL377:
4177:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5303              		.loc 1 4177 2 view .LVU1424
 5304 009e 7047     		bx	lr
 5305              	.LVL378:
 5306              	.L408:
 5307              	.LCFI50:
 5308              		.cfi_def_cfa_offset 16
 5309              		.cfi_offset 3, -16
 5310              		.cfi_offset 4, -12
 5311              		.cfi_offset 5, -8
 5312              		.cfi_offset 14, -4
4107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc6UspJj.s 			page 213


 5313              		.loc 1 4107 13 view .LVU1425
 5314 00a0 0020     		movs	r0, #0
 5315              	.LVL379:
4107:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5316              		.loc 1 4107 13 view .LVU1426
 5317 00a2 D1E7     		b	.L400
 5318              	.L416:
 5319              		.align	2
 5320              	.L415:
 5321 00a4 00000000 		.word	.LANCHOR10
 5322 00a8 00000000 		.word	.LANCHOR4
 5323 00ac 00000000 		.word	.LANCHOR13
 5324              		.cfi_endproc
 5325              	.LFE49:
 5327              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 5328              		.align	1
 5329              		.global	vTaskPriorityDisinheritAfterTimeout
 5330              		.syntax unified
 5331              		.thumb
 5332              		.thumb_func
 5333              		.fpu fpv4-sp-d16
 5335              	vTaskPriorityDisinheritAfterTimeout:
 5336              	.LVL380:
 5337              	.LFB50:
4185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5338              		.loc 1 4185 2 is_stmt 1 view -0
 5339              		.cfi_startproc
 5340              		@ args = 0, pretend = 0, frame = 0
 5341              		@ frame_needed = 0, uses_anonymous_args = 0
4186:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 5342              		.loc 1 4186 2 view .LVU1428
4187:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 5343              		.loc 1 4187 2 view .LVU1429
4188:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5344              		.loc 1 4188 2 view .LVU1430
4190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5345              		.loc 1 4190 3 view .LVU1431
4190:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5346              		.loc 1 4190 5 is_stmt 0 view .LVU1432
 5347 0000 0028     		cmp	r0, #0
 5348 0002 4FD0     		beq	.L427
4185:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5349              		.loc 1 4185 2 view .LVU1433
 5350 0004 38B5     		push	{r3, r4, r5, lr}
 5351              	.LCFI51:
 5352              		.cfi_def_cfa_offset 16
 5353              		.cfi_offset 3, -16
 5354              		.cfi_offset 4, -12
 5355              		.cfi_offset 5, -8
 5356              		.cfi_offset 14, -4
 5357 0006 0446     		mov	r4, r0
4194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5358              		.loc 1 4194 4 is_stmt 1 view .LVU1434
 5359 0008 836C     		ldr	r3, [r0, #72]
 5360 000a 43B9     		cbnz	r3, .L419
4194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5361              		.loc 1 4194 4 view .LVU1435
ARM GAS  /tmp/cc6UspJj.s 			page 214


 5362              	.LBB212:
 5363              	.LBI212:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5364              		.loc 2 191 30 view .LVU1436
 5365              	.LBB213:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5366              		.loc 2 193 1 view .LVU1437
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5367              		.loc 2 195 2 view .LVU1438
 5368              		.syntax unified
 5369              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5370 000c 4FF05003 			mov r3, #80												
 5371 0010 83F31188 		msr basepri, r3											
 5372 0014 BFF36F8F 		isb														
 5373 0018 BFF34F8F 		dsb														
 5374              	
 5375              	@ 0 "" 2
 5376              	.LVL381:
 5377              		.thumb
 5378              		.syntax unified
 5379              	.L420:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5380              		.loc 2 195 2 is_stmt 0 view .LVU1439
 5381              	.LBE213:
 5382              	.LBE212:
4194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5383              		.loc 1 4194 4 is_stmt 1 discriminator 1 view .LVU1440
4194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5384              		.loc 1 4194 4 discriminator 1 view .LVU1441
 5385 001c FEE7     		b	.L420
 5386              	.L419:
4194:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5387              		.loc 1 4194 40 discriminator 2 view .LVU1442
4200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5388              		.loc 1 4200 4 discriminator 2 view .LVU1443
4200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5389              		.loc 1 4200 13 is_stmt 0 discriminator 2 view .LVU1444
 5390 001e 426C     		ldr	r2, [r0, #68]
4200:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5391              		.loc 1 4200 6 discriminator 2 view .LVU1445
 5392 0020 8A42     		cmp	r2, r1
 5393 0022 00D2     		bcs	.L421
4202:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5394              		.loc 1 4202 21 view .LVU1446
 5395 0024 0A46     		mov	r2, r1
 5396              	.L421:
 5397              	.LVL382:
4210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5398              		.loc 1 4210 4 is_stmt 1 view .LVU1447
4210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5399              		.loc 1 4210 13 is_stmt 0 view .LVU1448
 5400 0026 E16A     		ldr	r1, [r4, #44]
 5401              	.LVL383:
4210:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5402              		.loc 1 4210 6 view .LVU1449
 5403 0028 9142     		cmp	r1, r2
 5404 002a 01D0     		beq	.L417
ARM GAS  /tmp/cc6UspJj.s 			page 215


4216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5405              		.loc 1 4216 5 is_stmt 1 view .LVU1450
4216:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5406              		.loc 1 4216 7 is_stmt 0 view .LVU1451
 5407 002c 012B     		cmp	r3, #1
 5408 002e 00D0     		beq	.L430
 5409              	.LVL384:
 5410              	.L417:
4282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5411              		.loc 1 4282 2 view .LVU1452
 5412 0030 38BD     		pop	{r3, r4, r5, pc}
 5413              	.LVL385:
 5414              	.L430:
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5415              		.loc 1 4221 6 is_stmt 1 view .LVU1453
 5416 0032 1D4B     		ldr	r3, .L432
 5417 0034 1B68     		ldr	r3, [r3]
 5418 0036 A342     		cmp	r3, r4
 5419 0038 2BD0     		beq	.L431
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5420              		.loc 1 4221 43 discriminator 2 view .LVU1454
4226:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5421              		.loc 1 4226 67 discriminator 2 view .LVU1455
4227:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5422              		.loc 1 4227 6 discriminator 2 view .LVU1456
 5423              	.LVL386:
4228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5424              		.loc 1 4228 6 discriminator 2 view .LVU1457
4228:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5425              		.loc 1 4228 24 is_stmt 0 discriminator 2 view .LVU1458
 5426 003a E262     		str	r2, [r4, #44]
4232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5427              		.loc 1 4232 6 is_stmt 1 discriminator 2 view .LVU1459
4232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5428              		.loc 1 4232 12 is_stmt 0 discriminator 2 view .LVU1460
 5429 003c A369     		ldr	r3, [r4, #24]
4232:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5430              		.loc 1 4232 8 discriminator 2 view .LVU1461
 5431 003e 002B     		cmp	r3, #0
 5432 0040 02DB     		blt	.L424
4234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5433              		.loc 1 4234 7 is_stmt 1 view .LVU1462
 5434 0042 C2F10702 		rsb	r2, r2, #7
 5435              	.LVL387:
4234:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5436              		.loc 1 4234 7 is_stmt 0 view .LVU1463
 5437 0046 A261     		str	r2, [r4, #24]
 5438              	.L424:
4238:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5439              		.loc 1 4238 31 is_stmt 1 view .LVU1464
4247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5440              		.loc 1 4247 6 view .LVU1465
4247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5441              		.loc 1 4247 10 is_stmt 0 view .LVU1466
 5442 0048 6269     		ldr	r2, [r4, #20]
 5443 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5444              	.LVL388:
ARM GAS  /tmp/cc6UspJj.s 			page 216


4247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5445              		.loc 1 4247 10 view .LVU1467
 5446 004e 174B     		ldr	r3, .L432+4
 5447 0050 03EB8103 		add	r3, r3, r1, lsl #2
4247:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5448              		.loc 1 4247 8 view .LVU1468
 5449 0054 9A42     		cmp	r2, r3
 5450 0056 EBD1     		bne	.L417
4249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5451              		.loc 1 4249 7 is_stmt 1 view .LVU1469
4249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5452              		.loc 1 4249 11 is_stmt 0 view .LVU1470
 5453 0058 251D     		adds	r5, r4, #4
 5454 005a 2846     		mov	r0, r5
 5455              	.LVL389:
4249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5456              		.loc 1 4249 11 view .LVU1471
 5457 005c FFF7FEFF 		bl	uxListRemove
 5458              	.LVL390:
4249:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5459              		.loc 1 4249 9 view .LVU1472
 5460 0060 38B9     		cbnz	r0, .L425
4254:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5461              		.loc 1 4254 8 is_stmt 1 view .LVU1473
 5462 0062 E36A     		ldr	r3, [r4, #44]
 5463 0064 0122     		movs	r2, #1
 5464 0066 9A40     		lsls	r2, r2, r3
 5465 0068 1149     		ldr	r1, .L432+8
 5466 006a 0B68     		ldr	r3, [r1]
 5467 006c 23EA0203 		bic	r3, r3, r2
 5468 0070 0B60     		str	r3, [r1]
 5469              	.L425:
4258:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5470              		.loc 1 4258 32 view .LVU1474
4261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5471              		.loc 1 4261 7 view .LVU1475
4261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5472              		.loc 1 4261 7 view .LVU1476
 5473 0072 E06A     		ldr	r0, [r4, #44]
 5474 0074 0123     		movs	r3, #1
 5475 0076 8340     		lsls	r3, r3, r0
 5476 0078 0D4A     		ldr	r2, .L432+8
 5477 007a 1168     		ldr	r1, [r2]
 5478 007c 0B43     		orrs	r3, r3, r1
 5479 007e 1360     		str	r3, [r2]
4261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5480              		.loc 1 4261 7 view .LVU1477
 5481 0080 00EB8000 		add	r0, r0, r0, lsl #2
 5482 0084 2946     		mov	r1, r5
 5483 0086 094B     		ldr	r3, .L432+4
 5484 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5485 008c FFF7FEFF 		bl	vListInsertEnd
 5486              	.LVL391:
4261:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5487              		.loc 1 4261 37 view .LVU1478
4280:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5488              		.loc 1 4280 28 view .LVU1479
ARM GAS  /tmp/cc6UspJj.s 			page 217


4282:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5489              		.loc 1 4282 2 is_stmt 0 view .LVU1480
 5490 0090 CEE7     		b	.L417
 5491              	.LVL392:
 5492              	.L431:
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5493              		.loc 1 4221 6 is_stmt 1 view .LVU1481
 5494              	.LBB214:
 5495              	.LBI214:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5496              		.loc 2 191 30 view .LVU1482
 5497              	.LBB215:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5498              		.loc 2 193 1 view .LVU1483
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5499              		.loc 2 195 2 view .LVU1484
 5500              		.syntax unified
 5501              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5502 0092 4FF05003 			mov r3, #80												
 5503 0096 83F31188 		msr basepri, r3											
 5504 009a BFF36F8F 		isb														
 5505 009e BFF34F8F 		dsb														
 5506              	
 5507              	@ 0 "" 2
 5508              	.LVL393:
 5509              		.thumb
 5510              		.syntax unified
 5511              	.L423:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5512              		.loc 2 195 2 is_stmt 0 view .LVU1485
 5513              	.LBE215:
 5514              	.LBE214:
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5515              		.loc 1 4221 6 is_stmt 1 discriminator 2 view .LVU1486
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5516              		.loc 1 4221 6 discriminator 2 view .LVU1487
 5517 00a2 FEE7     		b	.L423
 5518              	.LVL394:
 5519              	.L427:
 5520              	.LCFI52:
 5521              		.cfi_def_cfa_offset 0
 5522              		.cfi_restore 3
 5523              		.cfi_restore 4
 5524              		.cfi_restore 5
 5525              		.cfi_restore 14
4221:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 4221 6 is_stmt 0 discriminator 2 view .LVU1488
 5527 00a4 7047     		bx	lr
 5528              	.L433:
 5529 00a6 00BF     		.align	2
 5530              	.L432:
 5531 00a8 00000000 		.word	.LANCHOR10
 5532 00ac 00000000 		.word	.LANCHOR4
 5533 00b0 00000000 		.word	.LANCHOR13
 5534              		.cfi_endproc
 5535              	.LFE50:
 5537              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
ARM GAS  /tmp/cc6UspJj.s 			page 218


 5538              		.align	1
 5539              		.global	uxTaskResetEventItemValue
 5540              		.syntax unified
 5541              		.thumb
 5542              		.thumb_func
 5543              		.fpu fpv4-sp-d16
 5545              	uxTaskResetEventItemValue:
 5546              	.LFB51:
4603:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5547              		.loc 1 4603 1 is_stmt 1 view -0
 5548              		.cfi_startproc
 5549              		@ args = 0, pretend = 0, frame = 0
 5550              		@ frame_needed = 0, uses_anonymous_args = 0
 5551              		@ link register save eliminated.
4604:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5552              		.loc 1 4604 1 view .LVU1490
4606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5553              		.loc 1 4606 2 view .LVU1491
4606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5554              		.loc 1 4606 13 is_stmt 0 view .LVU1492
 5555 0000 044A     		ldr	r2, .L435
 5556 0002 1368     		ldr	r3, [r2]
4606:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5557              		.loc 1 4606 11 view .LVU1493
 5558 0004 9869     		ldr	r0, [r3, #24]
 5559              	.LVL395:
4610:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5560              		.loc 1 4610 2 is_stmt 1 view .LVU1494
 5561 0006 1368     		ldr	r3, [r2]
 5562 0008 DB6A     		ldr	r3, [r3, #44]
 5563 000a 1268     		ldr	r2, [r2]
 5564 000c C3F10703 		rsb	r3, r3, #7
 5565 0010 9361     		str	r3, [r2, #24]
4612:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5566              		.loc 1 4612 2 view .LVU1495
4613:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5567              		.loc 1 4613 1 is_stmt 0 view .LVU1496
 5568 0012 7047     		bx	lr
 5569              	.L436:
 5570              		.align	2
 5571              	.L435:
 5572 0014 00000000 		.word	.LANCHOR10
 5573              		.cfi_endproc
 5574              	.LFE51:
 5576              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5577              		.align	1
 5578              		.global	pvTaskIncrementMutexHeldCount
 5579              		.syntax unified
 5580              		.thumb
 5581              		.thumb_func
 5582              		.fpu fpv4-sp-d16
 5584              	pvTaskIncrementMutexHeldCount:
 5585              	.LFB52:
4619:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5586              		.loc 1 4619 2 is_stmt 1 view -0
 5587              		.cfi_startproc
 5588              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6UspJj.s 			page 219


 5589              		@ frame_needed = 0, uses_anonymous_args = 0
 5590              		@ link register save eliminated.
4622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5591              		.loc 1 4622 3 view .LVU1498
4622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5592              		.loc 1 4622 20 is_stmt 0 view .LVU1499
 5593 0000 054B     		ldr	r3, .L439
 5594 0002 1B68     		ldr	r3, [r3]
4622:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5595              		.loc 1 4622 5 view .LVU1500
 5596 0004 23B1     		cbz	r3, .L438
4624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5597              		.loc 1 4624 4 is_stmt 1 view .LVU1501
4624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5598              		.loc 1 4624 18 is_stmt 0 view .LVU1502
 5599 0006 044B     		ldr	r3, .L439
 5600 0008 1A68     		ldr	r2, [r3]
 5601 000a 936C     		ldr	r3, [r2, #72]
4624:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5602              		.loc 1 4624 35 view .LVU1503
 5603 000c 0133     		adds	r3, r3, #1
 5604 000e 9364     		str	r3, [r2, #72]
 5605              	.L438:
4627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5606              		.loc 1 4627 3 is_stmt 1 view .LVU1504
4627:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5607              		.loc 1 4627 10 is_stmt 0 view .LVU1505
 5608 0010 014B     		ldr	r3, .L439
 5609 0012 1868     		ldr	r0, [r3]
4628:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5610              		.loc 1 4628 2 view .LVU1506
 5611 0014 7047     		bx	lr
 5612              	.L440:
 5613 0016 00BF     		.align	2
 5614              	.L439:
 5615 0018 00000000 		.word	.LANCHOR10
 5616              		.cfi_endproc
 5617              	.LFE52:
 5619              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5620              		.align	1
 5621              		.global	ulTaskNotifyTake
 5622              		.syntax unified
 5623              		.thumb
 5624              		.thumb_func
 5625              		.fpu fpv4-sp-d16
 5627              	ulTaskNotifyTake:
 5628              	.LVL396:
 5629              	.LFB53:
4636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5630              		.loc 1 4636 2 is_stmt 1 view -0
 5631              		.cfi_startproc
 5632              		@ args = 0, pretend = 0, frame = 0
 5633              		@ frame_needed = 0, uses_anonymous_args = 0
4636:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5634              		.loc 1 4636 2 is_stmt 0 view .LVU1508
 5635 0000 38B5     		push	{r3, r4, r5, lr}
 5636              	.LCFI53:
ARM GAS  /tmp/cc6UspJj.s 			page 220


 5637              		.cfi_def_cfa_offset 16
 5638              		.cfi_offset 3, -16
 5639              		.cfi_offset 4, -12
 5640              		.cfi_offset 5, -8
 5641              		.cfi_offset 14, -4
 5642 0002 0546     		mov	r5, r0
 5643 0004 0C46     		mov	r4, r1
4637:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5644              		.loc 1 4637 2 is_stmt 1 view .LVU1509
4639:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5645              		.loc 1 4639 3 view .LVU1510
 5646 0006 FFF7FEFF 		bl	vPortEnterCritical
 5647              	.LVL397:
4642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5648              		.loc 1 4642 4 view .LVU1511
4642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5649              		.loc 1 4642 20 is_stmt 0 view .LVU1512
 5650 000a 1A4B     		ldr	r3, .L447
 5651 000c 1B68     		ldr	r3, [r3]
 5652 000e 1B6D     		ldr	r3, [r3, #80]
4642:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5653              		.loc 1 4642 6 view .LVU1513
 5654 0010 2BB9     		cbnz	r3, .L442
4645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5655              		.loc 1 4645 5 is_stmt 1 view .LVU1514
4645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5656              		.loc 1 4645 17 is_stmt 0 view .LVU1515
 5657 0012 184B     		ldr	r3, .L447
 5658 0014 1B68     		ldr	r3, [r3]
4645:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5659              		.loc 1 4645 33 view .LVU1516
 5660 0016 0122     		movs	r2, #1
 5661 0018 83F85420 		strb	r2, [r3, #84]
4647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5662              		.loc 1 4647 5 is_stmt 1 view .LVU1517
4647:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5663              		.loc 1 4647 7 is_stmt 0 view .LVU1518
 5664 001c ACB9     		cbnz	r4, .L446
 5665              	.L442:
4665:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5666              		.loc 1 4665 29 is_stmt 1 view .LVU1519
4668:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5667              		.loc 1 4668 3 view .LVU1520
 5668 001e FFF7FEFF 		bl	vPortExitCritical
 5669              	.LVL398:
4670:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5670              		.loc 1 4670 3 view .LVU1521
 5671 0022 FFF7FEFF 		bl	vPortEnterCritical
 5672              	.LVL399:
4672:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5673              		.loc 1 4672 27 view .LVU1522
4673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5674              		.loc 1 4673 4 view .LVU1523
4673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5675              		.loc 1 4673 27 is_stmt 0 view .LVU1524
 5676 0026 134B     		ldr	r3, .L447
 5677 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6UspJj.s 			page 221


4673:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5678              		.loc 1 4673 13 view .LVU1525
 5679 002a 1C6D     		ldr	r4, [r3, #80]
 5680              	.LVL400:
4675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5681              		.loc 1 4675 4 is_stmt 1 view .LVU1526
4675:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5682              		.loc 1 4675 6 is_stmt 0 view .LVU1527
 5683 002c 24B1     		cbz	r4, .L443
4677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5684              		.loc 1 4677 5 is_stmt 1 view .LVU1528
4677:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5685              		.loc 1 4677 7 is_stmt 0 view .LVU1529
 5686 002e DDB1     		cbz	r5, .L444
4679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5687              		.loc 1 4679 6 is_stmt 1 view .LVU1530
4679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5688              		.loc 1 4679 18 is_stmt 0 view .LVU1531
 5689 0030 104B     		ldr	r3, .L447
 5690 0032 1B68     		ldr	r3, [r3]
4679:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5691              		.loc 1 4679 36 view .LVU1532
 5692 0034 0022     		movs	r2, #0
 5693 0036 1A65     		str	r2, [r3, #80]
 5694              	.L443:
4688:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5695              		.loc 1 4688 29 is_stmt 1 view .LVU1533
4691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5696              		.loc 1 4691 4 view .LVU1534
4691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5697              		.loc 1 4691 16 is_stmt 0 view .LVU1535
 5698 0038 0E4B     		ldr	r3, .L447
 5699 003a 1B68     		ldr	r3, [r3]
4691:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5700              		.loc 1 4691 32 view .LVU1536
 5701 003c 0022     		movs	r2, #0
 5702 003e 83F85420 		strb	r2, [r3, #84]
4693:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5703              		.loc 1 4693 3 is_stmt 1 view .LVU1537
 5704 0042 FFF7FEFF 		bl	vPortExitCritical
 5705              	.LVL401:
4695:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5706              		.loc 1 4695 3 view .LVU1538
4696:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5707              		.loc 1 4696 2 is_stmt 0 view .LVU1539
 5708 0046 2046     		mov	r0, r4
 5709 0048 38BD     		pop	{r3, r4, r5, pc}
 5710              	.LVL402:
 5711              	.L446:
4649:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5712              		.loc 1 4649 6 is_stmt 1 view .LVU1540
 5713 004a 1146     		mov	r1, r2
 5714 004c 2046     		mov	r0, r4
 5715 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5716              	.LVL403:
4650:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5717              		.loc 1 4650 35 view .LVU1541
ARM GAS  /tmp/cc6UspJj.s 			page 222


4656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5718              		.loc 1 4656 6 view .LVU1542
 5719 0052 4FF0E023 		mov	r3, #-536813568
 5720 0056 4FF08052 		mov	r2, #268435456
 5721 005a C3F8042D 		str	r2, [r3, #3332]
4656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5722              		.loc 1 4656 6 view .LVU1543
 5723              		.syntax unified
 5724              	@ 4656 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5725 005e BFF34F8F 		dsb
 5726              	@ 0 "" 2
4656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5727              		.loc 1 4656 6 view .LVU1544
 5728              	@ 4656 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5729 0062 BFF36F8F 		isb
 5730              	@ 0 "" 2
4656:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5731              		.loc 1 4656 28 view .LVU1545
 5732              		.thumb
 5733              		.syntax unified
 5734 0066 DAE7     		b	.L442
 5735              	.LVL404:
 5736              	.L444:
4683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5737              		.loc 1 4683 6 view .LVU1546
4683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5738              		.loc 1 4683 18 is_stmt 0 view .LVU1547
 5739 0068 024B     		ldr	r3, .L447
 5740 006a 1B68     		ldr	r3, [r3]
4683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5741              		.loc 1 4683 47 view .LVU1548
 5742 006c 621E     		subs	r2, r4, #1
4683:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5743              		.loc 1 4683 36 view .LVU1549
 5744 006e 1A65     		str	r2, [r3, #80]
 5745 0070 E2E7     		b	.L443
 5746              	.L448:
 5747 0072 00BF     		.align	2
 5748              	.L447:
 5749 0074 00000000 		.word	.LANCHOR10
 5750              		.cfi_endproc
 5751              	.LFE53:
 5753              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5754              		.align	1
 5755              		.global	xTaskNotifyWait
 5756              		.syntax unified
 5757              		.thumb
 5758              		.thumb_func
 5759              		.fpu fpv4-sp-d16
 5761              	xTaskNotifyWait:
 5762              	.LVL405:
 5763              	.LFB54:
4704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5764              		.loc 1 4704 2 is_stmt 1 view -0
 5765              		.cfi_startproc
 5766              		@ args = 0, pretend = 0, frame = 0
 5767              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6UspJj.s 			page 223


4704:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5768              		.loc 1 4704 2 is_stmt 0 view .LVU1551
 5769 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5770              	.LCFI54:
 5771              		.cfi_def_cfa_offset 24
 5772              		.cfi_offset 3, -24
 5773              		.cfi_offset 4, -20
 5774              		.cfi_offset 5, -16
 5775              		.cfi_offset 6, -12
 5776              		.cfi_offset 7, -8
 5777              		.cfi_offset 14, -4
 5778 0002 0646     		mov	r6, r0
 5779 0004 0F46     		mov	r7, r1
 5780 0006 1446     		mov	r4, r2
 5781 0008 1D46     		mov	r5, r3
4705:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5782              		.loc 1 4705 2 is_stmt 1 view .LVU1552
4707:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5783              		.loc 1 4707 3 view .LVU1553
 5784 000a FFF7FEFF 		bl	vPortEnterCritical
 5785              	.LVL406:
4710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5786              		.loc 1 4710 4 view .LVU1554
4710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5787              		.loc 1 4710 20 is_stmt 0 view .LVU1555
 5788 000e 214B     		ldr	r3, .L457
 5789 0010 1B68     		ldr	r3, [r3]
 5790 0012 93F85420 		ldrb	r2, [r3, #84]	@ zero_extendqisi2
 5791 0016 D2B2     		uxtb	r2, r2
4710:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5792              		.loc 1 4710 6 view .LVU1556
 5793 0018 022A     		cmp	r2, #2
 5794 001a 0AD0     		beq	.L450
4715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5795              		.loc 1 4715 5 is_stmt 1 view .LVU1557
4715:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5796              		.loc 1 4715 35 is_stmt 0 view .LVU1558
 5797 001c 1D4A     		ldr	r2, .L457
 5798 001e 1168     		ldr	r1, [r2]
 5799 0020 0B6D     		ldr	r3, [r1, #80]
 5800 0022 23EA0603 		bic	r3, r3, r6
 5801 0026 0B65     		str	r3, [r1, #80]
4718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5802              		.loc 1 4718 5 is_stmt 1 view .LVU1559
4718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5803              		.loc 1 4718 17 is_stmt 0 view .LVU1560
 5804 0028 1368     		ldr	r3, [r2]
4718:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5805              		.loc 1 4718 33 view .LVU1561
 5806 002a 0122     		movs	r2, #1
 5807 002c 83F85420 		strb	r2, [r3, #84]
4720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5808              		.loc 1 4720 5 is_stmt 1 view .LVU1562
4720:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5809              		.loc 1 4720 7 is_stmt 0 view .LVU1563
 5810 0030 CDB9     		cbnz	r5, .L455
 5811              	.L450:
ARM GAS  /tmp/cc6UspJj.s 			page 224


4738:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5812              		.loc 1 4738 29 is_stmt 1 view .LVU1564
4741:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5813              		.loc 1 4741 3 view .LVU1565
 5814 0032 FFF7FEFF 		bl	vPortExitCritical
 5815              	.LVL407:
4743:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5816              		.loc 1 4743 3 view .LVU1566
 5817 0036 FFF7FEFF 		bl	vPortEnterCritical
 5818              	.LVL408:
4745:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5819              		.loc 1 4745 27 view .LVU1567
4747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5820              		.loc 1 4747 4 view .LVU1568
4747:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5821              		.loc 1 4747 6 is_stmt 0 view .LVU1569
 5822 003a 1CB1     		cbz	r4, .L451
4751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5823              		.loc 1 4751 5 is_stmt 1 view .LVU1570
4751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5824              		.loc 1 4751 41 is_stmt 0 view .LVU1571
 5825 003c 154B     		ldr	r3, .L457
 5826 003e 1B68     		ldr	r3, [r3]
 5827 0040 1B6D     		ldr	r3, [r3, #80]
4751:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5828              		.loc 1 4751 27 view .LVU1572
 5829 0042 2360     		str	r3, [r4]
 5830              	.L451:
4758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5831              		.loc 1 4758 4 is_stmt 1 view .LVU1573
4758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5832              		.loc 1 4758 20 is_stmt 0 view .LVU1574
 5833 0044 134B     		ldr	r3, .L457
 5834 0046 1B68     		ldr	r3, [r3]
 5835 0048 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 5836 004c DBB2     		uxtb	r3, r3
4758:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5837              		.loc 1 4758 6 view .LVU1575
 5838 004e 022B     		cmp	r3, #2
 5839 0050 18D0     		beq	.L456
4761:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5840              		.loc 1 4761 13 view .LVU1576
 5841 0052 0024     		movs	r4, #0
 5842              	.LVL409:
 5843              	.L452:
4771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5844              		.loc 1 4771 4 is_stmt 1 view .LVU1577
4771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5845              		.loc 1 4771 16 is_stmt 0 view .LVU1578
 5846 0054 0F4B     		ldr	r3, .L457
 5847 0056 1B68     		ldr	r3, [r3]
4771:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5848              		.loc 1 4771 32 view .LVU1579
 5849 0058 0022     		movs	r2, #0
 5850 005a 83F85420 		strb	r2, [r3, #84]
4773:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5851              		.loc 1 4773 3 is_stmt 1 view .LVU1580
ARM GAS  /tmp/cc6UspJj.s 			page 225


 5852 005e FFF7FEFF 		bl	vPortExitCritical
 5853              	.LVL410:
4775:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5854              		.loc 1 4775 3 view .LVU1581
4776:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5855              		.loc 1 4776 2 is_stmt 0 view .LVU1582
 5856 0062 2046     		mov	r0, r4
 5857 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5858              	.LVL411:
 5859              	.L455:
4722:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5860              		.loc 1 4722 6 is_stmt 1 view .LVU1583
 5861 0066 1146     		mov	r1, r2
 5862 0068 2846     		mov	r0, r5
 5863 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5864              	.LVL412:
4723:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5865              		.loc 1 4723 35 view .LVU1584
4729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5866              		.loc 1 4729 6 view .LVU1585
 5867 006e 4FF0E023 		mov	r3, #-536813568
 5868 0072 4FF08052 		mov	r2, #268435456
 5869 0076 C3F8042D 		str	r2, [r3, #3332]
4729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5870              		.loc 1 4729 6 view .LVU1586
 5871              		.syntax unified
 5872              	@ 4729 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5873 007a BFF34F8F 		dsb
 5874              	@ 0 "" 2
4729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5875              		.loc 1 4729 6 view .LVU1587
 5876              	@ 4729 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5877 007e BFF36F8F 		isb
 5878              	@ 0 "" 2
4729:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5879              		.loc 1 4729 28 view .LVU1588
 5880              		.thumb
 5881              		.syntax unified
 5882 0082 D6E7     		b	.L450
 5883              	.L456:
4767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5884              		.loc 1 4767 5 view .LVU1589
4767:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5885              		.loc 1 4767 35 is_stmt 0 view .LVU1590
 5886 0084 034B     		ldr	r3, .L457
 5887 0086 1A68     		ldr	r2, [r3]
 5888 0088 136D     		ldr	r3, [r2, #80]
 5889 008a 23EA0703 		bic	r3, r3, r7
 5890 008e 1365     		str	r3, [r2, #80]
4768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5891              		.loc 1 4768 5 is_stmt 1 view .LVU1591
 5892              	.LVL413:
4768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5893              		.loc 1 4768 13 is_stmt 0 view .LVU1592
 5894 0090 0124     		movs	r4, #1
 5895              	.LVL414:
4768:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc6UspJj.s 			page 226


 5896              		.loc 1 4768 13 view .LVU1593
 5897 0092 DFE7     		b	.L452
 5898              	.L458:
 5899              		.align	2
 5900              	.L457:
 5901 0094 00000000 		.word	.LANCHOR10
 5902              		.cfi_endproc
 5903              	.LFE54:
 5905              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5906              		.align	1
 5907              		.global	xTaskGenericNotify
 5908              		.syntax unified
 5909              		.thumb
 5910              		.thumb_func
 5911              		.fpu fpv4-sp-d16
 5913              	xTaskGenericNotify:
 5914              	.LVL415:
 5915              	.LFB55:
4784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5916              		.loc 1 4784 2 is_stmt 1 view -0
 5917              		.cfi_startproc
 5918              		@ args = 0, pretend = 0, frame = 0
 5919              		@ frame_needed = 0, uses_anonymous_args = 0
4784:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5920              		.loc 1 4784 2 is_stmt 0 view .LVU1595
 5921 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5922              	.LCFI55:
 5923              		.cfi_def_cfa_offset 24
 5924              		.cfi_offset 3, -24
 5925              		.cfi_offset 4, -20
 5926              		.cfi_offset 5, -16
 5927              		.cfi_offset 6, -12
 5928              		.cfi_offset 7, -8
 5929              		.cfi_offset 14, -4
4785:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5930              		.loc 1 4785 2 is_stmt 1 view .LVU1596
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5931              		.loc 1 4786 2 view .LVU1597
 5932              	.LVL416:
4787:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5933              		.loc 1 4787 2 view .LVU1598
4789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5934              		.loc 1 4789 3 view .LVU1599
 5935 0002 A8B1     		cbz	r0, .L478
 5936 0004 0F46     		mov	r7, r1
 5937 0006 1446     		mov	r4, r2
 5938 0008 1D46     		mov	r5, r3
 5939 000a 0646     		mov	r6, r0
4789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5940              		.loc 1 4789 32 discriminator 2 view .LVU1600
4790:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5941              		.loc 1 4790 3 discriminator 2 view .LVU1601
 5942              	.LVL417:
4792:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5943              		.loc 1 4792 3 discriminator 2 view .LVU1602
 5944 000c FFF7FEFF 		bl	vPortEnterCritical
 5945              	.LVL418:
ARM GAS  /tmp/cc6UspJj.s 			page 227


4794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5946              		.loc 1 4794 4 discriminator 2 view .LVU1603
4794:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5947              		.loc 1 4794 6 is_stmt 0 discriminator 2 view .LVU1604
 5948 0010 0DB1     		cbz	r5, .L462
4796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5949              		.loc 1 4796 5 is_stmt 1 view .LVU1605
4796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5950              		.loc 1 4796 42 is_stmt 0 view .LVU1606
 5951 0012 336D     		ldr	r3, [r6, #80]
4796:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5952              		.loc 1 4796 35 view .LVU1607
 5953 0014 2B60     		str	r3, [r5]
 5954              	.L462:
4799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5955              		.loc 1 4799 4 is_stmt 1 view .LVU1608
4799:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5956              		.loc 1 4799 26 is_stmt 0 view .LVU1609
 5957 0016 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 5958 001a DBB2     		uxtb	r3, r3
 5959              	.LVL419:
4801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5960              		.loc 1 4801 4 is_stmt 1 view .LVU1610
4801:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5961              		.loc 1 4801 25 is_stmt 0 view .LVU1611
 5962 001c 0222     		movs	r2, #2
 5963 001e 86F85420 		strb	r2, [r6, #84]
4803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5964              		.loc 1 4803 4 is_stmt 1 view .LVU1612
 5965 0022 042C     		cmp	r4, #4
 5966 0024 1FD8     		bhi	.L463
 5967 0026 DFE804F0 		tbb	[pc, r4]
 5968              	.L465:
 5969 002a 2B       		.byte	(.L474-.L465)/2
 5970 002b 0C       		.byte	(.L468-.L465)/2
 5971 002c 11       		.byte	(.L467-.L465)/2
 5972 002d 16       		.byte	(.L466-.L465)/2
 5973 002e 19       		.byte	(.L464-.L465)/2
 5974              	.LVL420:
 5975 002f 00       		.p2align 1
 5976              	.L478:
4789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5977              		.loc 1 4789 3 view .LVU1613
 5978              	.LBB216:
 5979              	.LBI216:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5980              		.loc 2 191 30 view .LVU1614
 5981              	.LBB217:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5982              		.loc 2 193 1 view .LVU1615
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5983              		.loc 2 195 2 view .LVU1616
 5984              		.syntax unified
 5985              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5986 0030 4FF05003 			mov r3, #80												
 5987 0034 83F31188 		msr basepri, r3											
 5988 0038 BFF36F8F 		isb														
ARM GAS  /tmp/cc6UspJj.s 			page 228


 5989 003c BFF34F8F 		dsb														
 5990              	
 5991              	@ 0 "" 2
 5992              	.LVL421:
 5993              		.thumb
 5994              		.syntax unified
 5995              	.L461:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5996              		.loc 2 195 2 is_stmt 0 view .LVU1617
 5997              	.LBE217:
 5998              	.LBE216:
4789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5999              		.loc 1 4789 3 is_stmt 1 discriminator 1 view .LVU1618
4789:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 6000              		.loc 1 4789 3 discriminator 1 view .LVU1619
 6001 0040 FEE7     		b	.L461
 6002              	.LVL422:
 6003              	.L468:
4806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6004              		.loc 1 4806 6 view .LVU1620
4806:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6005              		.loc 1 4806 29 is_stmt 0 view .LVU1621
 6006 0042 326D     		ldr	r2, [r6, #80]
 6007 0044 3A43     		orrs	r2, r2, r7
 6008 0046 3265     		str	r2, [r6, #80]
4807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6009              		.loc 1 4807 6 is_stmt 1 view .LVU1622
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6010              		.loc 1 4786 13 is_stmt 0 view .LVU1623
 6011 0048 0124     		movs	r4, #1
4807:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6012              		.loc 1 4807 6 view .LVU1624
 6013 004a 1AE0     		b	.L469
 6014              	.L467:
4810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6015              		.loc 1 4810 6 is_stmt 1 view .LVU1625
4810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6016              		.loc 1 4810 13 is_stmt 0 view .LVU1626
 6017 004c 326D     		ldr	r2, [r6, #80]
4810:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6018              		.loc 1 4810 32 view .LVU1627
 6019 004e 0132     		adds	r2, r2, #1
 6020 0050 3265     		str	r2, [r6, #80]
4811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6021              		.loc 1 4811 6 is_stmt 1 view .LVU1628
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6022              		.loc 1 4786 13 is_stmt 0 view .LVU1629
 6023 0052 0124     		movs	r4, #1
4811:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6024              		.loc 1 4811 6 view .LVU1630
 6025 0054 15E0     		b	.L469
 6026              	.L466:
4814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6027              		.loc 1 4814 6 is_stmt 1 view .LVU1631
4814:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6028              		.loc 1 4814 29 is_stmt 0 view .LVU1632
 6029 0056 3765     		str	r7, [r6, #80]
ARM GAS  /tmp/cc6UspJj.s 			page 229


4815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6030              		.loc 1 4815 6 is_stmt 1 view .LVU1633
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6031              		.loc 1 4786 13 is_stmt 0 view .LVU1634
 6032 0058 0124     		movs	r4, #1
4815:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6033              		.loc 1 4815 6 view .LVU1635
 6034 005a 12E0     		b	.L469
 6035              	.L464:
4818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6036              		.loc 1 4818 6 is_stmt 1 view .LVU1636
4818:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6037              		.loc 1 4818 8 is_stmt 0 view .LVU1637
 6038 005c 022B     		cmp	r3, #2
 6039 005e 16D0     		beq	.L475
4820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6040              		.loc 1 4820 7 is_stmt 1 view .LVU1638
4820:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6041              		.loc 1 4820 30 is_stmt 0 view .LVU1639
 6042 0060 3765     		str	r7, [r6, #80]
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6043              		.loc 1 4786 13 view .LVU1640
 6044 0062 0124     		movs	r4, #1
 6045 0064 0DE0     		b	.L469
 6046              	.L463:
4838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6047              		.loc 1 4838 6 is_stmt 1 view .LVU1641
 6048 0066 326D     		ldr	r2, [r6, #80]
 6049 0068 B2F1FF3F 		cmp	r2, #-1
 6050 006c 11D0     		beq	.L476
4838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6051              		.loc 1 4838 6 view .LVU1642
 6052              	.LBB218:
 6053              	.LBI218:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6054              		.loc 2 191 30 view .LVU1643
 6055              	.LBB219:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6056              		.loc 2 193 1 view .LVU1644
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6057              		.loc 2 195 2 view .LVU1645
 6058              		.syntax unified
 6059              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6060 006e 4FF05003 			mov r3, #80												
 6061 0072 83F31188 		msr basepri, r3											
 6062 0076 BFF36F8F 		isb														
 6063 007a BFF34F8F 		dsb														
 6064              	
 6065              	@ 0 "" 2
 6066              	.LVL423:
 6067              		.thumb
 6068              		.syntax unified
 6069              	.L470:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6070              		.loc 2 195 2 is_stmt 0 view .LVU1646
 6071              	.LBE219:
 6072              	.LBE218:
ARM GAS  /tmp/cc6UspJj.s 			page 230


4838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6073              		.loc 1 4838 6 is_stmt 1 discriminator 2 view .LVU1647
4838:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6074              		.loc 1 4838 6 discriminator 2 view .LVU1648
 6075 007e FEE7     		b	.L470
 6076              	.LVL424:
 6077              	.L474:
4803:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6078              		.loc 1 4803 4 is_stmt 0 view .LVU1649
 6079 0080 0124     		movs	r4, #1
 6080              	.L469:
 6081              	.LVL425:
4843:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6082              		.loc 1 4843 22 is_stmt 1 view .LVU1650
4847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6083              		.loc 1 4847 4 view .LVU1651
4847:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6084              		.loc 1 4847 6 is_stmt 0 view .LVU1652
 6085 0082 012B     		cmp	r3, #1
 6086 0084 07D0     		beq	.L479
 6087              	.LVL426:
 6088              	.L471:
4884:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6089              		.loc 1 4884 29 is_stmt 1 view .LVU1653
4887:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6090              		.loc 1 4887 3 view .LVU1654
 6091 0086 FFF7FEFF 		bl	vPortExitCritical
 6092              	.LVL427:
4889:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6093              		.loc 1 4889 3 view .LVU1655
4890:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6094              		.loc 1 4890 2 is_stmt 0 view .LVU1656
 6095 008a 2046     		mov	r0, r4
 6096 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6097              	.LVL428:
 6098              	.L475:
4825:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6099              		.loc 1 4825 15 view .LVU1657
 6100 008e 0024     		movs	r4, #0
 6101 0090 F7E7     		b	.L469
 6102              	.L476:
4786:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6103              		.loc 1 4786 13 view .LVU1658
 6104 0092 0124     		movs	r4, #1
 6105 0094 F5E7     		b	.L469
 6106              	.LVL429:
 6107              	.L479:
4849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 6108              		.loc 1 4849 5 is_stmt 1 view .LVU1659
4849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 6109              		.loc 1 4849 14 is_stmt 0 view .LVU1660
 6110 0096 351D     		adds	r5, r6, #4
 6111              	.LVL430:
4849:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 6112              		.loc 1 4849 14 view .LVU1661
 6113 0098 2846     		mov	r0, r5
 6114 009a FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/cc6UspJj.s 			page 231


 6115              	.LVL431:
4850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6116              		.loc 1 4850 5 is_stmt 1 view .LVU1662
4850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6117              		.loc 1 4850 5 view .LVU1663
 6118 009e F06A     		ldr	r0, [r6, #44]
 6119 00a0 0123     		movs	r3, #1
 6120 00a2 8340     		lsls	r3, r3, r0
 6121 00a4 134A     		ldr	r2, .L480
 6122 00a6 1168     		ldr	r1, [r2]
 6123 00a8 0B43     		orrs	r3, r3, r1
 6124 00aa 1360     		str	r3, [r2]
4850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6125              		.loc 1 4850 5 view .LVU1664
 6126 00ac 00EB8000 		add	r0, r0, r0, lsl #2
 6127 00b0 2946     		mov	r1, r5
 6128 00b2 114B     		ldr	r3, .L480+4
 6129 00b4 03EB8000 		add	r0, r3, r0, lsl #2
 6130 00b8 FFF7FEFF 		bl	vListInsertEnd
 6131              	.LVL432:
4850:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6132              		.loc 1 4850 35 view .LVU1665
4853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6133              		.loc 1 4853 5 view .LVU1666
 6134 00bc B36A     		ldr	r3, [r6, #40]
 6135 00be 43B1     		cbz	r3, .L472
4853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6136              		.loc 1 4853 5 view .LVU1667
 6137              	.LBB220:
 6138              	.LBI220:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6139              		.loc 2 191 30 view .LVU1668
 6140              	.LBB221:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6141              		.loc 2 193 1 view .LVU1669
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6142              		.loc 2 195 2 view .LVU1670
 6143              		.syntax unified
 6144              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6145 00c0 4FF05003 			mov r3, #80												
 6146 00c4 83F31188 		msr basepri, r3											
 6147 00c8 BFF36F8F 		isb														
 6148 00cc BFF34F8F 		dsb														
 6149              	
 6150              	@ 0 "" 2
 6151              	.LVL433:
 6152              		.thumb
 6153              		.syntax unified
 6154              	.L473:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6155              		.loc 2 195 2 is_stmt 0 view .LVU1671
 6156              	.LBE221:
 6157              	.LBE220:
4853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6158              		.loc 1 4853 5 is_stmt 1 discriminator 3 view .LVU1672
4853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6159              		.loc 1 4853 5 discriminator 3 view .LVU1673
ARM GAS  /tmp/cc6UspJj.s 			page 232


 6160 00d0 FEE7     		b	.L473
 6161              	.L472:
4853:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6162              		.loc 1 4853 82 discriminator 2 view .LVU1674
4871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6163              		.loc 1 4871 5 discriminator 2 view .LVU1675
4871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6164              		.loc 1 4871 14 is_stmt 0 discriminator 2 view .LVU1676
 6165 00d2 F26A     		ldr	r2, [r6, #44]
4871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6166              		.loc 1 4871 41 discriminator 2 view .LVU1677
 6167 00d4 094B     		ldr	r3, .L480+8
 6168 00d6 1B68     		ldr	r3, [r3]
 6169 00d8 DB6A     		ldr	r3, [r3, #44]
4871:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6170              		.loc 1 4871 7 discriminator 2 view .LVU1678
 6171 00da 9A42     		cmp	r2, r3
 6172 00dc D3D9     		bls	.L471
4875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6173              		.loc 1 4875 6 is_stmt 1 view .LVU1679
 6174 00de 4FF0E023 		mov	r3, #-536813568
 6175 00e2 4FF08052 		mov	r2, #268435456
 6176 00e6 C3F8042D 		str	r2, [r3, #3332]
4875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6177              		.loc 1 4875 6 view .LVU1680
 6178              		.syntax unified
 6179              	@ 4875 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6180 00ea BFF34F8F 		dsb
 6181              	@ 0 "" 2
4875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6182              		.loc 1 4875 6 view .LVU1681
 6183              	@ 4875 "../Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6184 00ee BFF36F8F 		isb
 6185              	@ 0 "" 2
4875:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6186              		.loc 1 4875 37 view .LVU1682
 6187              		.thumb
 6188              		.syntax unified
 6189 00f2 C8E7     		b	.L471
 6190              	.L481:
 6191              		.align	2
 6192              	.L480:
 6193 00f4 00000000 		.word	.LANCHOR13
 6194 00f8 00000000 		.word	.LANCHOR4
 6195 00fc 00000000 		.word	.LANCHOR10
 6196              		.cfi_endproc
 6197              	.LFE55:
 6199              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 6200              		.align	1
 6201              		.global	xTaskGenericNotifyFromISR
 6202              		.syntax unified
 6203              		.thumb
 6204              		.thumb_func
 6205              		.fpu fpv4-sp-d16
 6207              	xTaskGenericNotifyFromISR:
 6208              	.LVL434:
 6209              	.LFB56:
ARM GAS  /tmp/cc6UspJj.s 			page 233


4898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6210              		.loc 1 4898 2 view -0
 6211              		.cfi_startproc
 6212              		@ args = 4, pretend = 0, frame = 0
 6213              		@ frame_needed = 0, uses_anonymous_args = 0
4899:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6214              		.loc 1 4899 2 view .LVU1684
4900:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 6215              		.loc 1 4900 2 view .LVU1685
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6216              		.loc 1 4901 2 view .LVU1686
4902:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6217              		.loc 1 4902 2 view .LVU1687
4904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6218              		.loc 1 4904 3 view .LVU1688
 6219 0000 10B3     		cbz	r0, .L505
4898:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6220              		.loc 1 4898 2 is_stmt 0 discriminator 2 view .LVU1689
 6221 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6222              	.LCFI56:
 6223              		.cfi_def_cfa_offset 24
 6224              		.cfi_offset 4, -24
 6225              		.cfi_offset 5, -20
 6226              		.cfi_offset 6, -16
 6227              		.cfi_offset 7, -12
 6228              		.cfi_offset 8, -8
 6229              		.cfi_offset 14, -4
 6230 0006 0E46     		mov	r6, r1
 6231 0008 1446     		mov	r4, r2
 6232 000a 1D46     		mov	r5, r3
 6233 000c 0746     		mov	r7, r0
4904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6234              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1690
4922:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6235              		.loc 1 4922 3 discriminator 2 view .LVU1691
 6236 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 6237              	.LVL435:
4924:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6238              		.loc 1 4924 3 discriminator 2 view .LVU1692
4926:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6239              		.loc 1 4926 3 discriminator 2 view .LVU1693
 6240              	.LBB222:
 6241              	.LBI222:
 207:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6242              		.loc 2 207 34 discriminator 2 view .LVU1694
 6243              	.LBB223:
 209:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6244              		.loc 2 209 1 discriminator 2 view .LVU1695
 211:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6245              		.loc 2 211 2 discriminator 2 view .LVU1696
 6246              		.syntax unified
 6247              	@ 211 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6248 0012 EFF31183 			mrs r3, basepri											
 6249 0016 4FF05002 		mov r2, #80												
 6250 001a 82F31188 		msr basepri, r2											
 6251 001e BFF36F8F 		isb														
 6252 0022 BFF34F8F 		dsb														
ARM GAS  /tmp/cc6UspJj.s 			page 234


 6253              	
 6254              	@ 0 "" 2
 6255              		.thumb
 6256              		.syntax unified
 6257 0026 9846     		mov	r8, r3
 6258              	.LVL436:
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6259              		.loc 2 223 2 discriminator 2 view .LVU1697
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6260              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1698
 6261              	.LBE223:
 6262              	.LBE222:
4928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6263              		.loc 1 4928 4 is_stmt 1 discriminator 2 view .LVU1699
4928:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6264              		.loc 1 4928 6 is_stmt 0 discriminator 2 view .LVU1700
 6265 0028 0DB1     		cbz	r5, .L485
4930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6266              		.loc 1 4930 5 is_stmt 1 view .LVU1701
4930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6267              		.loc 1 4930 42 is_stmt 0 view .LVU1702
 6268 002a 3B6D     		ldr	r3, [r7, #80]
 6269              	.LVL437:
4930:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6270              		.loc 1 4930 35 view .LVU1703
 6271 002c 2B60     		str	r3, [r5]
 6272              	.L485:
4933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6273              		.loc 1 4933 4 is_stmt 1 view .LVU1704
4933:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6274              		.loc 1 4933 26 is_stmt 0 view .LVU1705
 6275 002e 97F85430 		ldrb	r3, [r7, #84]	@ zero_extendqisi2
 6276 0032 DBB2     		uxtb	r3, r3
 6277              	.LVL438:
4934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6278              		.loc 1 4934 4 is_stmt 1 view .LVU1706
4934:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6279              		.loc 1 4934 25 is_stmt 0 view .LVU1707
 6280 0034 0222     		movs	r2, #2
 6281 0036 87F85420 		strb	r2, [r7, #84]
4936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6282              		.loc 1 4936 4 is_stmt 1 view .LVU1708
 6283 003a 042C     		cmp	r4, #4
 6284 003c 1FD8     		bhi	.L486
 6285 003e DFE804F0 		tbb	[pc, r4]
 6286              	.L488:
 6287 0042 2B       		.byte	(.L500-.L488)/2
 6288 0043 0C       		.byte	(.L491-.L488)/2
 6289 0044 11       		.byte	(.L490-.L488)/2
 6290 0045 16       		.byte	(.L489-.L488)/2
 6291 0046 19       		.byte	(.L487-.L488)/2
 6292              	.LVL439:
 6293 0047 00       		.p2align 1
 6294              	.L505:
 6295              	.LCFI57:
 6296              		.cfi_def_cfa_offset 0
 6297              		.cfi_restore 4
ARM GAS  /tmp/cc6UspJj.s 			page 235


 6298              		.cfi_restore 5
 6299              		.cfi_restore 6
 6300              		.cfi_restore 7
 6301              		.cfi_restore 8
 6302              		.cfi_restore 14
4904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6303              		.loc 1 4904 3 view .LVU1709
 6304              	.LBB224:
 6305              	.LBI224:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6306              		.loc 2 191 30 view .LVU1710
 6307              	.LBB225:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6308              		.loc 2 193 1 view .LVU1711
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6309              		.loc 2 195 2 view .LVU1712
 6310              		.syntax unified
 6311              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6312 0048 4FF05003 			mov r3, #80												
 6313 004c 83F31188 		msr basepri, r3											
 6314 0050 BFF36F8F 		isb														
 6315 0054 BFF34F8F 		dsb														
 6316              	
 6317              	@ 0 "" 2
 6318              	.LVL440:
 6319              		.thumb
 6320              		.syntax unified
 6321              	.L484:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6322              		.loc 2 195 2 is_stmt 0 view .LVU1713
 6323              	.LBE225:
 6324              	.LBE224:
4904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6325              		.loc 1 4904 3 is_stmt 1 discriminator 1 view .LVU1714
4904:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6326              		.loc 1 4904 3 discriminator 1 view .LVU1715
 6327 0058 FEE7     		b	.L484
 6328              	.LVL441:
 6329              	.L491:
 6330              	.LCFI58:
 6331              		.cfi_def_cfa_offset 24
 6332              		.cfi_offset 4, -24
 6333              		.cfi_offset 5, -20
 6334              		.cfi_offset 6, -16
 6335              		.cfi_offset 7, -12
 6336              		.cfi_offset 8, -8
 6337              		.cfi_offset 14, -4
4939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6338              		.loc 1 4939 6 view .LVU1716
4939:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6339              		.loc 1 4939 29 is_stmt 0 view .LVU1717
 6340 005a 3A6D     		ldr	r2, [r7, #80]
 6341 005c 3243     		orrs	r2, r2, r6
 6342 005e 3A65     		str	r2, [r7, #80]
4940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6343              		.loc 1 4940 6 is_stmt 1 view .LVU1718
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
ARM GAS  /tmp/cc6UspJj.s 			page 236


 6344              		.loc 1 4901 13 is_stmt 0 view .LVU1719
 6345 0060 0124     		movs	r4, #1
4940:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6346              		.loc 1 4940 6 view .LVU1720
 6347 0062 1AE0     		b	.L492
 6348              	.L490:
4943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6349              		.loc 1 4943 6 is_stmt 1 view .LVU1721
4943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6350              		.loc 1 4943 13 is_stmt 0 view .LVU1722
 6351 0064 3A6D     		ldr	r2, [r7, #80]
4943:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6352              		.loc 1 4943 32 view .LVU1723
 6353 0066 0132     		adds	r2, r2, #1
 6354 0068 3A65     		str	r2, [r7, #80]
4944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6355              		.loc 1 4944 6 is_stmt 1 view .LVU1724
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6356              		.loc 1 4901 13 is_stmt 0 view .LVU1725
 6357 006a 0124     		movs	r4, #1
4944:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6358              		.loc 1 4944 6 view .LVU1726
 6359 006c 15E0     		b	.L492
 6360              	.L489:
4947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6361              		.loc 1 4947 6 is_stmt 1 view .LVU1727
4947:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6362              		.loc 1 4947 29 is_stmt 0 view .LVU1728
 6363 006e 3E65     		str	r6, [r7, #80]
4948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6364              		.loc 1 4948 6 is_stmt 1 view .LVU1729
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6365              		.loc 1 4901 13 is_stmt 0 view .LVU1730
 6366 0070 0124     		movs	r4, #1
4948:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6367              		.loc 1 4948 6 view .LVU1731
 6368 0072 12E0     		b	.L492
 6369              	.L487:
4951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6370              		.loc 1 4951 6 is_stmt 1 view .LVU1732
4951:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6371              		.loc 1 4951 8 is_stmt 0 view .LVU1733
 6372 0074 022B     		cmp	r3, #2
 6373 0076 17D0     		beq	.L501
4953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6374              		.loc 1 4953 7 is_stmt 1 view .LVU1734
4953:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6375              		.loc 1 4953 30 is_stmt 0 view .LVU1735
 6376 0078 3E65     		str	r6, [r7, #80]
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6377              		.loc 1 4901 13 view .LVU1736
 6378 007a 0124     		movs	r4, #1
 6379 007c 0DE0     		b	.L492
 6380              	.L486:
4971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6381              		.loc 1 4971 6 is_stmt 1 view .LVU1737
 6382 007e 3A6D     		ldr	r2, [r7, #80]
ARM GAS  /tmp/cc6UspJj.s 			page 237


 6383 0080 B2F1FF3F 		cmp	r2, #-1
 6384 0084 12D0     		beq	.L502
4971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6385              		.loc 1 4971 6 view .LVU1738
 6386              	.LBB226:
 6387              	.LBI226:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6388              		.loc 2 191 30 view .LVU1739
 6389              	.LBB227:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6390              		.loc 2 193 1 view .LVU1740
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6391              		.loc 2 195 2 view .LVU1741
 6392              		.syntax unified
 6393              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6394 0086 4FF05003 			mov r3, #80												
 6395 008a 83F31188 		msr basepri, r3											
 6396 008e BFF36F8F 		isb														
 6397 0092 BFF34F8F 		dsb														
 6398              	
 6399              	@ 0 "" 2
 6400              	.LVL442:
 6401              		.thumb
 6402              		.syntax unified
 6403              	.L493:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6404              		.loc 2 195 2 is_stmt 0 view .LVU1742
 6405              	.LBE227:
 6406              	.LBE226:
4971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6407              		.loc 1 4971 6 is_stmt 1 discriminator 2 view .LVU1743
4971:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6408              		.loc 1 4971 6 discriminator 2 view .LVU1744
 6409 0096 FEE7     		b	.L493
 6410              	.LVL443:
 6411              	.L500:
4936:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6412              		.loc 1 4936 4 is_stmt 0 view .LVU1745
 6413 0098 0124     		movs	r4, #1
 6414              	.L492:
 6415              	.LVL444:
4975:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6416              		.loc 1 4975 31 is_stmt 1 view .LVU1746
4979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6417              		.loc 1 4979 4 view .LVU1747
4979:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6418              		.loc 1 4979 6 is_stmt 0 view .LVU1748
 6419 009a 012B     		cmp	r3, #1
 6420 009c 08D0     		beq	.L506
 6421              	.LVL445:
 6422              	.L494:
5012:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6423              		.loc 1 5012 30 is_stmt 1 view .LVU1749
5016:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6424              		.loc 1 5016 3 view .LVU1750
 6425              	.LBB228:
 6426              	.LBI228:
ARM GAS  /tmp/cc6UspJj.s 			page 238


 227:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6427              		.loc 2 227 30 view .LVU1751
 6428              	.LBB229:
 6429              		.loc 2 229 2 view .LVU1752
 6430              		.syntax unified
 6431              	@ 229 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6432 009e 88F31188 			msr basepri, r8	
 6433              	@ 0 "" 2
 6434              		.thumb
 6435              		.syntax unified
 6436              	.LBE229:
 6437              	.LBE228:
5018:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6438              		.loc 1 5018 3 view .LVU1753
5019:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6439              		.loc 1 5019 2 is_stmt 0 view .LVU1754
 6440 00a2 2046     		mov	r0, r4
 6441 00a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6442              	.LVL446:
 6443              	.L501:
4958:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6444              		.loc 1 4958 15 view .LVU1755
 6445 00a8 0024     		movs	r4, #0
 6446 00aa F6E7     		b	.L492
 6447              	.L502:
4901:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6448              		.loc 1 4901 13 view .LVU1756
 6449 00ac 0124     		movs	r4, #1
 6450 00ae F4E7     		b	.L492
 6451              	.LVL447:
 6452              	.L506:
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6453              		.loc 1 4982 5 is_stmt 1 view .LVU1757
 6454 00b0 BB6A     		ldr	r3, [r7, #40]
 6455              	.LVL448:
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6456              		.loc 1 4982 5 is_stmt 0 view .LVU1758
 6457 00b2 43B1     		cbz	r3, .L495
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6458              		.loc 1 4982 5 is_stmt 1 view .LVU1759
 6459              	.LBB230:
 6460              	.LBI230:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6461              		.loc 2 191 30 view .LVU1760
 6462              	.LBB231:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6463              		.loc 2 193 1 view .LVU1761
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6464              		.loc 2 195 2 view .LVU1762
 6465              		.syntax unified
 6466              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6467 00b4 4FF05003 			mov r3, #80												
 6468 00b8 83F31188 		msr basepri, r3											
 6469 00bc BFF36F8F 		isb														
 6470 00c0 BFF34F8F 		dsb														
 6471              	
 6472              	@ 0 "" 2
ARM GAS  /tmp/cc6UspJj.s 			page 239


 6473              	.LVL449:
 6474              		.thumb
 6475              		.syntax unified
 6476              	.L496:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6477              		.loc 2 195 2 is_stmt 0 view .LVU1763
 6478              	.LBE231:
 6479              	.LBE230:
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6480              		.loc 1 4982 5 is_stmt 1 discriminator 3 view .LVU1764
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6481              		.loc 1 4982 5 discriminator 3 view .LVU1765
 6482 00c4 FEE7     		b	.L496
 6483              	.L495:
4982:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6484              		.loc 1 4982 82 discriminator 2 view .LVU1766
4984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6485              		.loc 1 4984 5 discriminator 2 view .LVU1767
4984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6486              		.loc 1 4984 30 is_stmt 0 discriminator 2 view .LVU1768
 6487 00c6 154B     		ldr	r3, .L507
 6488 00c8 1B68     		ldr	r3, [r3]
4984:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6489              		.loc 1 4984 7 discriminator 2 view .LVU1769
 6490 00ca 0BBB     		cbnz	r3, .L497
4986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6491              		.loc 1 4986 6 is_stmt 1 view .LVU1770
4986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6492              		.loc 1 4986 15 is_stmt 0 view .LVU1771
 6493 00cc 3D1D     		adds	r5, r7, #4
 6494              	.LVL450:
4986:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6495              		.loc 1 4986 15 view .LVU1772
 6496 00ce 2846     		mov	r0, r5
 6497 00d0 FFF7FEFF 		bl	uxListRemove
 6498              	.LVL451:
4987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6499              		.loc 1 4987 6 is_stmt 1 view .LVU1773
4987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6500              		.loc 1 4987 6 view .LVU1774
 6501 00d4 F86A     		ldr	r0, [r7, #44]
 6502 00d6 0123     		movs	r3, #1
 6503 00d8 8340     		lsls	r3, r3, r0
 6504 00da 114A     		ldr	r2, .L507+4
 6505 00dc 1168     		ldr	r1, [r2]
 6506 00de 0B43     		orrs	r3, r3, r1
 6507 00e0 1360     		str	r3, [r2]
4987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6508              		.loc 1 4987 6 view .LVU1775
 6509 00e2 00EB8000 		add	r0, r0, r0, lsl #2
 6510 00e6 2946     		mov	r1, r5
 6511 00e8 0E4B     		ldr	r3, .L507+8
 6512 00ea 03EB8000 		add	r0, r3, r0, lsl #2
 6513 00ee FFF7FEFF 		bl	vListInsertEnd
 6514              	.LVL452:
4987:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6515              		.loc 1 4987 36 view .LVU1776
ARM GAS  /tmp/cc6UspJj.s 			page 240


 6516              	.L498:
4996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6517              		.loc 1 4996 5 view .LVU1777
4996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6518              		.loc 1 4996 14 is_stmt 0 view .LVU1778
 6519 00f2 FA6A     		ldr	r2, [r7, #44]
4996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6520              		.loc 1 4996 41 view .LVU1779
 6521 00f4 0C4B     		ldr	r3, .L507+12
 6522 00f6 1B68     		ldr	r3, [r3]
 6523 00f8 DB6A     		ldr	r3, [r3, #44]
4996:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6524              		.loc 1 4996 7 view .LVU1780
 6525 00fa 9A42     		cmp	r2, r3
 6526 00fc CFD9     		bls	.L494
5000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6527              		.loc 1 5000 6 is_stmt 1 view .LVU1781
5000:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6528              		.loc 1 5000 8 is_stmt 0 view .LVU1782
 6529 00fe 069B     		ldr	r3, [sp, #24]
 6530 0100 13B1     		cbz	r3, .L499
5002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6531              		.loc 1 5002 7 is_stmt 1 view .LVU1783
5002:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6532              		.loc 1 5002 34 is_stmt 0 view .LVU1784
 6533 0102 0123     		movs	r3, #1
 6534 0104 069A     		ldr	r2, [sp, #24]
 6535 0106 1360     		str	r3, [r2]
 6536              	.L499:
5008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6537              		.loc 1 5008 6 is_stmt 1 view .LVU1785
5008:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6538              		.loc 1 5008 20 is_stmt 0 view .LVU1786
 6539 0108 084B     		ldr	r3, .L507+16
 6540 010a 0122     		movs	r2, #1
 6541 010c 1A60     		str	r2, [r3]
 6542 010e C6E7     		b	.L494
 6543              	.LVL453:
 6544              	.L497:
4993:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6545              		.loc 1 4993 6 is_stmt 1 view .LVU1787
 6546 0110 07F11801 		add	r1, r7, #24
 6547 0114 0648     		ldr	r0, .L507+20
 6548 0116 FFF7FEFF 		bl	vListInsertEnd
 6549              	.LVL454:
 6550 011a EAE7     		b	.L498
 6551              	.L508:
 6552              		.align	2
 6553              	.L507:
 6554 011c 00000000 		.word	.LANCHOR16
 6555 0120 00000000 		.word	.LANCHOR13
 6556 0124 00000000 		.word	.LANCHOR4
 6557 0128 00000000 		.word	.LANCHOR10
 6558 012c 00000000 		.word	.LANCHOR19
 6559 0130 00000000 		.word	.LANCHOR1
 6560              		.cfi_endproc
 6561              	.LFE56:
ARM GAS  /tmp/cc6UspJj.s 			page 241


 6563              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6564              		.align	1
 6565              		.global	vTaskNotifyGiveFromISR
 6566              		.syntax unified
 6567              		.thumb
 6568              		.thumb_func
 6569              		.fpu fpv4-sp-d16
 6571              	vTaskNotifyGiveFromISR:
 6572              	.LVL455:
 6573              	.LFB57:
5027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6574              		.loc 1 5027 2 view -0
 6575              		.cfi_startproc
 6576              		@ args = 0, pretend = 0, frame = 0
 6577              		@ frame_needed = 0, uses_anonymous_args = 0
5027:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6578              		.loc 1 5027 2 is_stmt 0 view .LVU1789
 6579 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6580              	.LCFI59:
 6581              		.cfi_def_cfa_offset 24
 6582              		.cfi_offset 3, -24
 6583              		.cfi_offset 4, -20
 6584              		.cfi_offset 5, -16
 6585              		.cfi_offset 6, -12
 6586              		.cfi_offset 7, -8
 6587              		.cfi_offset 14, -4
5028:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6588              		.loc 1 5028 2 is_stmt 1 view .LVU1790
5029:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6589              		.loc 1 5029 2 view .LVU1791
5030:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6590              		.loc 1 5030 2 view .LVU1792
5032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6591              		.loc 1 5032 3 view .LVU1793
 6592 0002 E0B1     		cbz	r0, .L519
 6593 0004 0D46     		mov	r5, r1
 6594 0006 0446     		mov	r4, r0
5032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6595              		.loc 1 5032 32 discriminator 2 view .LVU1794
5050:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6596              		.loc 1 5050 3 discriminator 2 view .LVU1795
 6597 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6598              	.LVL456:
5052:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6599              		.loc 1 5052 3 discriminator 2 view .LVU1796
5054:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6600              		.loc 1 5054 3 discriminator 2 view .LVU1797
 6601              	.LBB232:
 6602              	.LBI232:
 207:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6603              		.loc 2 207 34 discriminator 2 view .LVU1798
 6604              	.LBB233:
 209:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6605              		.loc 2 209 1 discriminator 2 view .LVU1799
 211:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6606              		.loc 2 211 2 discriminator 2 view .LVU1800
 6607              		.syntax unified
ARM GAS  /tmp/cc6UspJj.s 			page 242


 6608              	@ 211 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6609 000c EFF31183 			mrs r3, basepri											
 6610 0010 4FF05002 		mov r2, #80												
 6611 0014 82F31188 		msr basepri, r2											
 6612 0018 BFF36F8F 		isb														
 6613 001c BFF34F8F 		dsb														
 6614              	
 6615              	@ 0 "" 2
 6616              		.thumb
 6617              		.syntax unified
 6618 0020 1E46     		mov	r6, r3
 6619              	.LVL457:
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6620              		.loc 2 223 2 discriminator 2 view .LVU1801
 223:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6621              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1802
 6622              	.LBE233:
 6623              	.LBE232:
5056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6624              		.loc 1 5056 4 is_stmt 1 discriminator 2 view .LVU1803
5056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6625              		.loc 1 5056 26 is_stmt 0 discriminator 2 view .LVU1804
 6626 0022 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 6627              	.LVL458:
5056:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6628              		.loc 1 5056 26 discriminator 2 view .LVU1805
 6629 0026 DBB2     		uxtb	r3, r3
 6630              	.LVL459:
5057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6631              		.loc 1 5057 4 is_stmt 1 discriminator 2 view .LVU1806
5057:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6632              		.loc 1 5057 25 is_stmt 0 discriminator 2 view .LVU1807
 6633 0028 0222     		movs	r2, #2
 6634 002a 84F85420 		strb	r2, [r4, #84]
5061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6635              		.loc 1 5061 4 is_stmt 1 discriminator 2 view .LVU1808
5061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6636              		.loc 1 5061 11 is_stmt 0 discriminator 2 view .LVU1809
 6637 002e 226D     		ldr	r2, [r4, #80]
5061:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6638              		.loc 1 5061 30 discriminator 2 view .LVU1810
 6639 0030 0132     		adds	r2, r2, #1
 6640 0032 2265     		str	r2, [r4, #80]
5063:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6641              		.loc 1 5063 36 is_stmt 1 discriminator 2 view .LVU1811
5067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6642              		.loc 1 5067 4 discriminator 2 view .LVU1812
5067:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6643              		.loc 1 5067 6 is_stmt 0 discriminator 2 view .LVU1813
 6644 0034 012B     		cmp	r3, #1
 6645 0036 0BD0     		beq	.L520
 6646              	.LVL460:
 6647              	.L512:
5100:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6648              		.loc 1 5100 30 is_stmt 1 view .LVU1814
5104:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6649              		.loc 1 5104 3 view .LVU1815
ARM GAS  /tmp/cc6UspJj.s 			page 243


 6650              	.LBB234:
 6651              	.LBI234:
 227:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6652              		.loc 2 227 30 view .LVU1816
 6653              	.LBB235:
 6654              		.loc 2 229 2 view .LVU1817
 6655              		.syntax unified
 6656              	@ 229 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6657 0038 86F31188 			msr basepri, r6	
 6658              	@ 0 "" 2
 6659              		.thumb
 6660              		.syntax unified
 6661              	.LBE235:
 6662              	.LBE234:
5105:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6663              		.loc 1 5105 2 is_stmt 0 view .LVU1818
 6664 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6665              	.LVL461:
 6666              	.L519:
5032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6667              		.loc 1 5032 3 is_stmt 1 view .LVU1819
 6668              	.LBB236:
 6669              	.LBI236:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6670              		.loc 2 191 30 view .LVU1820
 6671              	.LBB237:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6672              		.loc 2 193 1 view .LVU1821
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6673              		.loc 2 195 2 view .LVU1822
 6674              		.syntax unified
 6675              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6676 003e 4FF05003 			mov r3, #80												
 6677 0042 83F31188 		msr basepri, r3											
 6678 0046 BFF36F8F 		isb														
 6679 004a BFF34F8F 		dsb														
 6680              	
 6681              	@ 0 "" 2
 6682              	.LVL462:
 6683              		.thumb
 6684              		.syntax unified
 6685              	.L511:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6686              		.loc 2 195 2 is_stmt 0 view .LVU1823
 6687              	.LBE237:
 6688              	.LBE236:
5032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6689              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1824
5032:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6690              		.loc 1 5032 3 discriminator 1 view .LVU1825
 6691 004e FEE7     		b	.L511
 6692              	.LVL463:
 6693              	.L520:
5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6694              		.loc 1 5070 5 view .LVU1826
 6695 0050 A36A     		ldr	r3, [r4, #40]
 6696              	.LVL464:
ARM GAS  /tmp/cc6UspJj.s 			page 244


5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6697              		.loc 1 5070 5 is_stmt 0 view .LVU1827
 6698 0052 43B1     		cbz	r3, .L513
5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6699              		.loc 1 5070 5 is_stmt 1 view .LVU1828
 6700              	.LBB238:
 6701              	.LBI238:
 191:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6702              		.loc 2 191 30 view .LVU1829
 6703              	.LBB239:
 193:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6704              		.loc 2 193 1 view .LVU1830
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6705              		.loc 2 195 2 view .LVU1831
 6706              		.syntax unified
 6707              	@ 195 "../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6708 0054 4FF05003 			mov r3, #80												
 6709 0058 83F31188 		msr basepri, r3											
 6710 005c BFF36F8F 		isb														
 6711 0060 BFF34F8F 		dsb														
 6712              	
 6713              	@ 0 "" 2
 6714              	.LVL465:
 6715              		.thumb
 6716              		.syntax unified
 6717              	.L514:
 195:../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6718              		.loc 2 195 2 is_stmt 0 view .LVU1832
 6719              	.LBE239:
 6720              	.LBE238:
5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6721              		.loc 1 5070 5 is_stmt 1 discriminator 2 view .LVU1833
5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6722              		.loc 1 5070 5 discriminator 2 view .LVU1834
 6723 0064 FEE7     		b	.L514
 6724              	.L513:
5070:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6725              		.loc 1 5070 82 discriminator 2 view .LVU1835
5072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6726              		.loc 1 5072 5 discriminator 2 view .LVU1836
5072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6727              		.loc 1 5072 30 is_stmt 0 discriminator 2 view .LVU1837
 6728 0066 144B     		ldr	r3, .L521
 6729 0068 1B68     		ldr	r3, [r3]
5072:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6730              		.loc 1 5072 7 discriminator 2 view .LVU1838
 6731 006a FBB9     		cbnz	r3, .L515
5074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6732              		.loc 1 5074 6 is_stmt 1 view .LVU1839
5074:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6733              		.loc 1 5074 15 is_stmt 0 view .LVU1840
 6734 006c 271D     		adds	r7, r4, #4
 6735 006e 3846     		mov	r0, r7
 6736 0070 FFF7FEFF 		bl	uxListRemove
 6737              	.LVL466:
5075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6738              		.loc 1 5075 6 is_stmt 1 view .LVU1841
ARM GAS  /tmp/cc6UspJj.s 			page 245


5075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6739              		.loc 1 5075 6 view .LVU1842
 6740 0074 E06A     		ldr	r0, [r4, #44]
 6741 0076 0123     		movs	r3, #1
 6742 0078 8340     		lsls	r3, r3, r0
 6743 007a 104A     		ldr	r2, .L521+4
 6744 007c 1168     		ldr	r1, [r2]
 6745 007e 0B43     		orrs	r3, r3, r1
 6746 0080 1360     		str	r3, [r2]
5075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6747              		.loc 1 5075 6 view .LVU1843
 6748 0082 00EB8000 		add	r0, r0, r0, lsl #2
 6749 0086 3946     		mov	r1, r7
 6750 0088 0D4B     		ldr	r3, .L521+8
 6751 008a 03EB8000 		add	r0, r3, r0, lsl #2
 6752 008e FFF7FEFF 		bl	vListInsertEnd
 6753              	.LVL467:
5075:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6754              		.loc 1 5075 36 view .LVU1844
 6755              	.L516:
5084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6756              		.loc 1 5084 5 view .LVU1845
5084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6757              		.loc 1 5084 14 is_stmt 0 view .LVU1846
 6758 0092 E26A     		ldr	r2, [r4, #44]
5084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6759              		.loc 1 5084 41 view .LVU1847
 6760 0094 0B4B     		ldr	r3, .L521+12
 6761 0096 1B68     		ldr	r3, [r3]
 6762 0098 DB6A     		ldr	r3, [r3, #44]
5084:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6763              		.loc 1 5084 7 view .LVU1848
 6764 009a 9A42     		cmp	r2, r3
 6765 009c CCD9     		bls	.L512
5088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6766              		.loc 1 5088 6 is_stmt 1 view .LVU1849
5088:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6767              		.loc 1 5088 8 is_stmt 0 view .LVU1850
 6768 009e 0DB1     		cbz	r5, .L517
5090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6769              		.loc 1 5090 7 is_stmt 1 view .LVU1851
5090:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6770              		.loc 1 5090 34 is_stmt 0 view .LVU1852
 6771 00a0 0123     		movs	r3, #1
 6772 00a2 2B60     		str	r3, [r5]
 6773              	.L517:
5096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6774              		.loc 1 5096 6 is_stmt 1 view .LVU1853
5096:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6775              		.loc 1 5096 20 is_stmt 0 view .LVU1854
 6776 00a4 084B     		ldr	r3, .L521+16
 6777 00a6 0122     		movs	r2, #1
 6778 00a8 1A60     		str	r2, [r3]
 6779 00aa C5E7     		b	.L512
 6780              	.L515:
5081:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6781              		.loc 1 5081 6 is_stmt 1 view .LVU1855
ARM GAS  /tmp/cc6UspJj.s 			page 246


 6782 00ac 04F11801 		add	r1, r4, #24
 6783 00b0 0648     		ldr	r0, .L521+20
 6784 00b2 FFF7FEFF 		bl	vListInsertEnd
 6785              	.LVL468:
 6786 00b6 ECE7     		b	.L516
 6787              	.L522:
 6788              		.align	2
 6789              	.L521:
 6790 00b8 00000000 		.word	.LANCHOR16
 6791 00bc 00000000 		.word	.LANCHOR13
 6792 00c0 00000000 		.word	.LANCHOR4
 6793 00c4 00000000 		.word	.LANCHOR10
 6794 00c8 00000000 		.word	.LANCHOR19
 6795 00cc 00000000 		.word	.LANCHOR1
 6796              		.cfi_endproc
 6797              	.LFE57:
 6799              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6800              		.align	1
 6801              		.global	xTaskNotifyStateClear
 6802              		.syntax unified
 6803              		.thumb
 6804              		.thumb_func
 6805              		.fpu fpv4-sp-d16
 6807              	xTaskNotifyStateClear:
 6808              	.LVL469:
 6809              	.LFB58:
5113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6810              		.loc 1 5113 2 view -0
 6811              		.cfi_startproc
 6812              		@ args = 0, pretend = 0, frame = 0
 6813              		@ frame_needed = 0, uses_anonymous_args = 0
5113:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6814              		.loc 1 5113 2 is_stmt 0 view .LVU1857
 6815 0000 10B5     		push	{r4, lr}
 6816              	.LCFI60:
 6817              		.cfi_def_cfa_offset 8
 6818              		.cfi_offset 4, -8
 6819              		.cfi_offset 14, -4
5114:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6820              		.loc 1 5114 2 is_stmt 1 view .LVU1858
5115:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6821              		.loc 1 5115 2 view .LVU1859
5119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6822              		.loc 1 5119 3 view .LVU1860
5119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6823              		.loc 1 5119 11 is_stmt 0 view .LVU1861
 6824 0002 0446     		mov	r4, r0
 6825 0004 58B1     		cbz	r0, .L528
 6826              	.LVL470:
 6827              	.L524:
5121:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6828              		.loc 1 5121 3 is_stmt 1 discriminator 4 view .LVU1862
 6829 0006 FFF7FEFF 		bl	vPortEnterCritical
 6830              	.LVL471:
5123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6831              		.loc 1 5123 4 discriminator 4 view .LVU1863
5123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc6UspJj.s 			page 247


 6832              		.loc 1 5123 13 is_stmt 0 discriminator 4 view .LVU1864
 6833 000a 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 6834 000e DBB2     		uxtb	r3, r3
5123:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6835              		.loc 1 5123 6 discriminator 4 view .LVU1865
 6836 0010 022B     		cmp	r3, #2
 6837 0012 07D0     		beq	.L529
5130:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6838              		.loc 1 5130 13 view .LVU1866
 6839 0014 0024     		movs	r4, #0
 6840              	.LVL472:
 6841              	.L525:
5133:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6842              		.loc 1 5133 3 is_stmt 1 view .LVU1867
 6843 0016 FFF7FEFF 		bl	vPortExitCritical
 6844              	.LVL473:
5135:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6845              		.loc 1 5135 3 view .LVU1868
5136:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6846              		.loc 1 5136 2 is_stmt 0 view .LVU1869
 6847 001a 2046     		mov	r0, r4
 6848 001c 10BD     		pop	{r4, pc}
 6849              	.LVL474:
 6850              	.L528:
5119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6851              		.loc 1 5119 11 discriminator 1 view .LVU1870
 6852 001e 044B     		ldr	r3, .L530
 6853 0020 1C68     		ldr	r4, [r3]
 6854              	.LVL475:
5119:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6855              		.loc 1 5119 11 discriminator 1 view .LVU1871
 6856 0022 F0E7     		b	.L524
 6857              	.LVL476:
 6858              	.L529:
5125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6859              		.loc 1 5125 5 is_stmt 1 view .LVU1872
5125:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6860              		.loc 1 5125 26 is_stmt 0 view .LVU1873
 6861 0024 0023     		movs	r3, #0
 6862 0026 84F85430 		strb	r3, [r4, #84]
5126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6863              		.loc 1 5126 5 is_stmt 1 view .LVU1874
 6864              	.LVL477:
5126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6865              		.loc 1 5126 13 is_stmt 0 view .LVU1875
 6866 002a 0124     		movs	r4, #1
 6867              	.LVL478:
5126:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6868              		.loc 1 5126 13 view .LVU1876
 6869 002c F3E7     		b	.L525
 6870              	.L531:
 6871 002e 00BF     		.align	2
 6872              	.L530:
 6873 0030 00000000 		.word	.LANCHOR10
 6874              		.cfi_endproc
 6875              	.LFE58:
 6877              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
ARM GAS  /tmp/cc6UspJj.s 			page 248


 6878              		.align	1
 6879              		.global	ulTaskNotifyValueClear
 6880              		.syntax unified
 6881              		.thumb
 6882              		.thumb_func
 6883              		.fpu fpv4-sp-d16
 6885              	ulTaskNotifyValueClear:
 6886              	.LVL479:
 6887              	.LFB59:
5144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6888              		.loc 1 5144 2 is_stmt 1 view -0
 6889              		.cfi_startproc
 6890              		@ args = 0, pretend = 0, frame = 0
 6891              		@ frame_needed = 0, uses_anonymous_args = 0
5144:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6892              		.loc 1 5144 2 is_stmt 0 view .LVU1878
 6893 0000 70B5     		push	{r4, r5, r6, lr}
 6894              	.LCFI61:
 6895              		.cfi_def_cfa_offset 16
 6896              		.cfi_offset 4, -16
 6897              		.cfi_offset 5, -12
 6898              		.cfi_offset 6, -8
 6899              		.cfi_offset 14, -4
 6900 0002 0C46     		mov	r4, r1
5145:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6901              		.loc 1 5145 2 is_stmt 1 view .LVU1879
5146:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6902              		.loc 1 5146 2 view .LVU1880
5150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6903              		.loc 1 5150 3 view .LVU1881
5150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6904              		.loc 1 5150 11 is_stmt 0 view .LVU1882
 6905 0004 0546     		mov	r5, r0
 6906 0006 60B1     		cbz	r0, .L535
 6907              	.LVL480:
 6908              	.L533:
5152:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6909              		.loc 1 5152 3 is_stmt 1 discriminator 4 view .LVU1883
 6910 0008 FFF7FEFF 		bl	vPortEnterCritical
 6911              	.LVL481:
5156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6912              		.loc 1 5156 4 discriminator 4 view .LVU1884
5156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6913              		.loc 1 5156 27 is_stmt 0 discriminator 4 view .LVU1885
 6914 000c 064B     		ldr	r3, .L536
 6915 000e 1B68     		ldr	r3, [r3]
5156:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6916              		.loc 1 5156 13 discriminator 4 view .LVU1886
 6917 0010 1E6D     		ldr	r6, [r3, #80]
 6918              	.LVL482:
5157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6919              		.loc 1 5157 4 is_stmt 1 discriminator 4 view .LVU1887
5157:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6920              		.loc 1 5157 27 is_stmt 0 discriminator 4 view .LVU1888
 6921 0012 2B6D     		ldr	r3, [r5, #80]
 6922 0014 23EA0403 		bic	r3, r3, r4
 6923 0018 2B65     		str	r3, [r5, #80]
ARM GAS  /tmp/cc6UspJj.s 			page 249


5159:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6924              		.loc 1 5159 3 is_stmt 1 discriminator 4 view .LVU1889
 6925 001a FFF7FEFF 		bl	vPortExitCritical
 6926              	.LVL483:
5161:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6927              		.loc 1 5161 3 discriminator 4 view .LVU1890
5162:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6928              		.loc 1 5162 2 is_stmt 0 discriminator 4 view .LVU1891
 6929 001e 3046     		mov	r0, r6
 6930 0020 70BD     		pop	{r4, r5, r6, pc}
 6931              	.LVL484:
 6932              	.L535:
5150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6933              		.loc 1 5150 11 discriminator 1 view .LVU1892
 6934 0022 014B     		ldr	r3, .L536
 6935 0024 1D68     		ldr	r5, [r3]
 6936              	.LVL485:
5150:../Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6937              		.loc 1 5150 11 discriminator 1 view .LVU1893
 6938 0026 EFE7     		b	.L533
 6939              	.L537:
 6940              		.align	2
 6941              	.L536:
 6942 0028 00000000 		.word	.LANCHOR10
 6943              		.cfi_endproc
 6944              	.LFE59:
 6946              		.global	pxCurrentTCB
 6947              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6948              		.align	2
 6949              		.set	.LANCHOR10,. + 0
 6952              	pxCurrentTCB:
 6953 0000 00000000 		.space	4
 6954              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6955              		.align	2
 6956              		.set	.LANCHOR2,. + 0
 6959              	pxDelayedTaskList:
 6960 0000 00000000 		.space	4
 6961              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6962              		.align	2
 6963              		.set	.LANCHOR8,. + 0
 6966              	pxOverflowDelayedTaskList:
 6967 0000 00000000 		.space	4
 6968              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6969              		.align	2
 6970              		.set	.LANCHOR4,. + 0
 6973              	pxReadyTasksLists:
 6974 0000 00000000 		.space	140
 6974      00000000 
 6974      00000000 
 6974      00000000 
 6974      00000000 
 6975              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6976              		.align	2
 6977              		.set	.LANCHOR9,. + 0
 6980              	uxCurrentNumberOfTasks:
 6981 0000 00000000 		.space	4
 6982              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
ARM GAS  /tmp/cc6UspJj.s 			page 250


 6983              		.align	2
 6984              		.set	.LANCHOR14,. + 0
 6987              	uxDeletedTasksWaitingCleanUp:
 6988 0000 00000000 		.space	4
 6989              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6990              		.align	2
 6991              		.set	.LANCHOR16,. + 0
 6994              	uxSchedulerSuspended:
 6995 0000 00000000 		.space	4
 6996              		.section	.bss.uxTaskNumber,"aw",%nobits
 6997              		.align	2
 6998              		.set	.LANCHOR12,. + 0
 7001              	uxTaskNumber:
 7002 0000 00000000 		.space	4
 7003              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 7004              		.align	2
 7005              		.set	.LANCHOR13,. + 0
 7008              	uxTopReadyPriority:
 7009 0000 00000000 		.space	4
 7010              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 7011              		.align	2
 7012              		.set	.LANCHOR5,. + 0
 7015              	xDelayedTaskList1:
 7016 0000 00000000 		.space	20
 7016      00000000 
 7016      00000000 
 7016      00000000 
 7016      00000000 
 7017              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 7018              		.align	2
 7019              		.set	.LANCHOR6,. + 0
 7022              	xDelayedTaskList2:
 7023 0000 00000000 		.space	20
 7023      00000000 
 7023      00000000 
 7023      00000000 
 7023      00000000 
 7024              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 7025              		.align	2
 7026              		.set	.LANCHOR17,. + 0
 7029              	xIdleTaskHandle:
 7030 0000 00000000 		.space	4
 7031              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 7032              		.align	2
 7033              		.set	.LANCHOR3,. + 0
 7036              	xNextTaskUnblockTime:
 7037 0000 00000000 		.space	4
 7038              		.section	.bss.xNumOfOverflows,"aw",%nobits
 7039              		.align	2
 7040              		.set	.LANCHOR18,. + 0
 7043              	xNumOfOverflows:
 7044 0000 00000000 		.space	4
 7045              		.section	.bss.xPendedTicks,"aw",%nobits
 7046              		.align	2
 7047              		.set	.LANCHOR20,. + 0
 7050              	xPendedTicks:
 7051 0000 00000000 		.space	4
ARM GAS  /tmp/cc6UspJj.s 			page 251


 7052              		.section	.bss.xPendingReadyList,"aw",%nobits
 7053              		.align	2
 7054              		.set	.LANCHOR1,. + 0
 7057              	xPendingReadyList:
 7058 0000 00000000 		.space	20
 7058      00000000 
 7058      00000000 
 7058      00000000 
 7058      00000000 
 7059              		.section	.bss.xSchedulerRunning,"aw",%nobits
 7060              		.align	2
 7061              		.set	.LANCHOR11,. + 0
 7064              	xSchedulerRunning:
 7065 0000 00000000 		.space	4
 7066              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 7067              		.align	2
 7068              		.set	.LANCHOR0,. + 0
 7071              	xSuspendedTaskList:
 7072 0000 00000000 		.space	20
 7072      00000000 
 7072      00000000 
 7072      00000000 
 7072      00000000 
 7073              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 7074              		.align	2
 7075              		.set	.LANCHOR7,. + 0
 7078              	xTasksWaitingTermination:
 7079 0000 00000000 		.space	20
 7079      00000000 
 7079      00000000 
 7079      00000000 
 7079      00000000 
 7080              		.section	.bss.xTickCount,"aw",%nobits
 7081              		.align	2
 7082              		.set	.LANCHOR15,. + 0
 7085              	xTickCount:
 7086 0000 00000000 		.space	4
 7087              		.section	.bss.xYieldPending,"aw",%nobits
 7088              		.align	2
 7089              		.set	.LANCHOR19,. + 0
 7092              	xYieldPending:
 7093 0000 00000000 		.space	4
 7094              		.text
 7095              	.Letext0:
 7096              		.file 3 "/usr/lib/gcc/arm-none-eabi/11.1.0/include/stddef.h"
 7097              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 7098              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 7099              		.file 6 "../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 7100              		.file 7 "../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 7101              		.file 8 "../Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 7102              		.file 9 "../Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 7103              		.file 10 "../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 7104              		.file 11 "/usr/arm-none-eabi/include/string.h"
ARM GAS  /tmp/cc6UspJj.s 			page 252


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cc6UspJj.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cc6UspJj.s:25     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cc6UspJj.s:114    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/cc6UspJj.s:120    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cc6UspJj.s:126    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cc6UspJj.s:169    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cc6UspJj.s:175    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cc6UspJj.s:181    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cc6UspJj.s:348    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cc6UspJj.s:354    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cc6UspJj.s:427    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cc6UspJj.s:439    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cc6UspJj.s:445    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cc6UspJj.s:581    .text.prvAddNewTaskToReadyList:0000000000000090 $d
     /tmp/cc6UspJj.s:591    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cc6UspJj.s:597    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cc6UspJj.s:674    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cc6UspJj.s:680    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cc6UspJj.s:753    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/cc6UspJj.s:760    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cc6UspJj.s:766    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cc6UspJj.s:886    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/cc6UspJj.s:897    .text.prvIdleTask:0000000000000000 $t
     /tmp/cc6UspJj.s:903    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cc6UspJj.s:963    .text.prvIdleTask:000000000000002c $d
     /tmp/cc6UspJj.s:968    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/cc6UspJj.s:975    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/cc6UspJj.s:1137   .text.xTaskCreate:0000000000000000 $t
     /tmp/cc6UspJj.s:1144   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cc6UspJj.s:1269   .text.vTaskDelete:0000000000000000 $t
     /tmp/cc6UspJj.s:1276   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cc6UspJj.s:1461   .text.vTaskDelete:00000000000000bc $d
     /tmp/cc6UspJj.s:1474   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cc6UspJj.s:1481   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cc6UspJj.s:1527   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cc6UspJj.s:1532   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cc6UspJj.s:1539   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cc6UspJj.s:1618   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/cc6UspJj.s:1623   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cc6UspJj.s:1630   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cc6UspJj.s:1872   .text.vTaskPrioritySet:00000000000000d8 $d
     /tmp/cc6UspJj.s:1879   .text.vTaskResume:0000000000000000 $t
     /tmp/cc6UspJj.s:1886   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cc6UspJj.s:2016   .text.vTaskResume:000000000000007c $d
     /tmp/cc6UspJj.s:2023   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cc6UspJj.s:2030   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cc6UspJj.s:2198   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/cc6UspJj.s:2207   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/cc6UspJj.s:2211   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cc6UspJj.s:2218   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cc6UspJj.s:2320   .text.vTaskStartScheduler:000000000000005c $d
     /tmp/cc6UspJj.s:2330   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cc6UspJj.s:2337   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cc6UspJj.s:2380   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/cc6UspJj.s:2385   .text.vTaskSuspendAll:0000000000000000 $t
ARM GAS  /tmp/cc6UspJj.s 			page 253


     /tmp/cc6UspJj.s:2392   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cc6UspJj.s:2411   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cc6UspJj.s:2416   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cc6UspJj.s:2423   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cc6UspJj.s:2444   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cc6UspJj.s:2449   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cc6UspJj.s:2456   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cc6UspJj.s:2485   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/cc6UspJj.s:2490   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cc6UspJj.s:2497   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cc6UspJj.s:2513   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cc6UspJj.s:2518   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cc6UspJj.s:2525   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cc6UspJj.s:2585   .text.pcTaskGetName:0000000000000024 $d
     /tmp/cc6UspJj.s:2590   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cc6UspJj.s:2597   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cc6UspJj.s:2863   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/cc6UspJj.s:2878   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cc6UspJj.s:2885   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cc6UspJj.s:3119   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/cc6UspJj.s:3131   .text.vTaskDelay:0000000000000000 $t
     /tmp/cc6UspJj.s:3138   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cc6UspJj.s:3230   .text.vTaskDelay:0000000000000048 $d
     /tmp/cc6UspJj.s:3235   .text.xTaskCatchUpTicks:0000000000000000 $t
     /tmp/cc6UspJj.s:3242   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
     /tmp/cc6UspJj.s:3309   .text.xTaskCatchUpTicks:0000000000000030 $d
     /tmp/cc6UspJj.s:3315   .text.vTaskSetApplicationTaskTag:0000000000000000 $t
     /tmp/cc6UspJj.s:3322   .text.vTaskSetApplicationTaskTag:0000000000000000 vTaskSetApplicationTaskTag
     /tmp/cc6UspJj.s:3368   .text.vTaskSetApplicationTaskTag:000000000000001c $d
     /tmp/cc6UspJj.s:3373   .text.xTaskGetApplicationTaskTag:0000000000000000 $t
     /tmp/cc6UspJj.s:3380   .text.xTaskGetApplicationTaskTag:0000000000000000 xTaskGetApplicationTaskTag
     /tmp/cc6UspJj.s:3426   .text.xTaskGetApplicationTaskTag:000000000000001c $d
     /tmp/cc6UspJj.s:3431   .text.xTaskGetApplicationTaskTagFromISR:0000000000000000 $t
     /tmp/cc6UspJj.s:3438   .text.xTaskGetApplicationTaskTagFromISR:0000000000000000 xTaskGetApplicationTaskTagFromISR
     /tmp/cc6UspJj.s:3512   .text.xTaskGetApplicationTaskTagFromISR:0000000000000028 $d
     /tmp/cc6UspJj.s:3517   .text.xTaskCallApplicationTaskHook:0000000000000000 $t
     /tmp/cc6UspJj.s:3524   .text.xTaskCallApplicationTaskHook:0000000000000000 xTaskCallApplicationTaskHook
     /tmp/cc6UspJj.s:3579   .text.xTaskCallApplicationTaskHook:000000000000001c $d
     /tmp/cc6UspJj.s:3584   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cc6UspJj.s:3591   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cc6UspJj.s:3784   .text.vTaskSwitchContext:00000000000000b8 $d
     /tmp/cc6UspJj.s:3795   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cc6UspJj.s:3802   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cc6UspJj.s:4006   .text.vTaskSuspend:00000000000000d0 $d
     /tmp/cc6UspJj.s:4017   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cc6UspJj.s:4024   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cc6UspJj.s:4091   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/cc6UspJj.s:4096   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cc6UspJj.s:4103   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cc6UspJj.s:4218   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/cc6UspJj.s:4224   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cc6UspJj.s:4231   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cc6UspJj.s:4361   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/cc6UspJj.s:4371   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cc6UspJj.s:4378   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/cc6UspJj.s:4512   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/cc6UspJj.s:4521   .text.vTaskSetTimeOutState:0000000000000000 $t
ARM GAS  /tmp/cc6UspJj.s 			page 254


     /tmp/cc6UspJj.s:4528   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cc6UspJj.s:4597   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/cc6UspJj.s:4603   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/cc6UspJj.s:4610   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/cc6UspJj.s:4633   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/cc6UspJj.s:4639   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cc6UspJj.s:4646   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cc6UspJj.s:4821   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/cc6UspJj.s:4828   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cc6UspJj.s:4835   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cc6UspJj.s:4852   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cc6UspJj.s:4857   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/cc6UspJj.s:4864   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cc6UspJj.s:4883   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cc6UspJj.s:4888   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cc6UspJj.s:4895   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cc6UspJj.s:4933   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/cc6UspJj.s:4939   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/cc6UspJj.s:4946   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/cc6UspJj.s:5112   .text.xTaskPriorityInherit:00000000000000a0 $d
     /tmp/cc6UspJj.s:5119   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cc6UspJj.s:5126   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cc6UspJj.s:5321   .text.xTaskPriorityDisinherit:00000000000000a4 $d
     /tmp/cc6UspJj.s:5328   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/cc6UspJj.s:5335   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/cc6UspJj.s:5531   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000a8 $d
     /tmp/cc6UspJj.s:5538   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cc6UspJj.s:5545   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cc6UspJj.s:5572   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cc6UspJj.s:5577   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cc6UspJj.s:5584   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cc6UspJj.s:5615   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cc6UspJj.s:5620   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cc6UspJj.s:5627   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cc6UspJj.s:5749   .text.ulTaskNotifyTake:0000000000000074 $d
     /tmp/cc6UspJj.s:5754   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cc6UspJj.s:5761   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cc6UspJj.s:5901   .text.xTaskNotifyWait:0000000000000094 $d
     /tmp/cc6UspJj.s:5906   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cc6UspJj.s:5913   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cc6UspJj.s:5969   .text.xTaskGenericNotify:000000000000002a $d
     /tmp/cc6UspJj.s:6193   .text.xTaskGenericNotify:00000000000000f4 $d
     /tmp/cc6UspJj.s:6200   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cc6UspJj.s:6207   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cc6UspJj.s:6287   .text.xTaskGenericNotifyFromISR:0000000000000042 $d
     /tmp/cc6UspJj.s:6554   .text.xTaskGenericNotifyFromISR:000000000000011c $d
     /tmp/cc6UspJj.s:6564   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cc6UspJj.s:6571   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cc6UspJj.s:6790   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/cc6UspJj.s:6800   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cc6UspJj.s:6807   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cc6UspJj.s:6873   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/cc6UspJj.s:6878   .text.ulTaskNotifyValueClear:0000000000000000 $t
     /tmp/cc6UspJj.s:6885   .text.ulTaskNotifyValueClear:0000000000000000 ulTaskNotifyValueClear
     /tmp/cc6UspJj.s:6942   .text.ulTaskNotifyValueClear:0000000000000028 $d
     /tmp/cc6UspJj.s:6952   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cc6UspJj.s:6948   .bss.pxCurrentTCB:0000000000000000 $d
ARM GAS  /tmp/cc6UspJj.s 			page 255


     /tmp/cc6UspJj.s:6955   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cc6UspJj.s:6959   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cc6UspJj.s:6962   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cc6UspJj.s:6966   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cc6UspJj.s:6969   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cc6UspJj.s:6973   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cc6UspJj.s:6976   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cc6UspJj.s:6980   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cc6UspJj.s:6983   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cc6UspJj.s:6987   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cc6UspJj.s:6990   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cc6UspJj.s:6994   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/cc6UspJj.s:6997   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cc6UspJj.s:7001   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cc6UspJj.s:7004   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cc6UspJj.s:7008   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cc6UspJj.s:7011   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cc6UspJj.s:7015   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cc6UspJj.s:7018   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cc6UspJj.s:7022   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cc6UspJj.s:7025   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cc6UspJj.s:7029   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cc6UspJj.s:7032   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cc6UspJj.s:7036   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cc6UspJj.s:7039   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cc6UspJj.s:7043   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cc6UspJj.s:7046   .bss.xPendedTicks:0000000000000000 $d
     /tmp/cc6UspJj.s:7050   .bss.xPendedTicks:0000000000000000 xPendedTicks
     /tmp/cc6UspJj.s:7053   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cc6UspJj.s:7057   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cc6UspJj.s:7060   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cc6UspJj.s:7064   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cc6UspJj.s:7067   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cc6UspJj.s:7071   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cc6UspJj.s:7074   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cc6UspJj.s:7078   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cc6UspJj.s:7081   .bss.xTickCount:0000000000000000 $d
     /tmp/cc6UspJj.s:7085   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cc6UspJj.s:7088   .bss.xYieldPending:0000000000000000 $d
     /tmp/cc6UspJj.s:7092   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/cc6UspJj.s:5975   .text.xTaskGenericNotify:000000000000002f $d
     /tmp/cc6UspJj.s:5975   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/cc6UspJj.s:6293   .text.xTaskGenericNotifyFromISR:0000000000000047 $d
     /tmp/cc6UspJj.s:6293   .text.xTaskGenericNotifyFromISR:0000000000000048 $t

UNDEFINED SYMBOLS
memset
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
vApplicationIdleHook
ARM GAS  /tmp/cc6UspJj.s 			page 256


pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
vApplicationStackOverflowHook
